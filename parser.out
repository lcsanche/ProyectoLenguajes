Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALIAS
    ENSURE
    INCLUDE
    QUESTION
    SELF

Grammar

Rule 0     S' -> instrucciones
Rule 1     instrucciones -> asignacion
Rule 2     instrucciones -> expression
Rule 3     instrucciones -> funciones
Rule 4     instrucciones -> comparacion
Rule 5     instrucciones -> condicional
Rule 6     instrucciones -> while
Rule 7     instrucciones -> for
Rule 8     instrucciones -> impresion
Rule 9     instrucciones -> input
Rule 10    instrucciones -> callFuncion
Rule 11    instrucciones -> addValueHash
Rule 12    instrucciones -> modValueHash
Rule 13    instrucciones -> deleteValueHash
Rule 14    instrucciones -> insertArray
Rule 15    instrucciones -> deleteArray
Rule 16    instrucciones -> searchStack
Rule 17    instrucciones -> pushStack
Rule 18    cuerpo -> asignacion
Rule 19    cuerpo -> expression
Rule 20    cuerpo -> comparacion
Rule 21    cuerpo -> condicional
Rule 22    cuerpo -> impresion
Rule 23    cuerpo -> for
Rule 24    cuerpo -> while
Rule 25    cuerpo -> input
Rule 26    cuerpo -> callFuncion
Rule 27    cuerpo -> addValueHash
Rule 28    cuerpo -> modValueHash
Rule 29    cuerpo -> deleteValueHash
Rule 30    cuerpo -> insertArray
Rule 31    cuerpo -> deleteArray
Rule 32    cuerpo -> pushStack
Rule 33    cuerpo -> searchStack
Rule 34    asignacion -> VARIABLE ASIGN expression
Rule 35    asignacion -> VARIABLE ASIGN comparacion
Rule 36    asignacion -> VARIABLE ASIGN callFuncion
Rule 37    asignacion -> VARIABLE ASIGN diccionario
Rule 38    asignacion -> VARIABLE ASIGN getValueHash
Rule 39    asignacion -> VARIABLE ASIGN array
Rule 40    asignacion -> VARIABLE ASIGN stack
Rule 41    expression -> term
Rule 42    expression -> boleano
Rule 43    term -> factor
Rule 44    factor -> NUMBER
Rule 45    factor -> STRING
Rule 46    factor -> FLOAT
Rule 47    factor -> VARIABLE
Rule 48    factor -> LPAR expression RPAR
Rule 49    expression -> expression PLUS term
Rule 50    expression -> expression MINUS term
Rule 51    term -> term TIMES factor
Rule 52    term -> term DIVIDE factor
Rule 53    term -> term EXPONENTIATION factor
Rule 54    comparacion -> expression comparador expression
Rule 55    comparacion -> expression comparador expression AND comparacion
Rule 56    comparacion -> expression comparador expression OR comparacion
Rule 57    comparador -> GREATER
Rule 58    comparador -> GREATER_OR_EQUAL
Rule 59    comparador -> MINOR
Rule 60    comparador -> MINOR_OR_EQUAL
Rule 61    comparador -> ASIGN ASIGN
Rule 62    comparador -> NOT ASIGN
Rule 63    condicional -> IF comparacion D_POINT cuerpo END
Rule 64    condicional -> IF comparacion D_POINT cuerpo END cond_else
Rule 65    cond_else -> ELSE D_POINT cuerpo END
Rule 66    impresion -> PUTS STRING
Rule 67    input -> VARIABLE ASIGN GETS
Rule 68    parametros -> VARIABLE
Rule 69    parametros -> VARIABLE COMMA parametros
Rule 70    encabezado -> DEF VARIABLE LPAR RPAR
Rule 71    encabezado -> DEF VARIABLE LPAR parametros RPAR
Rule 72    funciones -> encabezado cuerpo END
Rule 73    funciones -> encabezado RETURN expression END
Rule 74    funciones -> encabezado cuerpo RETURN expression END
Rule 75    callFuncion -> VARIABLE LPAR RPAR
Rule 76    callFuncion -> VARIABLE LPAR parametros RPAR
Rule 77    boleano -> TRUE
Rule 78    boleano -> FALSE
Rule 79    diccionario -> LKEY cuerpoHash RKEY
Rule 80    cuerpoHash -> expression ASIGN GREATER expression
Rule 81    cuerpoHash -> expression ASIGN GREATER expression COMMA cuerpoHash
Rule 82    getValueHash -> VARIABLE LCOR expression RCOR
Rule 83    addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression
Rule 84    modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression
Rule 85    deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR
Rule 86    while -> WHILE LPAR comparacion RPAR cuerpo END
Rule 87    while -> WHILE LPAR comparacion RPAR cuerpo END while
Rule 88    parametrosA -> factor
Rule 89    parametrosA -> factor COMMA parametrosA
Rule 90    array -> LCOR parametrosA RCOR
Rule 91    array -> LCOR RCOR
Rule 92    argumentosA -> NUMBER
Rule 93    argumentosA -> NUMBER COMMA factor
Rule 94    insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR
Rule 95    deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR
Rule 96    for -> FOR VARIABLE IN LPAR NUMBER POINT POINT NUMBER RPAR DO cuerpo END
Rule 97    for -> FOR VARIABLE IN LPAR NUMBER POINT POINT NUMBER RPAR DO cuerpo END for
Rule 98    vacio -> 
Rule 99    stack -> LCOR parametrosA RCOR
Rule 100   stack -> LCOR vacio RCOR
Rule 101   searchStack -> VARIABLE POINT SEARCH LPAR factor RPAR
Rule 102   pushStack -> VARIABLE POINT PUSH LPAR factor RPAR

Terminals, with rules where they appear

                     : 98
ALIAS                : 
AND                  : 55
ASIGN                : 34 35 36 37 38 39 40 61 61 62 67 80 81 83 84
COMMA                : 69 81 89 93
DEF                  : 70 71
DELETE               : 85
DELETE_AT            : 95
DIVIDE               : 52
DO                   : 96 97
D_POINT              : 63 64 65
ELSE                 : 65
END                  : 63 64 65 72 73 74 86 87 96 97
ENSURE               : 
EXPONENTIATION       : 53
FALSE                : 78
FLOAT                : 46
FOR                  : 96 97
GETS                 : 67
GREATER              : 57 80 81
GREATER_OR_EQUAL     : 58
IF                   : 63 64
IN                   : 96 97
INCLUDE              : 
INSERT               : 94
LCOR                 : 82 83 84 90 91 99 100
LKEY                 : 79
LPAR                 : 48 70 71 75 76 85 86 87 94 95 96 97 101 102
MINOR                : 59
MINOR_OR_EQUAL       : 60
MINUS                : 50
NOT                  : 62
NUMBER               : 44 92 93 95 96 96 97 97
OR                   : 56
PLUS                 : 49
POINT                : 85 94 95 96 96 97 97 101 102
PUSH                 : 102
PUTS                 : 66
QUESTION             : 
RCOR                 : 82 83 84 90 91 99 100
RETURN               : 73 74
RKEY                 : 79
RPAR                 : 48 70 71 75 76 85 86 87 94 95 96 97 101 102
SEARCH               : 101
SELF                 : 
STRING               : 45 66
TIMES                : 51
TRUE                 : 77
VARIABLE             : 34 35 36 37 38 39 40 47 67 68 69 70 71 75 76 82 83 84 85 94 95 96 97 101 102
WHILE                : 86 87
error                : 

Nonterminals, with rules where they appear

addValueHash         : 11 27
argumentosA          : 94
array                : 39
asignacion           : 1 18
boleano              : 42
callFuncion          : 10 26 36
comparacion          : 4 20 35 55 56 63 64 86 87
comparador           : 54 55 56
cond_else            : 64
condicional          : 5 21
cuerpo               : 63 64 65 72 74 86 87 96 97
cuerpoHash           : 79 81
deleteArray          : 15 31
deleteValueHash      : 13 29
diccionario          : 37
encabezado           : 72 73 74
expression           : 2 19 34 48 49 50 54 54 55 55 56 56 73 74 80 80 81 81 82 83 83 84 84 85
factor               : 43 51 52 53 88 89 93 101 102
for                  : 7 23 97
funciones            : 3
getValueHash         : 38
impresion            : 8 22
input                : 9 25
insertArray          : 14 30
instrucciones        : 0
modValueHash         : 12 28
parametros           : 69 71 76
parametrosA          : 89 90 99
pushStack            : 17 32
searchStack          : 16 33
stack                : 40
term                 : 41 49 50 51 52 53
vacio                : 100
while                : 6 24 87

Parsing method: LALR

state 0

    (0) S' -> . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . expression
    (3) instrucciones -> . funciones
    (4) instrucciones -> . comparacion
    (5) instrucciones -> . condicional
    (6) instrucciones -> . while
    (7) instrucciones -> . for
    (8) instrucciones -> . impresion
    (9) instrucciones -> . input
    (10) instrucciones -> . callFuncion
    (11) instrucciones -> . addValueHash
    (12) instrucciones -> . modValueHash
    (13) instrucciones -> . deleteValueHash
    (14) instrucciones -> . insertArray
    (15) instrucciones -> . deleteArray
    (16) instrucciones -> . searchStack
    (17) instrucciones -> . pushStack
    (34) asignacion -> . VARIABLE ASIGN expression
    (35) asignacion -> . VARIABLE ASIGN comparacion
    (36) asignacion -> . VARIABLE ASIGN callFuncion
    (37) asignacion -> . VARIABLE ASIGN diccionario
    (38) asignacion -> . VARIABLE ASIGN getValueHash
    (39) asignacion -> . VARIABLE ASIGN array
    (40) asignacion -> . VARIABLE ASIGN stack
    (41) expression -> . term
    (42) expression -> . boleano
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (72) funciones -> . encabezado cuerpo END
    (73) funciones -> . encabezado RETURN expression END
    (74) funciones -> . encabezado cuerpo RETURN expression END
    (54) comparacion -> . expression comparador expression
    (55) comparacion -> . expression comparador expression AND comparacion
    (56) comparacion -> . expression comparador expression OR comparacion
    (63) condicional -> . IF comparacion D_POINT cuerpo END
    (64) condicional -> . IF comparacion D_POINT cuerpo END cond_else
    (86) while -> . WHILE LPAR comparacion RPAR cuerpo END
    (87) while -> . WHILE LPAR comparacion RPAR cuerpo END while
    (96) for -> . FOR VARIABLE IN LPAR NUMBER POINT POINT NUMBER RPAR DO cuerpo END
    (97) for -> . FOR VARIABLE IN LPAR NUMBER POINT POINT NUMBER RPAR DO cuerpo END for
    (66) impresion -> . PUTS STRING
    (67) input -> . VARIABLE ASIGN GETS
    (75) callFuncion -> . VARIABLE LPAR RPAR
    (76) callFuncion -> . VARIABLE LPAR parametros RPAR
    (83) addValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (84) modValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (85) deleteValueHash -> . VARIABLE POINT DELETE LPAR expression RPAR
    (94) insertArray -> . VARIABLE POINT INSERT LPAR argumentosA RPAR
    (95) deleteArray -> . VARIABLE POINT DELETE_AT LPAR NUMBER RPAR
    (101) searchStack -> . VARIABLE POINT SEARCH LPAR factor RPAR
    (102) pushStack -> . VARIABLE POINT PUSH LPAR factor RPAR
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (77) boleano -> . TRUE
    (78) boleano -> . FALSE
    (70) encabezado -> . DEF VARIABLE LPAR RPAR
    (71) encabezado -> . DEF VARIABLE LPAR parametros RPAR
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    VARIABLE        shift and go to state 19
    IF              shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 26
    PUTS            shift and go to state 28
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    DEF             shift and go to state 33
    NUMBER          shift and go to state 27
    STRING          shift and go to state 29
    FLOAT           shift and go to state 34
    LPAR            shift and go to state 25

    instrucciones                  shift and go to state 1
    asignacion                     shift and go to state 2
    expression                     shift and go to state 3
    funciones                      shift and go to state 4
    comparacion                    shift and go to state 5
    condicional                    shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    impresion                      shift and go to state 9
    input                          shift and go to state 10
    callFuncion                    shift and go to state 11
    addValueHash                   shift and go to state 12
    modValueHash                   shift and go to state 13
    deleteValueHash                shift and go to state 14
    insertArray                    shift and go to state 15
    deleteArray                    shift and go to state 16
    searchStack                    shift and go to state 17
    pushStack                      shift and go to state 18
    term                           shift and go to state 20
    boleano                        shift and go to state 21
    encabezado                     shift and go to state 22
    factor                         shift and go to state 30

state 1

    (0) S' -> instrucciones .



state 2

    (1) instrucciones -> asignacion .

    $end            reduce using rule 1 (instrucciones -> asignacion .)


state 3

    (2) instrucciones -> expression .
    (49) expression -> expression . PLUS term
    (50) expression -> expression . MINUS term
    (54) comparacion -> expression . comparador expression
    (55) comparacion -> expression . comparador expression AND comparacion
    (56) comparacion -> expression . comparador expression OR comparacion
    (57) comparador -> . GREATER
    (58) comparador -> . GREATER_OR_EQUAL
    (59) comparador -> . MINOR
    (60) comparador -> . MINOR_OR_EQUAL
    (61) comparador -> . ASIGN ASIGN
    (62) comparador -> . NOT ASIGN

    $end            reduce using rule 2 (instrucciones -> expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    GREATER         shift and go to state 38
    GREATER_OR_EQUAL shift and go to state 39
    MINOR           shift and go to state 40
    MINOR_OR_EQUAL  shift and go to state 41
    ASIGN           shift and go to state 42
    NOT             shift and go to state 43

    comparador                     shift and go to state 37

state 4

    (3) instrucciones -> funciones .

    $end            reduce using rule 3 (instrucciones -> funciones .)


state 5

    (4) instrucciones -> comparacion .

    $end            reduce using rule 4 (instrucciones -> comparacion .)


state 6

    (5) instrucciones -> condicional .

    $end            reduce using rule 5 (instrucciones -> condicional .)


state 7

    (6) instrucciones -> while .

    $end            reduce using rule 6 (instrucciones -> while .)


state 8

    (7) instrucciones -> for .

    $end            reduce using rule 7 (instrucciones -> for .)


state 9

    (8) instrucciones -> impresion .

    $end            reduce using rule 8 (instrucciones -> impresion .)


state 10

    (9) instrucciones -> input .

    $end            reduce using rule 9 (instrucciones -> input .)


state 11

    (10) instrucciones -> callFuncion .

    $end            reduce using rule 10 (instrucciones -> callFuncion .)


state 12

    (11) instrucciones -> addValueHash .

    $end            reduce using rule 11 (instrucciones -> addValueHash .)


state 13

    (12) instrucciones -> modValueHash .

    $end            reduce using rule 12 (instrucciones -> modValueHash .)


state 14

    (13) instrucciones -> deleteValueHash .

    $end            reduce using rule 13 (instrucciones -> deleteValueHash .)


state 15

    (14) instrucciones -> insertArray .

    $end            reduce using rule 14 (instrucciones -> insertArray .)


state 16

    (15) instrucciones -> deleteArray .

    $end            reduce using rule 15 (instrucciones -> deleteArray .)


state 17

    (16) instrucciones -> searchStack .

    $end            reduce using rule 16 (instrucciones -> searchStack .)


state 18

    (17) instrucciones -> pushStack .

    $end            reduce using rule 17 (instrucciones -> pushStack .)


state 19

    (34) asignacion -> VARIABLE . ASIGN expression
    (35) asignacion -> VARIABLE . ASIGN comparacion
    (36) asignacion -> VARIABLE . ASIGN callFuncion
    (37) asignacion -> VARIABLE . ASIGN diccionario
    (38) asignacion -> VARIABLE . ASIGN getValueHash
    (39) asignacion -> VARIABLE . ASIGN array
    (40) asignacion -> VARIABLE . ASIGN stack
    (67) input -> VARIABLE . ASIGN GETS
    (75) callFuncion -> VARIABLE . LPAR RPAR
    (76) callFuncion -> VARIABLE . LPAR parametros RPAR
    (83) addValueHash -> VARIABLE . LCOR expression RCOR ASIGN expression
    (84) modValueHash -> VARIABLE . LCOR expression RCOR ASIGN expression
    (85) deleteValueHash -> VARIABLE . POINT DELETE LPAR expression RPAR
    (94) insertArray -> VARIABLE . POINT INSERT LPAR argumentosA RPAR
    (95) deleteArray -> VARIABLE . POINT DELETE_AT LPAR NUMBER RPAR
    (101) searchStack -> VARIABLE . POINT SEARCH LPAR factor RPAR
    (102) pushStack -> VARIABLE . POINT PUSH LPAR factor RPAR
    (47) factor -> VARIABLE .

  ! shift/reduce conflict for ASIGN resolved as shift
    ASIGN           shift and go to state 44
    LPAR            shift and go to state 45
    LCOR            shift and go to state 46
    POINT           shift and go to state 47
    TIMES           reduce using rule 47 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 47 (factor -> VARIABLE .)
    EXPONENTIATION  reduce using rule 47 (factor -> VARIABLE .)
    PLUS            reduce using rule 47 (factor -> VARIABLE .)
    MINUS           reduce using rule 47 (factor -> VARIABLE .)
    GREATER         reduce using rule 47 (factor -> VARIABLE .)
    GREATER_OR_EQUAL reduce using rule 47 (factor -> VARIABLE .)
    MINOR           reduce using rule 47 (factor -> VARIABLE .)
    MINOR_OR_EQUAL  reduce using rule 47 (factor -> VARIABLE .)
    NOT             reduce using rule 47 (factor -> VARIABLE .)
    $end            reduce using rule 47 (factor -> VARIABLE .)

  ! ASIGN           [ reduce using rule 47 (factor -> VARIABLE .) ]


state 20

    (41) expression -> term .
    (51) term -> term . TIMES factor
    (52) term -> term . DIVIDE factor
    (53) term -> term . EXPONENTIATION factor

    PLUS            reduce using rule 41 (expression -> term .)
    MINUS           reduce using rule 41 (expression -> term .)
    GREATER         reduce using rule 41 (expression -> term .)
    GREATER_OR_EQUAL reduce using rule 41 (expression -> term .)
    MINOR           reduce using rule 41 (expression -> term .)
    MINOR_OR_EQUAL  reduce using rule 41 (expression -> term .)
    ASIGN           reduce using rule 41 (expression -> term .)
    NOT             reduce using rule 41 (expression -> term .)
    $end            reduce using rule 41 (expression -> term .)
    END             reduce using rule 41 (expression -> term .)
    RETURN          reduce using rule 41 (expression -> term .)
    RPAR            reduce using rule 41 (expression -> term .)
    AND             reduce using rule 41 (expression -> term .)
    OR              reduce using rule 41 (expression -> term .)
    D_POINT         reduce using rule 41 (expression -> term .)
    RCOR            reduce using rule 41 (expression -> term .)
    COMMA           reduce using rule 41 (expression -> term .)
    RKEY            reduce using rule 41 (expression -> term .)
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    EXPONENTIATION  shift and go to state 50


state 21

    (42) expression -> boleano .

    PLUS            reduce using rule 42 (expression -> boleano .)
    MINUS           reduce using rule 42 (expression -> boleano .)
    GREATER         reduce using rule 42 (expression -> boleano .)
    GREATER_OR_EQUAL reduce using rule 42 (expression -> boleano .)
    MINOR           reduce using rule 42 (expression -> boleano .)
    MINOR_OR_EQUAL  reduce using rule 42 (expression -> boleano .)
    ASIGN           reduce using rule 42 (expression -> boleano .)
    NOT             reduce using rule 42 (expression -> boleano .)
    $end            reduce using rule 42 (expression -> boleano .)
    END             reduce using rule 42 (expression -> boleano .)
    RETURN          reduce using rule 42 (expression -> boleano .)
    RPAR            reduce using rule 42 (expression -> boleano .)
    AND             reduce using rule 42 (expression -> boleano .)
    OR              reduce using rule 42 (expression -> boleano .)
    D_POINT         reduce using rule 42 (expression -> boleano .)
    RCOR            reduce using rule 42 (expression -> boleano .)
    COMMA           reduce using rule 42 (expression -> boleano .)
    RKEY            reduce using rule 42 (expression -> boleano .)


state 22

    (72) funciones -> encabezado . cuerpo END
    (73) funciones -> encabezado . RETURN expression END
    (74) funciones -> encabezado . cuerpo RETURN expression END
    (18) cuerpo -> . asignacion
    (19) cuerpo -> . expression
    (20) cuerpo -> . comparacion
    (21) cuerpo -> . condicional
    (22) cuerpo -> . impresion
    (23) cuerpo -> . for
    (24) cuerpo -> . while
    (25) cuerpo -> . input
    (26) cuerpo -> . callFuncion
    (27) cuerpo -> . addValueHash
    (28) cuerpo -> . modValueHash
    (29) cuerpo -> . deleteValueHash
    (30) cuerpo -> . insertArray
    (31) cuerpo -> . deleteArray
    (32) cuerpo -> . pushStack
    (33) cuerpo -> . searchStack
    (34) asignacion -> . VARIABLE ASIGN expression
    (35) asignacion -> . VARIABLE ASIGN comparacion
    (36) asignacion -> . VARIABLE ASIGN callFuncion
    (37) asignacion -> . VARIABLE ASIGN diccionario
    (38) asignacion -> . VARIABLE ASIGN getValueHash
    (39) asignacion -> . VARIABLE ASIGN array
    (40) asignacion -> . VARIABLE ASIGN stack
    (41) expression -> . term
    (42) expression -> . boleano
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (54) comparacion -> . expression comparador expression
    (55) comparacion -> . expression comparador expression AND comparacion
    (56) comparacion -> . expression comparador expression OR comparacion
    (63) condicional -> . IF comparacion D_POINT cuerpo END
    (64) condicional -> . IF comparacion D_POINT cuerpo END cond_else
    (66) impresion -> . PUTS STRING
    (96) for -> . FOR VARIABLE IN LPAR NUMBER POINT POINT NUMBER RPAR DO cuerpo END
    (97) for -> . FOR VARIABLE IN LPAR NUMBER POINT POINT NUMBER RPAR DO cuerpo END for
    (86) while -> . WHILE LPAR comparacion RPAR cuerpo END
    (87) while -> . WHILE LPAR comparacion RPAR cuerpo END while
    (67) input -> . VARIABLE ASIGN GETS
    (75) callFuncion -> . VARIABLE LPAR RPAR
    (76) callFuncion -> . VARIABLE LPAR parametros RPAR
    (83) addValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (84) modValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (85) deleteValueHash -> . VARIABLE POINT DELETE LPAR expression RPAR
    (94) insertArray -> . VARIABLE POINT INSERT LPAR argumentosA RPAR
    (95) deleteArray -> . VARIABLE POINT DELETE_AT LPAR NUMBER RPAR
    (102) pushStack -> . VARIABLE POINT PUSH LPAR factor RPAR
    (101) searchStack -> . VARIABLE POINT SEARCH LPAR factor RPAR
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (77) boleano -> . TRUE
    (78) boleano -> . FALSE
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    RETURN          shift and go to state 52
    VARIABLE        shift and go to state 69
    IF              shift and go to state 23
    PUTS            shift and go to state 28
    FOR             shift and go to state 26
    WHILE           shift and go to state 24
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NUMBER          shift and go to state 27
    STRING          shift and go to state 29
    FLOAT           shift and go to state 34
    LPAR            shift and go to state 25

    cuerpo                         shift and go to state 51
    expression                     shift and go to state 53
    asignacion                     shift and go to state 54
    comparacion                    shift and go to state 55
    condicional                    shift and go to state 56
    impresion                      shift and go to state 57
    for                            shift and go to state 58
    while                          shift and go to state 59
    input                          shift and go to state 60
    callFuncion                    shift and go to state 61
    addValueHash                   shift and go to state 62
    modValueHash                   shift and go to state 63
    deleteValueHash                shift and go to state 64
    insertArray                    shift and go to state 65
    deleteArray                    shift and go to state 66
    pushStack                      shift and go to state 67
    searchStack                    shift and go to state 68
    term                           shift and go to state 20
    boleano                        shift and go to state 21
    factor                         shift and go to state 30

state 23

    (63) condicional -> IF . comparacion D_POINT cuerpo END
    (64) condicional -> IF . comparacion D_POINT cuerpo END cond_else
    (54) comparacion -> . expression comparador expression
    (55) comparacion -> . expression comparador expression AND comparacion
    (56) comparacion -> . expression comparador expression OR comparacion
    (41) expression -> . term
    (42) expression -> . boleano
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (77) boleano -> . TRUE
    (78) boleano -> . FALSE
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NUMBER          shift and go to state 27
    STRING          shift and go to state 29
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 72
    LPAR            shift and go to state 25

    comparacion                    shift and go to state 70
    expression                     shift and go to state 71
    term                           shift and go to state 20
    boleano                        shift and go to state 21
    factor                         shift and go to state 30

state 24

    (86) while -> WHILE . LPAR comparacion RPAR cuerpo END
    (87) while -> WHILE . LPAR comparacion RPAR cuerpo END while

    LPAR            shift and go to state 73


state 25

    (48) factor -> LPAR . expression RPAR
    (41) expression -> . term
    (42) expression -> . boleano
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (77) boleano -> . TRUE
    (78) boleano -> . FALSE
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NUMBER          shift and go to state 27
    STRING          shift and go to state 29
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 72
    LPAR            shift and go to state 25

    expression                     shift and go to state 74
    term                           shift and go to state 20
    boleano                        shift and go to state 21
    factor                         shift and go to state 30

state 26

    (96) for -> FOR . VARIABLE IN LPAR NUMBER POINT POINT NUMBER RPAR DO cuerpo END
    (97) for -> FOR . VARIABLE IN LPAR NUMBER POINT POINT NUMBER RPAR DO cuerpo END for

    VARIABLE        shift and go to state 75


state 27

    (44) factor -> NUMBER .

    TIMES           reduce using rule 44 (factor -> NUMBER .)
    DIVIDE          reduce using rule 44 (factor -> NUMBER .)
    EXPONENTIATION  reduce using rule 44 (factor -> NUMBER .)
    PLUS            reduce using rule 44 (factor -> NUMBER .)
    MINUS           reduce using rule 44 (factor -> NUMBER .)
    GREATER         reduce using rule 44 (factor -> NUMBER .)
    GREATER_OR_EQUAL reduce using rule 44 (factor -> NUMBER .)
    MINOR           reduce using rule 44 (factor -> NUMBER .)
    MINOR_OR_EQUAL  reduce using rule 44 (factor -> NUMBER .)
    ASIGN           reduce using rule 44 (factor -> NUMBER .)
    NOT             reduce using rule 44 (factor -> NUMBER .)
    $end            reduce using rule 44 (factor -> NUMBER .)
    END             reduce using rule 44 (factor -> NUMBER .)
    RETURN          reduce using rule 44 (factor -> NUMBER .)
    RPAR            reduce using rule 44 (factor -> NUMBER .)
    AND             reduce using rule 44 (factor -> NUMBER .)
    OR              reduce using rule 44 (factor -> NUMBER .)
    D_POINT         reduce using rule 44 (factor -> NUMBER .)
    RCOR            reduce using rule 44 (factor -> NUMBER .)
    COMMA           reduce using rule 44 (factor -> NUMBER .)
    RKEY            reduce using rule 44 (factor -> NUMBER .)


state 28

    (66) impresion -> PUTS . STRING

    STRING          shift and go to state 76


state 29

    (45) factor -> STRING .

    TIMES           reduce using rule 45 (factor -> STRING .)
    DIVIDE          reduce using rule 45 (factor -> STRING .)
    EXPONENTIATION  reduce using rule 45 (factor -> STRING .)
    PLUS            reduce using rule 45 (factor -> STRING .)
    MINUS           reduce using rule 45 (factor -> STRING .)
    GREATER         reduce using rule 45 (factor -> STRING .)
    GREATER_OR_EQUAL reduce using rule 45 (factor -> STRING .)
    MINOR           reduce using rule 45 (factor -> STRING .)
    MINOR_OR_EQUAL  reduce using rule 45 (factor -> STRING .)
    ASIGN           reduce using rule 45 (factor -> STRING .)
    NOT             reduce using rule 45 (factor -> STRING .)
    $end            reduce using rule 45 (factor -> STRING .)
    END             reduce using rule 45 (factor -> STRING .)
    RETURN          reduce using rule 45 (factor -> STRING .)
    RPAR            reduce using rule 45 (factor -> STRING .)
    AND             reduce using rule 45 (factor -> STRING .)
    OR              reduce using rule 45 (factor -> STRING .)
    D_POINT         reduce using rule 45 (factor -> STRING .)
    RCOR            reduce using rule 45 (factor -> STRING .)
    COMMA           reduce using rule 45 (factor -> STRING .)
    RKEY            reduce using rule 45 (factor -> STRING .)


state 30

    (43) term -> factor .

    TIMES           reduce using rule 43 (term -> factor .)
    DIVIDE          reduce using rule 43 (term -> factor .)
    EXPONENTIATION  reduce using rule 43 (term -> factor .)
    PLUS            reduce using rule 43 (term -> factor .)
    MINUS           reduce using rule 43 (term -> factor .)
    GREATER         reduce using rule 43 (term -> factor .)
    GREATER_OR_EQUAL reduce using rule 43 (term -> factor .)
    MINOR           reduce using rule 43 (term -> factor .)
    MINOR_OR_EQUAL  reduce using rule 43 (term -> factor .)
    ASIGN           reduce using rule 43 (term -> factor .)
    NOT             reduce using rule 43 (term -> factor .)
    $end            reduce using rule 43 (term -> factor .)
    END             reduce using rule 43 (term -> factor .)
    RETURN          reduce using rule 43 (term -> factor .)
    RPAR            reduce using rule 43 (term -> factor .)
    AND             reduce using rule 43 (term -> factor .)
    OR              reduce using rule 43 (term -> factor .)
    D_POINT         reduce using rule 43 (term -> factor .)
    RCOR            reduce using rule 43 (term -> factor .)
    COMMA           reduce using rule 43 (term -> factor .)
    RKEY            reduce using rule 43 (term -> factor .)


state 31

    (77) boleano -> TRUE .

    PLUS            reduce using rule 77 (boleano -> TRUE .)
    MINUS           reduce using rule 77 (boleano -> TRUE .)
    GREATER         reduce using rule 77 (boleano -> TRUE .)
    GREATER_OR_EQUAL reduce using rule 77 (boleano -> TRUE .)
    MINOR           reduce using rule 77 (boleano -> TRUE .)
    MINOR_OR_EQUAL  reduce using rule 77 (boleano -> TRUE .)
    ASIGN           reduce using rule 77 (boleano -> TRUE .)
    NOT             reduce using rule 77 (boleano -> TRUE .)
    $end            reduce using rule 77 (boleano -> TRUE .)
    END             reduce using rule 77 (boleano -> TRUE .)
    RETURN          reduce using rule 77 (boleano -> TRUE .)
    RPAR            reduce using rule 77 (boleano -> TRUE .)
    AND             reduce using rule 77 (boleano -> TRUE .)
    OR              reduce using rule 77 (boleano -> TRUE .)
    D_POINT         reduce using rule 77 (boleano -> TRUE .)
    RCOR            reduce using rule 77 (boleano -> TRUE .)
    COMMA           reduce using rule 77 (boleano -> TRUE .)
    RKEY            reduce using rule 77 (boleano -> TRUE .)


state 32

    (78) boleano -> FALSE .

    PLUS            reduce using rule 78 (boleano -> FALSE .)
    MINUS           reduce using rule 78 (boleano -> FALSE .)
    GREATER         reduce using rule 78 (boleano -> FALSE .)
    GREATER_OR_EQUAL reduce using rule 78 (boleano -> FALSE .)
    MINOR           reduce using rule 78 (boleano -> FALSE .)
    MINOR_OR_EQUAL  reduce using rule 78 (boleano -> FALSE .)
    ASIGN           reduce using rule 78 (boleano -> FALSE .)
    NOT             reduce using rule 78 (boleano -> FALSE .)
    $end            reduce using rule 78 (boleano -> FALSE .)
    END             reduce using rule 78 (boleano -> FALSE .)
    RETURN          reduce using rule 78 (boleano -> FALSE .)
    RPAR            reduce using rule 78 (boleano -> FALSE .)
    AND             reduce using rule 78 (boleano -> FALSE .)
    OR              reduce using rule 78 (boleano -> FALSE .)
    D_POINT         reduce using rule 78 (boleano -> FALSE .)
    RCOR            reduce using rule 78 (boleano -> FALSE .)
    COMMA           reduce using rule 78 (boleano -> FALSE .)
    RKEY            reduce using rule 78 (boleano -> FALSE .)


state 33

    (70) encabezado -> DEF . VARIABLE LPAR RPAR
    (71) encabezado -> DEF . VARIABLE LPAR parametros RPAR

    VARIABLE        shift and go to state 77


state 34

    (46) factor -> FLOAT .

    TIMES           reduce using rule 46 (factor -> FLOAT .)
    DIVIDE          reduce using rule 46 (factor -> FLOAT .)
    EXPONENTIATION  reduce using rule 46 (factor -> FLOAT .)
    PLUS            reduce using rule 46 (factor -> FLOAT .)
    MINUS           reduce using rule 46 (factor -> FLOAT .)
    GREATER         reduce using rule 46 (factor -> FLOAT .)
    GREATER_OR_EQUAL reduce using rule 46 (factor -> FLOAT .)
    MINOR           reduce using rule 46 (factor -> FLOAT .)
    MINOR_OR_EQUAL  reduce using rule 46 (factor -> FLOAT .)
    ASIGN           reduce using rule 46 (factor -> FLOAT .)
    NOT             reduce using rule 46 (factor -> FLOAT .)
    $end            reduce using rule 46 (factor -> FLOAT .)
    END             reduce using rule 46 (factor -> FLOAT .)
    RETURN          reduce using rule 46 (factor -> FLOAT .)
    RPAR            reduce using rule 46 (factor -> FLOAT .)
    AND             reduce using rule 46 (factor -> FLOAT .)
    OR              reduce using rule 46 (factor -> FLOAT .)
    D_POINT         reduce using rule 46 (factor -> FLOAT .)
    RCOR            reduce using rule 46 (factor -> FLOAT .)
    COMMA           reduce using rule 46 (factor -> FLOAT .)
    RKEY            reduce using rule 46 (factor -> FLOAT .)


state 35

    (49) expression -> expression PLUS . term
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    NUMBER          shift and go to state 27
    STRING          shift and go to state 29
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 72
    LPAR            shift and go to state 25

    term                           shift and go to state 78
    factor                         shift and go to state 30

state 36

    (50) expression -> expression MINUS . term
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    NUMBER          shift and go to state 27
    STRING          shift and go to state 29
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 72
    LPAR            shift and go to state 25

    term                           shift and go to state 79
    factor                         shift and go to state 30

state 37

    (54) comparacion -> expression comparador . expression
    (55) comparacion -> expression comparador . expression AND comparacion
    (56) comparacion -> expression comparador . expression OR comparacion
    (41) expression -> . term
    (42) expression -> . boleano
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (77) boleano -> . TRUE
    (78) boleano -> . FALSE
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NUMBER          shift and go to state 27
    STRING          shift and go to state 29
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 72
    LPAR            shift and go to state 25

    expression                     shift and go to state 80
    term                           shift and go to state 20
    boleano                        shift and go to state 21
    factor                         shift and go to state 30

state 38

    (57) comparador -> GREATER .

    TRUE            reduce using rule 57 (comparador -> GREATER .)
    FALSE           reduce using rule 57 (comparador -> GREATER .)
    NUMBER          reduce using rule 57 (comparador -> GREATER .)
    STRING          reduce using rule 57 (comparador -> GREATER .)
    FLOAT           reduce using rule 57 (comparador -> GREATER .)
    VARIABLE        reduce using rule 57 (comparador -> GREATER .)
    LPAR            reduce using rule 57 (comparador -> GREATER .)


state 39

    (58) comparador -> GREATER_OR_EQUAL .

    TRUE            reduce using rule 58 (comparador -> GREATER_OR_EQUAL .)
    FALSE           reduce using rule 58 (comparador -> GREATER_OR_EQUAL .)
    NUMBER          reduce using rule 58 (comparador -> GREATER_OR_EQUAL .)
    STRING          reduce using rule 58 (comparador -> GREATER_OR_EQUAL .)
    FLOAT           reduce using rule 58 (comparador -> GREATER_OR_EQUAL .)
    VARIABLE        reduce using rule 58 (comparador -> GREATER_OR_EQUAL .)
    LPAR            reduce using rule 58 (comparador -> GREATER_OR_EQUAL .)


state 40

    (59) comparador -> MINOR .

    TRUE            reduce using rule 59 (comparador -> MINOR .)
    FALSE           reduce using rule 59 (comparador -> MINOR .)
    NUMBER          reduce using rule 59 (comparador -> MINOR .)
    STRING          reduce using rule 59 (comparador -> MINOR .)
    FLOAT           reduce using rule 59 (comparador -> MINOR .)
    VARIABLE        reduce using rule 59 (comparador -> MINOR .)
    LPAR            reduce using rule 59 (comparador -> MINOR .)


state 41

    (60) comparador -> MINOR_OR_EQUAL .

    TRUE            reduce using rule 60 (comparador -> MINOR_OR_EQUAL .)
    FALSE           reduce using rule 60 (comparador -> MINOR_OR_EQUAL .)
    NUMBER          reduce using rule 60 (comparador -> MINOR_OR_EQUAL .)
    STRING          reduce using rule 60 (comparador -> MINOR_OR_EQUAL .)
    FLOAT           reduce using rule 60 (comparador -> MINOR_OR_EQUAL .)
    VARIABLE        reduce using rule 60 (comparador -> MINOR_OR_EQUAL .)
    LPAR            reduce using rule 60 (comparador -> MINOR_OR_EQUAL .)


state 42

    (61) comparador -> ASIGN . ASIGN

    ASIGN           shift and go to state 81


state 43

    (62) comparador -> NOT . ASIGN

    ASIGN           shift and go to state 82


state 44

    (34) asignacion -> VARIABLE ASIGN . expression
    (35) asignacion -> VARIABLE ASIGN . comparacion
    (36) asignacion -> VARIABLE ASIGN . callFuncion
    (37) asignacion -> VARIABLE ASIGN . diccionario
    (38) asignacion -> VARIABLE ASIGN . getValueHash
    (39) asignacion -> VARIABLE ASIGN . array
    (40) asignacion -> VARIABLE ASIGN . stack
    (67) input -> VARIABLE ASIGN . GETS
    (41) expression -> . term
    (42) expression -> . boleano
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (54) comparacion -> . expression comparador expression
    (55) comparacion -> . expression comparador expression AND comparacion
    (56) comparacion -> . expression comparador expression OR comparacion
    (75) callFuncion -> . VARIABLE LPAR RPAR
    (76) callFuncion -> . VARIABLE LPAR parametros RPAR
    (79) diccionario -> . LKEY cuerpoHash RKEY
    (82) getValueHash -> . VARIABLE LCOR expression RCOR
    (90) array -> . LCOR parametrosA RCOR
    (91) array -> . LCOR RCOR
    (99) stack -> . LCOR parametrosA RCOR
    (100) stack -> . LCOR vacio RCOR
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (77) boleano -> . TRUE
    (78) boleano -> . FALSE
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    GETS            shift and go to state 91
    VARIABLE        shift and go to state 83
    LKEY            shift and go to state 92
    LCOR            shift and go to state 93
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NUMBER          shift and go to state 27
    STRING          shift and go to state 29
    FLOAT           shift and go to state 34
    LPAR            shift and go to state 25

    expression                     shift and go to state 84
    comparacion                    shift and go to state 85
    callFuncion                    shift and go to state 86
    diccionario                    shift and go to state 87
    getValueHash                   shift and go to state 88
    array                          shift and go to state 89
    stack                          shift and go to state 90
    term                           shift and go to state 20
    boleano                        shift and go to state 21
    factor                         shift and go to state 30

state 45

    (75) callFuncion -> VARIABLE LPAR . RPAR
    (76) callFuncion -> VARIABLE LPAR . parametros RPAR
    (68) parametros -> . VARIABLE
    (69) parametros -> . VARIABLE COMMA parametros

    RPAR            shift and go to state 95
    VARIABLE        shift and go to state 94

    parametros                     shift and go to state 96

state 46

    (83) addValueHash -> VARIABLE LCOR . expression RCOR ASIGN expression
    (84) modValueHash -> VARIABLE LCOR . expression RCOR ASIGN expression
    (41) expression -> . term
    (42) expression -> . boleano
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (77) boleano -> . TRUE
    (78) boleano -> . FALSE
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NUMBER          shift and go to state 27
    STRING          shift and go to state 29
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 72
    LPAR            shift and go to state 25

    expression                     shift and go to state 97
    term                           shift and go to state 20
    boleano                        shift and go to state 21
    factor                         shift and go to state 30

state 47

    (85) deleteValueHash -> VARIABLE POINT . DELETE LPAR expression RPAR
    (94) insertArray -> VARIABLE POINT . INSERT LPAR argumentosA RPAR
    (95) deleteArray -> VARIABLE POINT . DELETE_AT LPAR NUMBER RPAR
    (101) searchStack -> VARIABLE POINT . SEARCH LPAR factor RPAR
    (102) pushStack -> VARIABLE POINT . PUSH LPAR factor RPAR

    DELETE          shift and go to state 98
    INSERT          shift and go to state 99
    DELETE_AT       shift and go to state 100
    SEARCH          shift and go to state 101
    PUSH            shift and go to state 102


state 48

    (51) term -> term TIMES . factor
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    NUMBER          shift and go to state 27
    STRING          shift and go to state 29
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 72
    LPAR            shift and go to state 25

    factor                         shift and go to state 103

state 49

    (52) term -> term DIVIDE . factor
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    NUMBER          shift and go to state 27
    STRING          shift and go to state 29
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 72
    LPAR            shift and go to state 25

    factor                         shift and go to state 104

state 50

    (53) term -> term EXPONENTIATION . factor
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    NUMBER          shift and go to state 27
    STRING          shift and go to state 29
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 72
    LPAR            shift and go to state 25

    factor                         shift and go to state 105

state 51

    (72) funciones -> encabezado cuerpo . END
    (74) funciones -> encabezado cuerpo . RETURN expression END

    END             shift and go to state 106
    RETURN          shift and go to state 107


state 52

    (73) funciones -> encabezado RETURN . expression END
    (41) expression -> . term
    (42) expression -> . boleano
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (77) boleano -> . TRUE
    (78) boleano -> . FALSE
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NUMBER          shift and go to state 27
    STRING          shift and go to state 29
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 72
    LPAR            shift and go to state 25

    expression                     shift and go to state 108
    term                           shift and go to state 20
    boleano                        shift and go to state 21
    factor                         shift and go to state 30

state 53

    (19) cuerpo -> expression .
    (49) expression -> expression . PLUS term
    (50) expression -> expression . MINUS term
    (54) comparacion -> expression . comparador expression
    (55) comparacion -> expression . comparador expression AND comparacion
    (56) comparacion -> expression . comparador expression OR comparacion
    (57) comparador -> . GREATER
    (58) comparador -> . GREATER_OR_EQUAL
    (59) comparador -> . MINOR
    (60) comparador -> . MINOR_OR_EQUAL
    (61) comparador -> . ASIGN ASIGN
    (62) comparador -> . NOT ASIGN

    END             reduce using rule 19 (cuerpo -> expression .)
    RETURN          reduce using rule 19 (cuerpo -> expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    GREATER         shift and go to state 38
    GREATER_OR_EQUAL shift and go to state 39
    MINOR           shift and go to state 40
    MINOR_OR_EQUAL  shift and go to state 41
    ASIGN           shift and go to state 42
    NOT             shift and go to state 43

    comparador                     shift and go to state 37

state 54

    (18) cuerpo -> asignacion .

    END             reduce using rule 18 (cuerpo -> asignacion .)
    RETURN          reduce using rule 18 (cuerpo -> asignacion .)


state 55

    (20) cuerpo -> comparacion .

    END             reduce using rule 20 (cuerpo -> comparacion .)
    RETURN          reduce using rule 20 (cuerpo -> comparacion .)


state 56

    (21) cuerpo -> condicional .

    END             reduce using rule 21 (cuerpo -> condicional .)
    RETURN          reduce using rule 21 (cuerpo -> condicional .)


state 57

    (22) cuerpo -> impresion .

    END             reduce using rule 22 (cuerpo -> impresion .)
    RETURN          reduce using rule 22 (cuerpo -> impresion .)


state 58

    (23) cuerpo -> for .

    END             reduce using rule 23 (cuerpo -> for .)
    RETURN          reduce using rule 23 (cuerpo -> for .)


state 59

    (24) cuerpo -> while .

    END             reduce using rule 24 (cuerpo -> while .)
    RETURN          reduce using rule 24 (cuerpo -> while .)


state 60

    (25) cuerpo -> input .

    END             reduce using rule 25 (cuerpo -> input .)
    RETURN          reduce using rule 25 (cuerpo -> input .)


state 61

    (26) cuerpo -> callFuncion .

    END             reduce using rule 26 (cuerpo -> callFuncion .)
    RETURN          reduce using rule 26 (cuerpo -> callFuncion .)


state 62

    (27) cuerpo -> addValueHash .

    END             reduce using rule 27 (cuerpo -> addValueHash .)
    RETURN          reduce using rule 27 (cuerpo -> addValueHash .)


state 63

    (28) cuerpo -> modValueHash .

    END             reduce using rule 28 (cuerpo -> modValueHash .)
    RETURN          reduce using rule 28 (cuerpo -> modValueHash .)


state 64

    (29) cuerpo -> deleteValueHash .

    END             reduce using rule 29 (cuerpo -> deleteValueHash .)
    RETURN          reduce using rule 29 (cuerpo -> deleteValueHash .)


state 65

    (30) cuerpo -> insertArray .

    END             reduce using rule 30 (cuerpo -> insertArray .)
    RETURN          reduce using rule 30 (cuerpo -> insertArray .)


state 66

    (31) cuerpo -> deleteArray .

    END             reduce using rule 31 (cuerpo -> deleteArray .)
    RETURN          reduce using rule 31 (cuerpo -> deleteArray .)


state 67

    (32) cuerpo -> pushStack .

    END             reduce using rule 32 (cuerpo -> pushStack .)
    RETURN          reduce using rule 32 (cuerpo -> pushStack .)


state 68

    (33) cuerpo -> searchStack .

    END             reduce using rule 33 (cuerpo -> searchStack .)
    RETURN          reduce using rule 33 (cuerpo -> searchStack .)


state 69

    (34) asignacion -> VARIABLE . ASIGN expression
    (35) asignacion -> VARIABLE . ASIGN comparacion
    (36) asignacion -> VARIABLE . ASIGN callFuncion
    (37) asignacion -> VARIABLE . ASIGN diccionario
    (38) asignacion -> VARIABLE . ASIGN getValueHash
    (39) asignacion -> VARIABLE . ASIGN array
    (40) asignacion -> VARIABLE . ASIGN stack
    (67) input -> VARIABLE . ASIGN GETS
    (75) callFuncion -> VARIABLE . LPAR RPAR
    (76) callFuncion -> VARIABLE . LPAR parametros RPAR
    (83) addValueHash -> VARIABLE . LCOR expression RCOR ASIGN expression
    (84) modValueHash -> VARIABLE . LCOR expression RCOR ASIGN expression
    (85) deleteValueHash -> VARIABLE . POINT DELETE LPAR expression RPAR
    (94) insertArray -> VARIABLE . POINT INSERT LPAR argumentosA RPAR
    (95) deleteArray -> VARIABLE . POINT DELETE_AT LPAR NUMBER RPAR
    (102) pushStack -> VARIABLE . POINT PUSH LPAR factor RPAR
    (101) searchStack -> VARIABLE . POINT SEARCH LPAR factor RPAR
    (47) factor -> VARIABLE .

  ! shift/reduce conflict for ASIGN resolved as shift
    ASIGN           shift and go to state 44
    LPAR            shift and go to state 45
    LCOR            shift and go to state 46
    POINT           shift and go to state 109
    TIMES           reduce using rule 47 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 47 (factor -> VARIABLE .)
    EXPONENTIATION  reduce using rule 47 (factor -> VARIABLE .)
    PLUS            reduce using rule 47 (factor -> VARIABLE .)
    MINUS           reduce using rule 47 (factor -> VARIABLE .)
    GREATER         reduce using rule 47 (factor -> VARIABLE .)
    GREATER_OR_EQUAL reduce using rule 47 (factor -> VARIABLE .)
    MINOR           reduce using rule 47 (factor -> VARIABLE .)
    MINOR_OR_EQUAL  reduce using rule 47 (factor -> VARIABLE .)
    NOT             reduce using rule 47 (factor -> VARIABLE .)
    END             reduce using rule 47 (factor -> VARIABLE .)
    RETURN          reduce using rule 47 (factor -> VARIABLE .)

  ! ASIGN           [ reduce using rule 47 (factor -> VARIABLE .) ]


state 70

    (63) condicional -> IF comparacion . D_POINT cuerpo END
    (64) condicional -> IF comparacion . D_POINT cuerpo END cond_else

    D_POINT         shift and go to state 110


state 71

    (54) comparacion -> expression . comparador expression
    (55) comparacion -> expression . comparador expression AND comparacion
    (56) comparacion -> expression . comparador expression OR comparacion
    (49) expression -> expression . PLUS term
    (50) expression -> expression . MINUS term
    (57) comparador -> . GREATER
    (58) comparador -> . GREATER_OR_EQUAL
    (59) comparador -> . MINOR
    (60) comparador -> . MINOR_OR_EQUAL
    (61) comparador -> . ASIGN ASIGN
    (62) comparador -> . NOT ASIGN

    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    GREATER         shift and go to state 38
    GREATER_OR_EQUAL shift and go to state 39
    MINOR           shift and go to state 40
    MINOR_OR_EQUAL  shift and go to state 41
    ASIGN           shift and go to state 42
    NOT             shift and go to state 43

    comparador                     shift and go to state 37

state 72

    (47) factor -> VARIABLE .

    TIMES           reduce using rule 47 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 47 (factor -> VARIABLE .)
    EXPONENTIATION  reduce using rule 47 (factor -> VARIABLE .)
    PLUS            reduce using rule 47 (factor -> VARIABLE .)
    MINUS           reduce using rule 47 (factor -> VARIABLE .)
    GREATER         reduce using rule 47 (factor -> VARIABLE .)
    GREATER_OR_EQUAL reduce using rule 47 (factor -> VARIABLE .)
    MINOR           reduce using rule 47 (factor -> VARIABLE .)
    MINOR_OR_EQUAL  reduce using rule 47 (factor -> VARIABLE .)
    ASIGN           reduce using rule 47 (factor -> VARIABLE .)
    NOT             reduce using rule 47 (factor -> VARIABLE .)
    RPAR            reduce using rule 47 (factor -> VARIABLE .)
    $end            reduce using rule 47 (factor -> VARIABLE .)
    END             reduce using rule 47 (factor -> VARIABLE .)
    RETURN          reduce using rule 47 (factor -> VARIABLE .)
    AND             reduce using rule 47 (factor -> VARIABLE .)
    OR              reduce using rule 47 (factor -> VARIABLE .)
    D_POINT         reduce using rule 47 (factor -> VARIABLE .)
    RCOR            reduce using rule 47 (factor -> VARIABLE .)
    COMMA           reduce using rule 47 (factor -> VARIABLE .)
    RKEY            reduce using rule 47 (factor -> VARIABLE .)


state 73

    (86) while -> WHILE LPAR . comparacion RPAR cuerpo END
    (87) while -> WHILE LPAR . comparacion RPAR cuerpo END while
    (54) comparacion -> . expression comparador expression
    (55) comparacion -> . expression comparador expression AND comparacion
    (56) comparacion -> . expression comparador expression OR comparacion
    (41) expression -> . term
    (42) expression -> . boleano
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (77) boleano -> . TRUE
    (78) boleano -> . FALSE
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NUMBER          shift and go to state 27
    STRING          shift and go to state 29
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 72
    LPAR            shift and go to state 25

    comparacion                    shift and go to state 111
    expression                     shift and go to state 71
    term                           shift and go to state 20
    boleano                        shift and go to state 21
    factor                         shift and go to state 30

state 74

    (48) factor -> LPAR expression . RPAR
    (49) expression -> expression . PLUS term
    (50) expression -> expression . MINUS term

    RPAR            shift and go to state 112
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36


state 75

    (96) for -> FOR VARIABLE . IN LPAR NUMBER POINT POINT NUMBER RPAR DO cuerpo END
    (97) for -> FOR VARIABLE . IN LPAR NUMBER POINT POINT NUMBER RPAR DO cuerpo END for

    IN              shift and go to state 113


state 76

    (66) impresion -> PUTS STRING .

    $end            reduce using rule 66 (impresion -> PUTS STRING .)
    END             reduce using rule 66 (impresion -> PUTS STRING .)
    RETURN          reduce using rule 66 (impresion -> PUTS STRING .)


state 77

    (70) encabezado -> DEF VARIABLE . LPAR RPAR
    (71) encabezado -> DEF VARIABLE . LPAR parametros RPAR

    LPAR            shift and go to state 114


state 78

    (49) expression -> expression PLUS term .
    (51) term -> term . TIMES factor
    (52) term -> term . DIVIDE factor
    (53) term -> term . EXPONENTIATION factor

    PLUS            reduce using rule 49 (expression -> expression PLUS term .)
    MINUS           reduce using rule 49 (expression -> expression PLUS term .)
    GREATER         reduce using rule 49 (expression -> expression PLUS term .)
    GREATER_OR_EQUAL reduce using rule 49 (expression -> expression PLUS term .)
    MINOR           reduce using rule 49 (expression -> expression PLUS term .)
    MINOR_OR_EQUAL  reduce using rule 49 (expression -> expression PLUS term .)
    ASIGN           reduce using rule 49 (expression -> expression PLUS term .)
    NOT             reduce using rule 49 (expression -> expression PLUS term .)
    $end            reduce using rule 49 (expression -> expression PLUS term .)
    END             reduce using rule 49 (expression -> expression PLUS term .)
    RETURN          reduce using rule 49 (expression -> expression PLUS term .)
    RPAR            reduce using rule 49 (expression -> expression PLUS term .)
    AND             reduce using rule 49 (expression -> expression PLUS term .)
    OR              reduce using rule 49 (expression -> expression PLUS term .)
    D_POINT         reduce using rule 49 (expression -> expression PLUS term .)
    RCOR            reduce using rule 49 (expression -> expression PLUS term .)
    COMMA           reduce using rule 49 (expression -> expression PLUS term .)
    RKEY            reduce using rule 49 (expression -> expression PLUS term .)
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    EXPONENTIATION  shift and go to state 50


state 79

    (50) expression -> expression MINUS term .
    (51) term -> term . TIMES factor
    (52) term -> term . DIVIDE factor
    (53) term -> term . EXPONENTIATION factor

    PLUS            reduce using rule 50 (expression -> expression MINUS term .)
    MINUS           reduce using rule 50 (expression -> expression MINUS term .)
    GREATER         reduce using rule 50 (expression -> expression MINUS term .)
    GREATER_OR_EQUAL reduce using rule 50 (expression -> expression MINUS term .)
    MINOR           reduce using rule 50 (expression -> expression MINUS term .)
    MINOR_OR_EQUAL  reduce using rule 50 (expression -> expression MINUS term .)
    ASIGN           reduce using rule 50 (expression -> expression MINUS term .)
    NOT             reduce using rule 50 (expression -> expression MINUS term .)
    $end            reduce using rule 50 (expression -> expression MINUS term .)
    END             reduce using rule 50 (expression -> expression MINUS term .)
    RETURN          reduce using rule 50 (expression -> expression MINUS term .)
    RPAR            reduce using rule 50 (expression -> expression MINUS term .)
    AND             reduce using rule 50 (expression -> expression MINUS term .)
    OR              reduce using rule 50 (expression -> expression MINUS term .)
    D_POINT         reduce using rule 50 (expression -> expression MINUS term .)
    RCOR            reduce using rule 50 (expression -> expression MINUS term .)
    COMMA           reduce using rule 50 (expression -> expression MINUS term .)
    RKEY            reduce using rule 50 (expression -> expression MINUS term .)
    TIMES           shift and go to state 48
    DIVIDE          shift and go to state 49
    EXPONENTIATION  shift and go to state 50


state 80

    (54) comparacion -> expression comparador expression .
    (55) comparacion -> expression comparador expression . AND comparacion
    (56) comparacion -> expression comparador expression . OR comparacion
    (49) expression -> expression . PLUS term
    (50) expression -> expression . MINUS term

    $end            reduce using rule 54 (comparacion -> expression comparador expression .)
    END             reduce using rule 54 (comparacion -> expression comparador expression .)
    RETURN          reduce using rule 54 (comparacion -> expression comparador expression .)
    D_POINT         reduce using rule 54 (comparacion -> expression comparador expression .)
    RPAR            reduce using rule 54 (comparacion -> expression comparador expression .)
    AND             shift and go to state 115
    OR              shift and go to state 116
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36


state 81

    (61) comparador -> ASIGN ASIGN .

    TRUE            reduce using rule 61 (comparador -> ASIGN ASIGN .)
    FALSE           reduce using rule 61 (comparador -> ASIGN ASIGN .)
    NUMBER          reduce using rule 61 (comparador -> ASIGN ASIGN .)
    STRING          reduce using rule 61 (comparador -> ASIGN ASIGN .)
    FLOAT           reduce using rule 61 (comparador -> ASIGN ASIGN .)
    VARIABLE        reduce using rule 61 (comparador -> ASIGN ASIGN .)
    LPAR            reduce using rule 61 (comparador -> ASIGN ASIGN .)


state 82

    (62) comparador -> NOT ASIGN .

    TRUE            reduce using rule 62 (comparador -> NOT ASIGN .)
    FALSE           reduce using rule 62 (comparador -> NOT ASIGN .)
    NUMBER          reduce using rule 62 (comparador -> NOT ASIGN .)
    STRING          reduce using rule 62 (comparador -> NOT ASIGN .)
    FLOAT           reduce using rule 62 (comparador -> NOT ASIGN .)
    VARIABLE        reduce using rule 62 (comparador -> NOT ASIGN .)
    LPAR            reduce using rule 62 (comparador -> NOT ASIGN .)


state 83

    (75) callFuncion -> VARIABLE . LPAR RPAR
    (76) callFuncion -> VARIABLE . LPAR parametros RPAR
    (82) getValueHash -> VARIABLE . LCOR expression RCOR
    (47) factor -> VARIABLE .

    LPAR            shift and go to state 45
    LCOR            shift and go to state 117
    TIMES           reduce using rule 47 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 47 (factor -> VARIABLE .)
    EXPONENTIATION  reduce using rule 47 (factor -> VARIABLE .)
    PLUS            reduce using rule 47 (factor -> VARIABLE .)
    MINUS           reduce using rule 47 (factor -> VARIABLE .)
    GREATER         reduce using rule 47 (factor -> VARIABLE .)
    GREATER_OR_EQUAL reduce using rule 47 (factor -> VARIABLE .)
    MINOR           reduce using rule 47 (factor -> VARIABLE .)
    MINOR_OR_EQUAL  reduce using rule 47 (factor -> VARIABLE .)
    ASIGN           reduce using rule 47 (factor -> VARIABLE .)
    NOT             reduce using rule 47 (factor -> VARIABLE .)
    $end            reduce using rule 47 (factor -> VARIABLE .)
    END             reduce using rule 47 (factor -> VARIABLE .)
    RETURN          reduce using rule 47 (factor -> VARIABLE .)


state 84

    (34) asignacion -> VARIABLE ASIGN expression .
    (49) expression -> expression . PLUS term
    (50) expression -> expression . MINUS term
    (54) comparacion -> expression . comparador expression
    (55) comparacion -> expression . comparador expression AND comparacion
    (56) comparacion -> expression . comparador expression OR comparacion
    (57) comparador -> . GREATER
    (58) comparador -> . GREATER_OR_EQUAL
    (59) comparador -> . MINOR
    (60) comparador -> . MINOR_OR_EQUAL
    (61) comparador -> . ASIGN ASIGN
    (62) comparador -> . NOT ASIGN

    $end            reduce using rule 34 (asignacion -> VARIABLE ASIGN expression .)
    END             reduce using rule 34 (asignacion -> VARIABLE ASIGN expression .)
    RETURN          reduce using rule 34 (asignacion -> VARIABLE ASIGN expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    GREATER         shift and go to state 38
    GREATER_OR_EQUAL shift and go to state 39
    MINOR           shift and go to state 40
    MINOR_OR_EQUAL  shift and go to state 41
    ASIGN           shift and go to state 42
    NOT             shift and go to state 43

    comparador                     shift and go to state 37

state 85

    (35) asignacion -> VARIABLE ASIGN comparacion .

    $end            reduce using rule 35 (asignacion -> VARIABLE ASIGN comparacion .)
    END             reduce using rule 35 (asignacion -> VARIABLE ASIGN comparacion .)
    RETURN          reduce using rule 35 (asignacion -> VARIABLE ASIGN comparacion .)


state 86

    (36) asignacion -> VARIABLE ASIGN callFuncion .

    $end            reduce using rule 36 (asignacion -> VARIABLE ASIGN callFuncion .)
    END             reduce using rule 36 (asignacion -> VARIABLE ASIGN callFuncion .)
    RETURN          reduce using rule 36 (asignacion -> VARIABLE ASIGN callFuncion .)


state 87

    (37) asignacion -> VARIABLE ASIGN diccionario .

    $end            reduce using rule 37 (asignacion -> VARIABLE ASIGN diccionario .)
    END             reduce using rule 37 (asignacion -> VARIABLE ASIGN diccionario .)
    RETURN          reduce using rule 37 (asignacion -> VARIABLE ASIGN diccionario .)


state 88

    (38) asignacion -> VARIABLE ASIGN getValueHash .

    $end            reduce using rule 38 (asignacion -> VARIABLE ASIGN getValueHash .)
    END             reduce using rule 38 (asignacion -> VARIABLE ASIGN getValueHash .)
    RETURN          reduce using rule 38 (asignacion -> VARIABLE ASIGN getValueHash .)


state 89

    (39) asignacion -> VARIABLE ASIGN array .

    $end            reduce using rule 39 (asignacion -> VARIABLE ASIGN array .)
    END             reduce using rule 39 (asignacion -> VARIABLE ASIGN array .)
    RETURN          reduce using rule 39 (asignacion -> VARIABLE ASIGN array .)


state 90

    (40) asignacion -> VARIABLE ASIGN stack .

    $end            reduce using rule 40 (asignacion -> VARIABLE ASIGN stack .)
    END             reduce using rule 40 (asignacion -> VARIABLE ASIGN stack .)
    RETURN          reduce using rule 40 (asignacion -> VARIABLE ASIGN stack .)


state 91

    (67) input -> VARIABLE ASIGN GETS .

    $end            reduce using rule 67 (input -> VARIABLE ASIGN GETS .)
    END             reduce using rule 67 (input -> VARIABLE ASIGN GETS .)
    RETURN          reduce using rule 67 (input -> VARIABLE ASIGN GETS .)


state 92

    (79) diccionario -> LKEY . cuerpoHash RKEY
    (80) cuerpoHash -> . expression ASIGN GREATER expression
    (81) cuerpoHash -> . expression ASIGN GREATER expression COMMA cuerpoHash
    (41) expression -> . term
    (42) expression -> . boleano
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (77) boleano -> . TRUE
    (78) boleano -> . FALSE
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NUMBER          shift and go to state 27
    STRING          shift and go to state 29
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 72
    LPAR            shift and go to state 25

    cuerpoHash                     shift and go to state 118
    expression                     shift and go to state 119
    term                           shift and go to state 20
    boleano                        shift and go to state 21
    factor                         shift and go to state 30

state 93

    (90) array -> LCOR . parametrosA RCOR
    (91) array -> LCOR . RCOR
    (99) stack -> LCOR . parametrosA RCOR
    (100) stack -> LCOR . vacio RCOR
    (88) parametrosA -> . factor
    (89) parametrosA -> . factor COMMA parametrosA
    (98) vacio -> . 
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    RCOR            shift and go to state 121
                    shift and go to state 124
    NUMBER          shift and go to state 27
    STRING          shift and go to state 29
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 72
    LPAR            shift and go to state 25

    parametrosA                    shift and go to state 120
    vacio                          shift and go to state 122
    factor                         shift and go to state 123

state 94

    (68) parametros -> VARIABLE .
    (69) parametros -> VARIABLE . COMMA parametros

    RPAR            reduce using rule 68 (parametros -> VARIABLE .)
    COMMA           shift and go to state 125


state 95

    (75) callFuncion -> VARIABLE LPAR RPAR .

    $end            reduce using rule 75 (callFuncion -> VARIABLE LPAR RPAR .)
    END             reduce using rule 75 (callFuncion -> VARIABLE LPAR RPAR .)
    RETURN          reduce using rule 75 (callFuncion -> VARIABLE LPAR RPAR .)


state 96

    (76) callFuncion -> VARIABLE LPAR parametros . RPAR

    RPAR            shift and go to state 126


state 97

    (83) addValueHash -> VARIABLE LCOR expression . RCOR ASIGN expression
    (84) modValueHash -> VARIABLE LCOR expression . RCOR ASIGN expression
    (49) expression -> expression . PLUS term
    (50) expression -> expression . MINUS term

    RCOR            shift and go to state 127
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36


state 98

    (85) deleteValueHash -> VARIABLE POINT DELETE . LPAR expression RPAR

    LPAR            shift and go to state 128


state 99

    (94) insertArray -> VARIABLE POINT INSERT . LPAR argumentosA RPAR

    LPAR            shift and go to state 129


state 100

    (95) deleteArray -> VARIABLE POINT DELETE_AT . LPAR NUMBER RPAR

    LPAR            shift and go to state 130


state 101

    (101) searchStack -> VARIABLE POINT SEARCH . LPAR factor RPAR

    LPAR            shift and go to state 131


state 102

    (102) pushStack -> VARIABLE POINT PUSH . LPAR factor RPAR

    LPAR            shift and go to state 132


state 103

    (51) term -> term TIMES factor .

    TIMES           reduce using rule 51 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 51 (term -> term TIMES factor .)
    EXPONENTIATION  reduce using rule 51 (term -> term TIMES factor .)
    PLUS            reduce using rule 51 (term -> term TIMES factor .)
    MINUS           reduce using rule 51 (term -> term TIMES factor .)
    GREATER         reduce using rule 51 (term -> term TIMES factor .)
    GREATER_OR_EQUAL reduce using rule 51 (term -> term TIMES factor .)
    MINOR           reduce using rule 51 (term -> term TIMES factor .)
    MINOR_OR_EQUAL  reduce using rule 51 (term -> term TIMES factor .)
    ASIGN           reduce using rule 51 (term -> term TIMES factor .)
    NOT             reduce using rule 51 (term -> term TIMES factor .)
    $end            reduce using rule 51 (term -> term TIMES factor .)
    END             reduce using rule 51 (term -> term TIMES factor .)
    RETURN          reduce using rule 51 (term -> term TIMES factor .)
    RPAR            reduce using rule 51 (term -> term TIMES factor .)
    AND             reduce using rule 51 (term -> term TIMES factor .)
    OR              reduce using rule 51 (term -> term TIMES factor .)
    D_POINT         reduce using rule 51 (term -> term TIMES factor .)
    RCOR            reduce using rule 51 (term -> term TIMES factor .)
    COMMA           reduce using rule 51 (term -> term TIMES factor .)
    RKEY            reduce using rule 51 (term -> term TIMES factor .)


state 104

    (52) term -> term DIVIDE factor .

    TIMES           reduce using rule 52 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 52 (term -> term DIVIDE factor .)
    EXPONENTIATION  reduce using rule 52 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 52 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 52 (term -> term DIVIDE factor .)
    GREATER         reduce using rule 52 (term -> term DIVIDE factor .)
    GREATER_OR_EQUAL reduce using rule 52 (term -> term DIVIDE factor .)
    MINOR           reduce using rule 52 (term -> term DIVIDE factor .)
    MINOR_OR_EQUAL  reduce using rule 52 (term -> term DIVIDE factor .)
    ASIGN           reduce using rule 52 (term -> term DIVIDE factor .)
    NOT             reduce using rule 52 (term -> term DIVIDE factor .)
    $end            reduce using rule 52 (term -> term DIVIDE factor .)
    END             reduce using rule 52 (term -> term DIVIDE factor .)
    RETURN          reduce using rule 52 (term -> term DIVIDE factor .)
    RPAR            reduce using rule 52 (term -> term DIVIDE factor .)
    AND             reduce using rule 52 (term -> term DIVIDE factor .)
    OR              reduce using rule 52 (term -> term DIVIDE factor .)
    D_POINT         reduce using rule 52 (term -> term DIVIDE factor .)
    RCOR            reduce using rule 52 (term -> term DIVIDE factor .)
    COMMA           reduce using rule 52 (term -> term DIVIDE factor .)
    RKEY            reduce using rule 52 (term -> term DIVIDE factor .)


state 105

    (53) term -> term EXPONENTIATION factor .

    TIMES           reduce using rule 53 (term -> term EXPONENTIATION factor .)
    DIVIDE          reduce using rule 53 (term -> term EXPONENTIATION factor .)
    EXPONENTIATION  reduce using rule 53 (term -> term EXPONENTIATION factor .)
    PLUS            reduce using rule 53 (term -> term EXPONENTIATION factor .)
    MINUS           reduce using rule 53 (term -> term EXPONENTIATION factor .)
    GREATER         reduce using rule 53 (term -> term EXPONENTIATION factor .)
    GREATER_OR_EQUAL reduce using rule 53 (term -> term EXPONENTIATION factor .)
    MINOR           reduce using rule 53 (term -> term EXPONENTIATION factor .)
    MINOR_OR_EQUAL  reduce using rule 53 (term -> term EXPONENTIATION factor .)
    ASIGN           reduce using rule 53 (term -> term EXPONENTIATION factor .)
    NOT             reduce using rule 53 (term -> term EXPONENTIATION factor .)
    $end            reduce using rule 53 (term -> term EXPONENTIATION factor .)
    END             reduce using rule 53 (term -> term EXPONENTIATION factor .)
    RETURN          reduce using rule 53 (term -> term EXPONENTIATION factor .)
    RPAR            reduce using rule 53 (term -> term EXPONENTIATION factor .)
    AND             reduce using rule 53 (term -> term EXPONENTIATION factor .)
    OR              reduce using rule 53 (term -> term EXPONENTIATION factor .)
    D_POINT         reduce using rule 53 (term -> term EXPONENTIATION factor .)
    RCOR            reduce using rule 53 (term -> term EXPONENTIATION factor .)
    COMMA           reduce using rule 53 (term -> term EXPONENTIATION factor .)
    RKEY            reduce using rule 53 (term -> term EXPONENTIATION factor .)


state 106

    (72) funciones -> encabezado cuerpo END .

    $end            reduce using rule 72 (funciones -> encabezado cuerpo END .)


state 107

    (74) funciones -> encabezado cuerpo RETURN . expression END
    (41) expression -> . term
    (42) expression -> . boleano
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (77) boleano -> . TRUE
    (78) boleano -> . FALSE
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NUMBER          shift and go to state 27
    STRING          shift and go to state 29
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 72
    LPAR            shift and go to state 25

    expression                     shift and go to state 133
    term                           shift and go to state 20
    boleano                        shift and go to state 21
    factor                         shift and go to state 30

state 108

    (73) funciones -> encabezado RETURN expression . END
    (49) expression -> expression . PLUS term
    (50) expression -> expression . MINUS term

    END             shift and go to state 134
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36


state 109

    (85) deleteValueHash -> VARIABLE POINT . DELETE LPAR expression RPAR
    (94) insertArray -> VARIABLE POINT . INSERT LPAR argumentosA RPAR
    (95) deleteArray -> VARIABLE POINT . DELETE_AT LPAR NUMBER RPAR
    (102) pushStack -> VARIABLE POINT . PUSH LPAR factor RPAR
    (101) searchStack -> VARIABLE POINT . SEARCH LPAR factor RPAR

    DELETE          shift and go to state 98
    INSERT          shift and go to state 99
    DELETE_AT       shift and go to state 100
    PUSH            shift and go to state 102
    SEARCH          shift and go to state 101


state 110

    (63) condicional -> IF comparacion D_POINT . cuerpo END
    (64) condicional -> IF comparacion D_POINT . cuerpo END cond_else
    (18) cuerpo -> . asignacion
    (19) cuerpo -> . expression
    (20) cuerpo -> . comparacion
    (21) cuerpo -> . condicional
    (22) cuerpo -> . impresion
    (23) cuerpo -> . for
    (24) cuerpo -> . while
    (25) cuerpo -> . input
    (26) cuerpo -> . callFuncion
    (27) cuerpo -> . addValueHash
    (28) cuerpo -> . modValueHash
    (29) cuerpo -> . deleteValueHash
    (30) cuerpo -> . insertArray
    (31) cuerpo -> . deleteArray
    (32) cuerpo -> . pushStack
    (33) cuerpo -> . searchStack
    (34) asignacion -> . VARIABLE ASIGN expression
    (35) asignacion -> . VARIABLE ASIGN comparacion
    (36) asignacion -> . VARIABLE ASIGN callFuncion
    (37) asignacion -> . VARIABLE ASIGN diccionario
    (38) asignacion -> . VARIABLE ASIGN getValueHash
    (39) asignacion -> . VARIABLE ASIGN array
    (40) asignacion -> . VARIABLE ASIGN stack
    (41) expression -> . term
    (42) expression -> . boleano
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (54) comparacion -> . expression comparador expression
    (55) comparacion -> . expression comparador expression AND comparacion
    (56) comparacion -> . expression comparador expression OR comparacion
    (63) condicional -> . IF comparacion D_POINT cuerpo END
    (64) condicional -> . IF comparacion D_POINT cuerpo END cond_else
    (66) impresion -> . PUTS STRING
    (96) for -> . FOR VARIABLE IN LPAR NUMBER POINT POINT NUMBER RPAR DO cuerpo END
    (97) for -> . FOR VARIABLE IN LPAR NUMBER POINT POINT NUMBER RPAR DO cuerpo END for
    (86) while -> . WHILE LPAR comparacion RPAR cuerpo END
    (87) while -> . WHILE LPAR comparacion RPAR cuerpo END while
    (67) input -> . VARIABLE ASIGN GETS
    (75) callFuncion -> . VARIABLE LPAR RPAR
    (76) callFuncion -> . VARIABLE LPAR parametros RPAR
    (83) addValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (84) modValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (85) deleteValueHash -> . VARIABLE POINT DELETE LPAR expression RPAR
    (94) insertArray -> . VARIABLE POINT INSERT LPAR argumentosA RPAR
    (95) deleteArray -> . VARIABLE POINT DELETE_AT LPAR NUMBER RPAR
    (102) pushStack -> . VARIABLE POINT PUSH LPAR factor RPAR
    (101) searchStack -> . VARIABLE POINT SEARCH LPAR factor RPAR
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (77) boleano -> . TRUE
    (78) boleano -> . FALSE
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    VARIABLE        shift and go to state 69
    IF              shift and go to state 23
    PUTS            shift and go to state 28
    FOR             shift and go to state 26
    WHILE           shift and go to state 24
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NUMBER          shift and go to state 27
    STRING          shift and go to state 29
    FLOAT           shift and go to state 34
    LPAR            shift and go to state 25

    comparacion                    shift and go to state 55
    cuerpo                         shift and go to state 135
    asignacion                     shift and go to state 54
    expression                     shift and go to state 53
    condicional                    shift and go to state 56
    impresion                      shift and go to state 57
    for                            shift and go to state 58
    while                          shift and go to state 59
    input                          shift and go to state 60
    callFuncion                    shift and go to state 61
    addValueHash                   shift and go to state 62
    modValueHash                   shift and go to state 63
    deleteValueHash                shift and go to state 64
    insertArray                    shift and go to state 65
    deleteArray                    shift and go to state 66
    pushStack                      shift and go to state 67
    searchStack                    shift and go to state 68
    term                           shift and go to state 20
    boleano                        shift and go to state 21
    factor                         shift and go to state 30

state 111

    (86) while -> WHILE LPAR comparacion . RPAR cuerpo END
    (87) while -> WHILE LPAR comparacion . RPAR cuerpo END while

    RPAR            shift and go to state 136


state 112

    (48) factor -> LPAR expression RPAR .

    TIMES           reduce using rule 48 (factor -> LPAR expression RPAR .)
    DIVIDE          reduce using rule 48 (factor -> LPAR expression RPAR .)
    EXPONENTIATION  reduce using rule 48 (factor -> LPAR expression RPAR .)
    PLUS            reduce using rule 48 (factor -> LPAR expression RPAR .)
    MINUS           reduce using rule 48 (factor -> LPAR expression RPAR .)
    GREATER         reduce using rule 48 (factor -> LPAR expression RPAR .)
    GREATER_OR_EQUAL reduce using rule 48 (factor -> LPAR expression RPAR .)
    MINOR           reduce using rule 48 (factor -> LPAR expression RPAR .)
    MINOR_OR_EQUAL  reduce using rule 48 (factor -> LPAR expression RPAR .)
    ASIGN           reduce using rule 48 (factor -> LPAR expression RPAR .)
    NOT             reduce using rule 48 (factor -> LPAR expression RPAR .)
    $end            reduce using rule 48 (factor -> LPAR expression RPAR .)
    END             reduce using rule 48 (factor -> LPAR expression RPAR .)
    RETURN          reduce using rule 48 (factor -> LPAR expression RPAR .)
    RPAR            reduce using rule 48 (factor -> LPAR expression RPAR .)
    AND             reduce using rule 48 (factor -> LPAR expression RPAR .)
    OR              reduce using rule 48 (factor -> LPAR expression RPAR .)
    D_POINT         reduce using rule 48 (factor -> LPAR expression RPAR .)
    RCOR            reduce using rule 48 (factor -> LPAR expression RPAR .)
    COMMA           reduce using rule 48 (factor -> LPAR expression RPAR .)
    RKEY            reduce using rule 48 (factor -> LPAR expression RPAR .)


state 113

    (96) for -> FOR VARIABLE IN . LPAR NUMBER POINT POINT NUMBER RPAR DO cuerpo END
    (97) for -> FOR VARIABLE IN . LPAR NUMBER POINT POINT NUMBER RPAR DO cuerpo END for

    LPAR            shift and go to state 137


state 114

    (70) encabezado -> DEF VARIABLE LPAR . RPAR
    (71) encabezado -> DEF VARIABLE LPAR . parametros RPAR
    (68) parametros -> . VARIABLE
    (69) parametros -> . VARIABLE COMMA parametros

    RPAR            shift and go to state 138
    VARIABLE        shift and go to state 94

    parametros                     shift and go to state 139

state 115

    (55) comparacion -> expression comparador expression AND . comparacion
    (54) comparacion -> . expression comparador expression
    (55) comparacion -> . expression comparador expression AND comparacion
    (56) comparacion -> . expression comparador expression OR comparacion
    (41) expression -> . term
    (42) expression -> . boleano
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (77) boleano -> . TRUE
    (78) boleano -> . FALSE
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NUMBER          shift and go to state 27
    STRING          shift and go to state 29
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 72
    LPAR            shift and go to state 25

    expression                     shift and go to state 71
    comparacion                    shift and go to state 140
    term                           shift and go to state 20
    boleano                        shift and go to state 21
    factor                         shift and go to state 30

state 116

    (56) comparacion -> expression comparador expression OR . comparacion
    (54) comparacion -> . expression comparador expression
    (55) comparacion -> . expression comparador expression AND comparacion
    (56) comparacion -> . expression comparador expression OR comparacion
    (41) expression -> . term
    (42) expression -> . boleano
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (77) boleano -> . TRUE
    (78) boleano -> . FALSE
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NUMBER          shift and go to state 27
    STRING          shift and go to state 29
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 72
    LPAR            shift and go to state 25

    expression                     shift and go to state 71
    comparacion                    shift and go to state 141
    term                           shift and go to state 20
    boleano                        shift and go to state 21
    factor                         shift and go to state 30

state 117

    (82) getValueHash -> VARIABLE LCOR . expression RCOR
    (41) expression -> . term
    (42) expression -> . boleano
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (77) boleano -> . TRUE
    (78) boleano -> . FALSE
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NUMBER          shift and go to state 27
    STRING          shift and go to state 29
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 72
    LPAR            shift and go to state 25

    expression                     shift and go to state 142
    term                           shift and go to state 20
    boleano                        shift and go to state 21
    factor                         shift and go to state 30

state 118

    (79) diccionario -> LKEY cuerpoHash . RKEY

    RKEY            shift and go to state 143


state 119

    (80) cuerpoHash -> expression . ASIGN GREATER expression
    (81) cuerpoHash -> expression . ASIGN GREATER expression COMMA cuerpoHash
    (49) expression -> expression . PLUS term
    (50) expression -> expression . MINUS term

    ASIGN           shift and go to state 144
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36


state 120

    (90) array -> LCOR parametrosA . RCOR
    (99) stack -> LCOR parametrosA . RCOR

    RCOR            shift and go to state 145


state 121

    (91) array -> LCOR RCOR .

    $end            reduce using rule 91 (array -> LCOR RCOR .)
    END             reduce using rule 91 (array -> LCOR RCOR .)
    RETURN          reduce using rule 91 (array -> LCOR RCOR .)


state 122

    (100) stack -> LCOR vacio . RCOR

    RCOR            shift and go to state 146


state 123

    (88) parametrosA -> factor .
    (89) parametrosA -> factor . COMMA parametrosA

    RCOR            reduce using rule 88 (parametrosA -> factor .)
    COMMA           shift and go to state 147


state 124

    (98) vacio ->  .

    RCOR            reduce using rule 98 (vacio ->  .)


state 125

    (69) parametros -> VARIABLE COMMA . parametros
    (68) parametros -> . VARIABLE
    (69) parametros -> . VARIABLE COMMA parametros

    VARIABLE        shift and go to state 94

    parametros                     shift and go to state 148

state 126

    (76) callFuncion -> VARIABLE LPAR parametros RPAR .

    $end            reduce using rule 76 (callFuncion -> VARIABLE LPAR parametros RPAR .)
    END             reduce using rule 76 (callFuncion -> VARIABLE LPAR parametros RPAR .)
    RETURN          reduce using rule 76 (callFuncion -> VARIABLE LPAR parametros RPAR .)


state 127

    (83) addValueHash -> VARIABLE LCOR expression RCOR . ASIGN expression
    (84) modValueHash -> VARIABLE LCOR expression RCOR . ASIGN expression

    ASIGN           shift and go to state 149


state 128

    (85) deleteValueHash -> VARIABLE POINT DELETE LPAR . expression RPAR
    (41) expression -> . term
    (42) expression -> . boleano
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (77) boleano -> . TRUE
    (78) boleano -> . FALSE
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NUMBER          shift and go to state 27
    STRING          shift and go to state 29
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 72
    LPAR            shift and go to state 25

    expression                     shift and go to state 150
    term                           shift and go to state 20
    boleano                        shift and go to state 21
    factor                         shift and go to state 30

state 129

    (94) insertArray -> VARIABLE POINT INSERT LPAR . argumentosA RPAR
    (92) argumentosA -> . NUMBER
    (93) argumentosA -> . NUMBER COMMA factor

    NUMBER          shift and go to state 152

    argumentosA                    shift and go to state 151

state 130

    (95) deleteArray -> VARIABLE POINT DELETE_AT LPAR . NUMBER RPAR

    NUMBER          shift and go to state 153


state 131

    (101) searchStack -> VARIABLE POINT SEARCH LPAR . factor RPAR
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    NUMBER          shift and go to state 27
    STRING          shift and go to state 29
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 72
    LPAR            shift and go to state 25

    factor                         shift and go to state 154

state 132

    (102) pushStack -> VARIABLE POINT PUSH LPAR . factor RPAR
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    NUMBER          shift and go to state 27
    STRING          shift and go to state 29
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 72
    LPAR            shift and go to state 25

    factor                         shift and go to state 155

state 133

    (74) funciones -> encabezado cuerpo RETURN expression . END
    (49) expression -> expression . PLUS term
    (50) expression -> expression . MINUS term

    END             shift and go to state 156
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36


state 134

    (73) funciones -> encabezado RETURN expression END .

    $end            reduce using rule 73 (funciones -> encabezado RETURN expression END .)


state 135

    (63) condicional -> IF comparacion D_POINT cuerpo . END
    (64) condicional -> IF comparacion D_POINT cuerpo . END cond_else

    END             shift and go to state 157


state 136

    (86) while -> WHILE LPAR comparacion RPAR . cuerpo END
    (87) while -> WHILE LPAR comparacion RPAR . cuerpo END while
    (18) cuerpo -> . asignacion
    (19) cuerpo -> . expression
    (20) cuerpo -> . comparacion
    (21) cuerpo -> . condicional
    (22) cuerpo -> . impresion
    (23) cuerpo -> . for
    (24) cuerpo -> . while
    (25) cuerpo -> . input
    (26) cuerpo -> . callFuncion
    (27) cuerpo -> . addValueHash
    (28) cuerpo -> . modValueHash
    (29) cuerpo -> . deleteValueHash
    (30) cuerpo -> . insertArray
    (31) cuerpo -> . deleteArray
    (32) cuerpo -> . pushStack
    (33) cuerpo -> . searchStack
    (34) asignacion -> . VARIABLE ASIGN expression
    (35) asignacion -> . VARIABLE ASIGN comparacion
    (36) asignacion -> . VARIABLE ASIGN callFuncion
    (37) asignacion -> . VARIABLE ASIGN diccionario
    (38) asignacion -> . VARIABLE ASIGN getValueHash
    (39) asignacion -> . VARIABLE ASIGN array
    (40) asignacion -> . VARIABLE ASIGN stack
    (41) expression -> . term
    (42) expression -> . boleano
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (54) comparacion -> . expression comparador expression
    (55) comparacion -> . expression comparador expression AND comparacion
    (56) comparacion -> . expression comparador expression OR comparacion
    (63) condicional -> . IF comparacion D_POINT cuerpo END
    (64) condicional -> . IF comparacion D_POINT cuerpo END cond_else
    (66) impresion -> . PUTS STRING
    (96) for -> . FOR VARIABLE IN LPAR NUMBER POINT POINT NUMBER RPAR DO cuerpo END
    (97) for -> . FOR VARIABLE IN LPAR NUMBER POINT POINT NUMBER RPAR DO cuerpo END for
    (86) while -> . WHILE LPAR comparacion RPAR cuerpo END
    (87) while -> . WHILE LPAR comparacion RPAR cuerpo END while
    (67) input -> . VARIABLE ASIGN GETS
    (75) callFuncion -> . VARIABLE LPAR RPAR
    (76) callFuncion -> . VARIABLE LPAR parametros RPAR
    (83) addValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (84) modValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (85) deleteValueHash -> . VARIABLE POINT DELETE LPAR expression RPAR
    (94) insertArray -> . VARIABLE POINT INSERT LPAR argumentosA RPAR
    (95) deleteArray -> . VARIABLE POINT DELETE_AT LPAR NUMBER RPAR
    (102) pushStack -> . VARIABLE POINT PUSH LPAR factor RPAR
    (101) searchStack -> . VARIABLE POINT SEARCH LPAR factor RPAR
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (77) boleano -> . TRUE
    (78) boleano -> . FALSE
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    VARIABLE        shift and go to state 69
    IF              shift and go to state 23
    PUTS            shift and go to state 28
    FOR             shift and go to state 26
    WHILE           shift and go to state 24
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NUMBER          shift and go to state 27
    STRING          shift and go to state 29
    FLOAT           shift and go to state 34
    LPAR            shift and go to state 25

    comparacion                    shift and go to state 55
    cuerpo                         shift and go to state 158
    while                          shift and go to state 59
    asignacion                     shift and go to state 54
    expression                     shift and go to state 53
    condicional                    shift and go to state 56
    impresion                      shift and go to state 57
    for                            shift and go to state 58
    input                          shift and go to state 60
    callFuncion                    shift and go to state 61
    addValueHash                   shift and go to state 62
    modValueHash                   shift and go to state 63
    deleteValueHash                shift and go to state 64
    insertArray                    shift and go to state 65
    deleteArray                    shift and go to state 66
    pushStack                      shift and go to state 67
    searchStack                    shift and go to state 68
    term                           shift and go to state 20
    boleano                        shift and go to state 21
    factor                         shift and go to state 30

state 137

    (96) for -> FOR VARIABLE IN LPAR . NUMBER POINT POINT NUMBER RPAR DO cuerpo END
    (97) for -> FOR VARIABLE IN LPAR . NUMBER POINT POINT NUMBER RPAR DO cuerpo END for

    NUMBER          shift and go to state 159


state 138

    (70) encabezado -> DEF VARIABLE LPAR RPAR .

    RETURN          reduce using rule 70 (encabezado -> DEF VARIABLE LPAR RPAR .)
    VARIABLE        reduce using rule 70 (encabezado -> DEF VARIABLE LPAR RPAR .)
    IF              reduce using rule 70 (encabezado -> DEF VARIABLE LPAR RPAR .)
    PUTS            reduce using rule 70 (encabezado -> DEF VARIABLE LPAR RPAR .)
    FOR             reduce using rule 70 (encabezado -> DEF VARIABLE LPAR RPAR .)
    WHILE           reduce using rule 70 (encabezado -> DEF VARIABLE LPAR RPAR .)
    TRUE            reduce using rule 70 (encabezado -> DEF VARIABLE LPAR RPAR .)
    FALSE           reduce using rule 70 (encabezado -> DEF VARIABLE LPAR RPAR .)
    NUMBER          reduce using rule 70 (encabezado -> DEF VARIABLE LPAR RPAR .)
    STRING          reduce using rule 70 (encabezado -> DEF VARIABLE LPAR RPAR .)
    FLOAT           reduce using rule 70 (encabezado -> DEF VARIABLE LPAR RPAR .)
    LPAR            reduce using rule 70 (encabezado -> DEF VARIABLE LPAR RPAR .)


state 139

    (71) encabezado -> DEF VARIABLE LPAR parametros . RPAR

    RPAR            shift and go to state 160


state 140

    (55) comparacion -> expression comparador expression AND comparacion .

    $end            reduce using rule 55 (comparacion -> expression comparador expression AND comparacion .)
    END             reduce using rule 55 (comparacion -> expression comparador expression AND comparacion .)
    RETURN          reduce using rule 55 (comparacion -> expression comparador expression AND comparacion .)
    D_POINT         reduce using rule 55 (comparacion -> expression comparador expression AND comparacion .)
    RPAR            reduce using rule 55 (comparacion -> expression comparador expression AND comparacion .)


state 141

    (56) comparacion -> expression comparador expression OR comparacion .

    $end            reduce using rule 56 (comparacion -> expression comparador expression OR comparacion .)
    END             reduce using rule 56 (comparacion -> expression comparador expression OR comparacion .)
    RETURN          reduce using rule 56 (comparacion -> expression comparador expression OR comparacion .)
    D_POINT         reduce using rule 56 (comparacion -> expression comparador expression OR comparacion .)
    RPAR            reduce using rule 56 (comparacion -> expression comparador expression OR comparacion .)


state 142

    (82) getValueHash -> VARIABLE LCOR expression . RCOR
    (49) expression -> expression . PLUS term
    (50) expression -> expression . MINUS term

    RCOR            shift and go to state 161
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36


state 143

    (79) diccionario -> LKEY cuerpoHash RKEY .

    $end            reduce using rule 79 (diccionario -> LKEY cuerpoHash RKEY .)
    END             reduce using rule 79 (diccionario -> LKEY cuerpoHash RKEY .)
    RETURN          reduce using rule 79 (diccionario -> LKEY cuerpoHash RKEY .)


state 144

    (80) cuerpoHash -> expression ASIGN . GREATER expression
    (81) cuerpoHash -> expression ASIGN . GREATER expression COMMA cuerpoHash

    GREATER         shift and go to state 162


state 145

    (90) array -> LCOR parametrosA RCOR .
    (99) stack -> LCOR parametrosA RCOR .

  ! reduce/reduce conflict for $end resolved using rule 90 (array -> LCOR parametrosA RCOR .)
  ! reduce/reduce conflict for END resolved using rule 90 (array -> LCOR parametrosA RCOR .)
  ! reduce/reduce conflict for RETURN resolved using rule 90 (array -> LCOR parametrosA RCOR .)
    $end            reduce using rule 90 (array -> LCOR parametrosA RCOR .)
    END             reduce using rule 90 (array -> LCOR parametrosA RCOR .)
    RETURN          reduce using rule 90 (array -> LCOR parametrosA RCOR .)

  ! $end            [ reduce using rule 99 (stack -> LCOR parametrosA RCOR .) ]
  ! END             [ reduce using rule 99 (stack -> LCOR parametrosA RCOR .) ]
  ! RETURN          [ reduce using rule 99 (stack -> LCOR parametrosA RCOR .) ]


state 146

    (100) stack -> LCOR vacio RCOR .

    $end            reduce using rule 100 (stack -> LCOR vacio RCOR .)
    END             reduce using rule 100 (stack -> LCOR vacio RCOR .)
    RETURN          reduce using rule 100 (stack -> LCOR vacio RCOR .)


state 147

    (89) parametrosA -> factor COMMA . parametrosA
    (88) parametrosA -> . factor
    (89) parametrosA -> . factor COMMA parametrosA
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    NUMBER          shift and go to state 27
    STRING          shift and go to state 29
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 72
    LPAR            shift and go to state 25

    factor                         shift and go to state 123
    parametrosA                    shift and go to state 163

state 148

    (69) parametros -> VARIABLE COMMA parametros .

    RPAR            reduce using rule 69 (parametros -> VARIABLE COMMA parametros .)


state 149

    (83) addValueHash -> VARIABLE LCOR expression RCOR ASIGN . expression
    (84) modValueHash -> VARIABLE LCOR expression RCOR ASIGN . expression
    (41) expression -> . term
    (42) expression -> . boleano
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (77) boleano -> . TRUE
    (78) boleano -> . FALSE
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NUMBER          shift and go to state 27
    STRING          shift and go to state 29
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 72
    LPAR            shift and go to state 25

    expression                     shift and go to state 164
    term                           shift and go to state 20
    boleano                        shift and go to state 21
    factor                         shift and go to state 30

state 150

    (85) deleteValueHash -> VARIABLE POINT DELETE LPAR expression . RPAR
    (49) expression -> expression . PLUS term
    (50) expression -> expression . MINUS term

    RPAR            shift and go to state 165
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36


state 151

    (94) insertArray -> VARIABLE POINT INSERT LPAR argumentosA . RPAR

    RPAR            shift and go to state 166


state 152

    (92) argumentosA -> NUMBER .
    (93) argumentosA -> NUMBER . COMMA factor

    RPAR            reduce using rule 92 (argumentosA -> NUMBER .)
    COMMA           shift and go to state 167


state 153

    (95) deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER . RPAR

    RPAR            shift and go to state 168


state 154

    (101) searchStack -> VARIABLE POINT SEARCH LPAR factor . RPAR

    RPAR            shift and go to state 169


state 155

    (102) pushStack -> VARIABLE POINT PUSH LPAR factor . RPAR

    RPAR            shift and go to state 170


state 156

    (74) funciones -> encabezado cuerpo RETURN expression END .

    $end            reduce using rule 74 (funciones -> encabezado cuerpo RETURN expression END .)


state 157

    (63) condicional -> IF comparacion D_POINT cuerpo END .
    (64) condicional -> IF comparacion D_POINT cuerpo END . cond_else
    (65) cond_else -> . ELSE D_POINT cuerpo END

    $end            reduce using rule 63 (condicional -> IF comparacion D_POINT cuerpo END .)
    END             reduce using rule 63 (condicional -> IF comparacion D_POINT cuerpo END .)
    RETURN          reduce using rule 63 (condicional -> IF comparacion D_POINT cuerpo END .)
    ELSE            shift and go to state 172

    cond_else                      shift and go to state 171

state 158

    (86) while -> WHILE LPAR comparacion RPAR cuerpo . END
    (87) while -> WHILE LPAR comparacion RPAR cuerpo . END while

    END             shift and go to state 173


state 159

    (96) for -> FOR VARIABLE IN LPAR NUMBER . POINT POINT NUMBER RPAR DO cuerpo END
    (97) for -> FOR VARIABLE IN LPAR NUMBER . POINT POINT NUMBER RPAR DO cuerpo END for

    POINT           shift and go to state 174


state 160

    (71) encabezado -> DEF VARIABLE LPAR parametros RPAR .

    RETURN          reduce using rule 71 (encabezado -> DEF VARIABLE LPAR parametros RPAR .)
    VARIABLE        reduce using rule 71 (encabezado -> DEF VARIABLE LPAR parametros RPAR .)
    IF              reduce using rule 71 (encabezado -> DEF VARIABLE LPAR parametros RPAR .)
    PUTS            reduce using rule 71 (encabezado -> DEF VARIABLE LPAR parametros RPAR .)
    FOR             reduce using rule 71 (encabezado -> DEF VARIABLE LPAR parametros RPAR .)
    WHILE           reduce using rule 71 (encabezado -> DEF VARIABLE LPAR parametros RPAR .)
    TRUE            reduce using rule 71 (encabezado -> DEF VARIABLE LPAR parametros RPAR .)
    FALSE           reduce using rule 71 (encabezado -> DEF VARIABLE LPAR parametros RPAR .)
    NUMBER          reduce using rule 71 (encabezado -> DEF VARIABLE LPAR parametros RPAR .)
    STRING          reduce using rule 71 (encabezado -> DEF VARIABLE LPAR parametros RPAR .)
    FLOAT           reduce using rule 71 (encabezado -> DEF VARIABLE LPAR parametros RPAR .)
    LPAR            reduce using rule 71 (encabezado -> DEF VARIABLE LPAR parametros RPAR .)


state 161

    (82) getValueHash -> VARIABLE LCOR expression RCOR .

    $end            reduce using rule 82 (getValueHash -> VARIABLE LCOR expression RCOR .)
    END             reduce using rule 82 (getValueHash -> VARIABLE LCOR expression RCOR .)
    RETURN          reduce using rule 82 (getValueHash -> VARIABLE LCOR expression RCOR .)


state 162

    (80) cuerpoHash -> expression ASIGN GREATER . expression
    (81) cuerpoHash -> expression ASIGN GREATER . expression COMMA cuerpoHash
    (41) expression -> . term
    (42) expression -> . boleano
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (77) boleano -> . TRUE
    (78) boleano -> . FALSE
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NUMBER          shift and go to state 27
    STRING          shift and go to state 29
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 72
    LPAR            shift and go to state 25

    expression                     shift and go to state 175
    term                           shift and go to state 20
    boleano                        shift and go to state 21
    factor                         shift and go to state 30

state 163

    (89) parametrosA -> factor COMMA parametrosA .

    RCOR            reduce using rule 89 (parametrosA -> factor COMMA parametrosA .)


state 164

    (83) addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .
    (84) modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .
    (49) expression -> expression . PLUS term
    (50) expression -> expression . MINUS term

  ! reduce/reduce conflict for $end resolved using rule 83 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
  ! reduce/reduce conflict for END resolved using rule 83 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
  ! reduce/reduce conflict for RETURN resolved using rule 83 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
    $end            reduce using rule 83 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
    END             reduce using rule 83 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
    RETURN          reduce using rule 83 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36

  ! $end            [ reduce using rule 84 (modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .) ]
  ! END             [ reduce using rule 84 (modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .) ]
  ! RETURN          [ reduce using rule 84 (modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .) ]


state 165

    (85) deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR .

    $end            reduce using rule 85 (deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR .)
    END             reduce using rule 85 (deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR .)
    RETURN          reduce using rule 85 (deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR .)


state 166

    (94) insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR .

    $end            reduce using rule 94 (insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR .)
    END             reduce using rule 94 (insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR .)
    RETURN          reduce using rule 94 (insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR .)


state 167

    (93) argumentosA -> NUMBER COMMA . factor
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    NUMBER          shift and go to state 27
    STRING          shift and go to state 29
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 72
    LPAR            shift and go to state 25

    factor                         shift and go to state 176

state 168

    (95) deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR .

    $end            reduce using rule 95 (deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR .)
    END             reduce using rule 95 (deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR .)
    RETURN          reduce using rule 95 (deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR .)


state 169

    (101) searchStack -> VARIABLE POINT SEARCH LPAR factor RPAR .

    $end            reduce using rule 101 (searchStack -> VARIABLE POINT SEARCH LPAR factor RPAR .)
    END             reduce using rule 101 (searchStack -> VARIABLE POINT SEARCH LPAR factor RPAR .)
    RETURN          reduce using rule 101 (searchStack -> VARIABLE POINT SEARCH LPAR factor RPAR .)


state 170

    (102) pushStack -> VARIABLE POINT PUSH LPAR factor RPAR .

    $end            reduce using rule 102 (pushStack -> VARIABLE POINT PUSH LPAR factor RPAR .)
    END             reduce using rule 102 (pushStack -> VARIABLE POINT PUSH LPAR factor RPAR .)
    RETURN          reduce using rule 102 (pushStack -> VARIABLE POINT PUSH LPAR factor RPAR .)


state 171

    (64) condicional -> IF comparacion D_POINT cuerpo END cond_else .

    $end            reduce using rule 64 (condicional -> IF comparacion D_POINT cuerpo END cond_else .)
    END             reduce using rule 64 (condicional -> IF comparacion D_POINT cuerpo END cond_else .)
    RETURN          reduce using rule 64 (condicional -> IF comparacion D_POINT cuerpo END cond_else .)


state 172

    (65) cond_else -> ELSE . D_POINT cuerpo END

    D_POINT         shift and go to state 177


state 173

    (86) while -> WHILE LPAR comparacion RPAR cuerpo END .
    (87) while -> WHILE LPAR comparacion RPAR cuerpo END . while
    (86) while -> . WHILE LPAR comparacion RPAR cuerpo END
    (87) while -> . WHILE LPAR comparacion RPAR cuerpo END while

    $end            reduce using rule 86 (while -> WHILE LPAR comparacion RPAR cuerpo END .)
    END             reduce using rule 86 (while -> WHILE LPAR comparacion RPAR cuerpo END .)
    RETURN          reduce using rule 86 (while -> WHILE LPAR comparacion RPAR cuerpo END .)
    WHILE           shift and go to state 24

    while                          shift and go to state 178

state 174

    (96) for -> FOR VARIABLE IN LPAR NUMBER POINT . POINT NUMBER RPAR DO cuerpo END
    (97) for -> FOR VARIABLE IN LPAR NUMBER POINT . POINT NUMBER RPAR DO cuerpo END for

    POINT           shift and go to state 179


state 175

    (80) cuerpoHash -> expression ASIGN GREATER expression .
    (81) cuerpoHash -> expression ASIGN GREATER expression . COMMA cuerpoHash
    (49) expression -> expression . PLUS term
    (50) expression -> expression . MINUS term

    RKEY            reduce using rule 80 (cuerpoHash -> expression ASIGN GREATER expression .)
    COMMA           shift and go to state 180
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36


state 176

    (93) argumentosA -> NUMBER COMMA factor .

    RPAR            reduce using rule 93 (argumentosA -> NUMBER COMMA factor .)


state 177

    (65) cond_else -> ELSE D_POINT . cuerpo END
    (18) cuerpo -> . asignacion
    (19) cuerpo -> . expression
    (20) cuerpo -> . comparacion
    (21) cuerpo -> . condicional
    (22) cuerpo -> . impresion
    (23) cuerpo -> . for
    (24) cuerpo -> . while
    (25) cuerpo -> . input
    (26) cuerpo -> . callFuncion
    (27) cuerpo -> . addValueHash
    (28) cuerpo -> . modValueHash
    (29) cuerpo -> . deleteValueHash
    (30) cuerpo -> . insertArray
    (31) cuerpo -> . deleteArray
    (32) cuerpo -> . pushStack
    (33) cuerpo -> . searchStack
    (34) asignacion -> . VARIABLE ASIGN expression
    (35) asignacion -> . VARIABLE ASIGN comparacion
    (36) asignacion -> . VARIABLE ASIGN callFuncion
    (37) asignacion -> . VARIABLE ASIGN diccionario
    (38) asignacion -> . VARIABLE ASIGN getValueHash
    (39) asignacion -> . VARIABLE ASIGN array
    (40) asignacion -> . VARIABLE ASIGN stack
    (41) expression -> . term
    (42) expression -> . boleano
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (54) comparacion -> . expression comparador expression
    (55) comparacion -> . expression comparador expression AND comparacion
    (56) comparacion -> . expression comparador expression OR comparacion
    (63) condicional -> . IF comparacion D_POINT cuerpo END
    (64) condicional -> . IF comparacion D_POINT cuerpo END cond_else
    (66) impresion -> . PUTS STRING
    (96) for -> . FOR VARIABLE IN LPAR NUMBER POINT POINT NUMBER RPAR DO cuerpo END
    (97) for -> . FOR VARIABLE IN LPAR NUMBER POINT POINT NUMBER RPAR DO cuerpo END for
    (86) while -> . WHILE LPAR comparacion RPAR cuerpo END
    (87) while -> . WHILE LPAR comparacion RPAR cuerpo END while
    (67) input -> . VARIABLE ASIGN GETS
    (75) callFuncion -> . VARIABLE LPAR RPAR
    (76) callFuncion -> . VARIABLE LPAR parametros RPAR
    (83) addValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (84) modValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (85) deleteValueHash -> . VARIABLE POINT DELETE LPAR expression RPAR
    (94) insertArray -> . VARIABLE POINT INSERT LPAR argumentosA RPAR
    (95) deleteArray -> . VARIABLE POINT DELETE_AT LPAR NUMBER RPAR
    (102) pushStack -> . VARIABLE POINT PUSH LPAR factor RPAR
    (101) searchStack -> . VARIABLE POINT SEARCH LPAR factor RPAR
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (77) boleano -> . TRUE
    (78) boleano -> . FALSE
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    VARIABLE        shift and go to state 69
    IF              shift and go to state 23
    PUTS            shift and go to state 28
    FOR             shift and go to state 26
    WHILE           shift and go to state 24
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NUMBER          shift and go to state 27
    STRING          shift and go to state 29
    FLOAT           shift and go to state 34
    LPAR            shift and go to state 25

    cuerpo                         shift and go to state 181
    asignacion                     shift and go to state 54
    expression                     shift and go to state 53
    comparacion                    shift and go to state 55
    condicional                    shift and go to state 56
    impresion                      shift and go to state 57
    for                            shift and go to state 58
    while                          shift and go to state 59
    input                          shift and go to state 60
    callFuncion                    shift and go to state 61
    addValueHash                   shift and go to state 62
    modValueHash                   shift and go to state 63
    deleteValueHash                shift and go to state 64
    insertArray                    shift and go to state 65
    deleteArray                    shift and go to state 66
    pushStack                      shift and go to state 67
    searchStack                    shift and go to state 68
    term                           shift and go to state 20
    boleano                        shift and go to state 21
    factor                         shift and go to state 30

state 178

    (87) while -> WHILE LPAR comparacion RPAR cuerpo END while .

    $end            reduce using rule 87 (while -> WHILE LPAR comparacion RPAR cuerpo END while .)
    END             reduce using rule 87 (while -> WHILE LPAR comparacion RPAR cuerpo END while .)
    RETURN          reduce using rule 87 (while -> WHILE LPAR comparacion RPAR cuerpo END while .)


state 179

    (96) for -> FOR VARIABLE IN LPAR NUMBER POINT POINT . NUMBER RPAR DO cuerpo END
    (97) for -> FOR VARIABLE IN LPAR NUMBER POINT POINT . NUMBER RPAR DO cuerpo END for

    NUMBER          shift and go to state 182


state 180

    (81) cuerpoHash -> expression ASIGN GREATER expression COMMA . cuerpoHash
    (80) cuerpoHash -> . expression ASIGN GREATER expression
    (81) cuerpoHash -> . expression ASIGN GREATER expression COMMA cuerpoHash
    (41) expression -> . term
    (42) expression -> . boleano
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (77) boleano -> . TRUE
    (78) boleano -> . FALSE
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NUMBER          shift and go to state 27
    STRING          shift and go to state 29
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 72
    LPAR            shift and go to state 25

    expression                     shift and go to state 119
    cuerpoHash                     shift and go to state 183
    term                           shift and go to state 20
    boleano                        shift and go to state 21
    factor                         shift and go to state 30

state 181

    (65) cond_else -> ELSE D_POINT cuerpo . END

    END             shift and go to state 184


state 182

    (96) for -> FOR VARIABLE IN LPAR NUMBER POINT POINT NUMBER . RPAR DO cuerpo END
    (97) for -> FOR VARIABLE IN LPAR NUMBER POINT POINT NUMBER . RPAR DO cuerpo END for

    RPAR            shift and go to state 185


state 183

    (81) cuerpoHash -> expression ASIGN GREATER expression COMMA cuerpoHash .

    RKEY            reduce using rule 81 (cuerpoHash -> expression ASIGN GREATER expression COMMA cuerpoHash .)


state 184

    (65) cond_else -> ELSE D_POINT cuerpo END .

    $end            reduce using rule 65 (cond_else -> ELSE D_POINT cuerpo END .)
    END             reduce using rule 65 (cond_else -> ELSE D_POINT cuerpo END .)
    RETURN          reduce using rule 65 (cond_else -> ELSE D_POINT cuerpo END .)


state 185

    (96) for -> FOR VARIABLE IN LPAR NUMBER POINT POINT NUMBER RPAR . DO cuerpo END
    (97) for -> FOR VARIABLE IN LPAR NUMBER POINT POINT NUMBER RPAR . DO cuerpo END for

    DO              shift and go to state 186


state 186

    (96) for -> FOR VARIABLE IN LPAR NUMBER POINT POINT NUMBER RPAR DO . cuerpo END
    (97) for -> FOR VARIABLE IN LPAR NUMBER POINT POINT NUMBER RPAR DO . cuerpo END for
    (18) cuerpo -> . asignacion
    (19) cuerpo -> . expression
    (20) cuerpo -> . comparacion
    (21) cuerpo -> . condicional
    (22) cuerpo -> . impresion
    (23) cuerpo -> . for
    (24) cuerpo -> . while
    (25) cuerpo -> . input
    (26) cuerpo -> . callFuncion
    (27) cuerpo -> . addValueHash
    (28) cuerpo -> . modValueHash
    (29) cuerpo -> . deleteValueHash
    (30) cuerpo -> . insertArray
    (31) cuerpo -> . deleteArray
    (32) cuerpo -> . pushStack
    (33) cuerpo -> . searchStack
    (34) asignacion -> . VARIABLE ASIGN expression
    (35) asignacion -> . VARIABLE ASIGN comparacion
    (36) asignacion -> . VARIABLE ASIGN callFuncion
    (37) asignacion -> . VARIABLE ASIGN diccionario
    (38) asignacion -> . VARIABLE ASIGN getValueHash
    (39) asignacion -> . VARIABLE ASIGN array
    (40) asignacion -> . VARIABLE ASIGN stack
    (41) expression -> . term
    (42) expression -> . boleano
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (54) comparacion -> . expression comparador expression
    (55) comparacion -> . expression comparador expression AND comparacion
    (56) comparacion -> . expression comparador expression OR comparacion
    (63) condicional -> . IF comparacion D_POINT cuerpo END
    (64) condicional -> . IF comparacion D_POINT cuerpo END cond_else
    (66) impresion -> . PUTS STRING
    (96) for -> . FOR VARIABLE IN LPAR NUMBER POINT POINT NUMBER RPAR DO cuerpo END
    (97) for -> . FOR VARIABLE IN LPAR NUMBER POINT POINT NUMBER RPAR DO cuerpo END for
    (86) while -> . WHILE LPAR comparacion RPAR cuerpo END
    (87) while -> . WHILE LPAR comparacion RPAR cuerpo END while
    (67) input -> . VARIABLE ASIGN GETS
    (75) callFuncion -> . VARIABLE LPAR RPAR
    (76) callFuncion -> . VARIABLE LPAR parametros RPAR
    (83) addValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (84) modValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (85) deleteValueHash -> . VARIABLE POINT DELETE LPAR expression RPAR
    (94) insertArray -> . VARIABLE POINT INSERT LPAR argumentosA RPAR
    (95) deleteArray -> . VARIABLE POINT DELETE_AT LPAR NUMBER RPAR
    (102) pushStack -> . VARIABLE POINT PUSH LPAR factor RPAR
    (101) searchStack -> . VARIABLE POINT SEARCH LPAR factor RPAR
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (77) boleano -> . TRUE
    (78) boleano -> . FALSE
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    VARIABLE        shift and go to state 69
    IF              shift and go to state 23
    PUTS            shift and go to state 28
    FOR             shift and go to state 26
    WHILE           shift and go to state 24
    TRUE            shift and go to state 31
    FALSE           shift and go to state 32
    NUMBER          shift and go to state 27
    STRING          shift and go to state 29
    FLOAT           shift and go to state 34
    LPAR            shift and go to state 25

    cuerpo                         shift and go to state 187
    for                            shift and go to state 58
    asignacion                     shift and go to state 54
    expression                     shift and go to state 53
    comparacion                    shift and go to state 55
    condicional                    shift and go to state 56
    impresion                      shift and go to state 57
    while                          shift and go to state 59
    input                          shift and go to state 60
    callFuncion                    shift and go to state 61
    addValueHash                   shift and go to state 62
    modValueHash                   shift and go to state 63
    deleteValueHash                shift and go to state 64
    insertArray                    shift and go to state 65
    deleteArray                    shift and go to state 66
    pushStack                      shift and go to state 67
    searchStack                    shift and go to state 68
    term                           shift and go to state 20
    boleano                        shift and go to state 21
    factor                         shift and go to state 30

state 187

    (96) for -> FOR VARIABLE IN LPAR NUMBER POINT POINT NUMBER RPAR DO cuerpo . END
    (97) for -> FOR VARIABLE IN LPAR NUMBER POINT POINT NUMBER RPAR DO cuerpo . END for

    END             shift and go to state 188


state 188

    (96) for -> FOR VARIABLE IN LPAR NUMBER POINT POINT NUMBER RPAR DO cuerpo END .
    (97) for -> FOR VARIABLE IN LPAR NUMBER POINT POINT NUMBER RPAR DO cuerpo END . for
    (96) for -> . FOR VARIABLE IN LPAR NUMBER POINT POINT NUMBER RPAR DO cuerpo END
    (97) for -> . FOR VARIABLE IN LPAR NUMBER POINT POINT NUMBER RPAR DO cuerpo END for

    $end            reduce using rule 96 (for -> FOR VARIABLE IN LPAR NUMBER POINT POINT NUMBER RPAR DO cuerpo END .)
    END             reduce using rule 96 (for -> FOR VARIABLE IN LPAR NUMBER POINT POINT NUMBER RPAR DO cuerpo END .)
    RETURN          reduce using rule 96 (for -> FOR VARIABLE IN LPAR NUMBER POINT POINT NUMBER RPAR DO cuerpo END .)
    FOR             shift and go to state 26

    for                            shift and go to state 189

state 189

    (97) for -> FOR VARIABLE IN LPAR NUMBER POINT POINT NUMBER RPAR DO cuerpo END for .

    $end            reduce using rule 97 (for -> FOR VARIABLE IN LPAR NUMBER POINT POINT NUMBER RPAR DO cuerpo END for .)
    END             reduce using rule 97 (for -> FOR VARIABLE IN LPAR NUMBER POINT POINT NUMBER RPAR DO cuerpo END for .)
    RETURN          reduce using rule 97 (for -> FOR VARIABLE IN LPAR NUMBER POINT POINT NUMBER RPAR DO cuerpo END for .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ASIGN in state 19 resolved as shift
WARNING: shift/reduce conflict for ASIGN in state 69 resolved as shift
WARNING: reduce/reduce conflict in state 145 resolved using rule (array -> LCOR parametrosA RCOR)
WARNING: rejected rule (stack -> LCOR parametrosA RCOR) in state 145
WARNING: reduce/reduce conflict in state 164 resolved using rule (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression)
WARNING: rejected rule (modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression) in state 164
WARNING: Rule (stack -> LCOR parametrosA RCOR) is never reduced
WARNING: Rule (modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression) is never reduced
