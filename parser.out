Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    ALIAS
    DO
    EACH
    ENSURE
    IN
    INCLUDE
    PUSH
    QUESTION
    SEARCH
    SELF

Grammar

Rule 0     S' -> instrucciones
Rule 1     instrucciones -> asignacion
Rule 2     instrucciones -> expression
Rule 3     instrucciones -> funciones
Rule 4     instrucciones -> comparacion
Rule 5     instrucciones -> condicional
Rule 6     instrucciones -> while
Rule 7     instrucciones -> impresion
Rule 8     instrucciones -> input
Rule 9     instrucciones -> callFuncion
Rule 10    instrucciones -> addValueHash
Rule 11    instrucciones -> modValueHash
Rule 12    instrucciones -> deleteValueHash
Rule 13    instrucciones -> insertArray
Rule 14    instrucciones -> deleteArray
Rule 15    cuerpo -> asignacion
Rule 16    cuerpo -> expression
Rule 17    cuerpo -> comparacion
Rule 18    cuerpo -> condicional
Rule 19    cuerpo -> impresion
Rule 20    cuerpo -> input
Rule 21    cuerpo -> callFuncion
Rule 22    cuerpo -> addValueHash
Rule 23    cuerpo -> modValueHash
Rule 24    cuerpo -> deleteValueHash
Rule 25    cuerpo -> insertArray
Rule 26    cuerpo -> deleteArray
Rule 27    asignacion -> VARIABLE ASIGN expression
Rule 28    asignacion -> VARIABLE ASIGN comparacion
Rule 29    asignacion -> VARIABLE ASIGN callFuncion
Rule 30    asignacion -> VARIABLE ASIGN diccionario
Rule 31    asignacion -> VARIABLE ASIGN getValueHash
Rule 32    asignacion -> VARIABLE ASIGN array
Rule 33    expression -> term
Rule 34    expression -> boleano
Rule 35    term -> factor
Rule 36    factor -> NUMBER
Rule 37    factor -> STRING
Rule 38    factor -> FLOAT
Rule 39    factor -> VARIABLE
Rule 40    factor -> LPAR expression RPAR
Rule 41    expression -> expression PLUS term
Rule 42    expression -> expression MINUS term
Rule 43    term -> term TIMES factor
Rule 44    term -> term DIVIDE factor
Rule 45    term -> term EXPONENTIATION factor
Rule 46    comparacion -> expression comparador expression
Rule 47    comparacion -> expression comparador expression AND comparacion
Rule 48    comparacion -> expression comparador expression OR comparacion
Rule 49    comparador -> GREATER
Rule 50    comparador -> GREATER_OR_EQUAL
Rule 51    comparador -> MINOR
Rule 52    comparador -> MINOR_OR_EQUAL
Rule 53    comparador -> ASIGN ASIGN
Rule 54    comparador -> NOT ASIGN
Rule 55    condicional -> IF comparacion D_POINT cuerpo END
Rule 56    condicional -> IF comparacion D_POINT cuerpo END cond_else
Rule 57    cond_else -> ELSE D_POINT cuerpo END
Rule 58    impresion -> PUTS STRING
Rule 59    input -> VARIABLE ASIGN GETS
Rule 60    parametros -> VARIABLE
Rule 61    parametros -> VARIABLE COMMA parametros
Rule 62    encabezado -> DEF VARIABLE LPAR RPAR
Rule 63    encabezado -> DEF VARIABLE LPAR parametros RPAR
Rule 64    funciones -> encabezado cuerpo END
Rule 65    funciones -> encabezado RETURN expression END
Rule 66    funciones -> encabezado cuerpo RETURN expression END
Rule 67    callFuncion -> VARIABLE LPAR RPAR
Rule 68    callFuncion -> VARIABLE LPAR parametros RPAR
Rule 69    boleano -> TRUE
Rule 70    boleano -> FALSE
Rule 71    diccionario -> LKEY cuerpoHash RKEY
Rule 72    cuerpoHash -> expression ASIGN GREATER expression
Rule 73    cuerpoHash -> expression ASIGN GREATER expression COMMA cuerpoHash
Rule 74    getValueHash -> VARIABLE LCOR expression RCOR
Rule 75    addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression
Rule 76    modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression
Rule 77    deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR
Rule 78    while -> WHILE LPAR comparacion RPAR cuerpo END
Rule 79    while -> WHILE LPAR comparacion RPAR cuerpo END while
Rule 80    parametrosA -> factor
Rule 81    parametrosA -> factor COMMA parametrosA
Rule 82    array -> LCOR parametrosA RCOR
Rule 83    array -> LCOR RCOR
Rule 84    argumentosA -> NUMBER
Rule 85    argumentosA -> NUMBER COMMA factor
Rule 86    insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR
Rule 87    deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR

Terminals, with rules where they appear

ALIAS                : 
AND                  : 47
ASIGN                : 27 28 29 30 31 32 53 53 54 59 72 73 75 76
COMMA                : 61 73 81 85
DEF                  : 62 63
DELETE               : 77
DELETE_AT            : 87
DIVIDE               : 44
DO                   : 
D_POINT              : 55 56 57
EACH                 : 
ELSE                 : 57
END                  : 55 56 57 64 65 66 78 79
ENSURE               : 
EXPONENTIATION       : 45
FALSE                : 70
FLOAT                : 38
GETS                 : 59
GREATER              : 49 72 73
GREATER_OR_EQUAL     : 50
IF                   : 55 56
IN                   : 
INCLUDE              : 
INSERT               : 86
LCOR                 : 74 75 76 82 83
LKEY                 : 71
LPAR                 : 40 62 63 67 68 77 78 79 86 87
MINOR                : 51
MINOR_OR_EQUAL       : 52
MINUS                : 42
NOT                  : 54
NUMBER               : 36 84 85 87
OR                   : 48
PLUS                 : 41
POINT                : 77 86 87
PUSH                 : 
PUTS                 : 58
QUESTION             : 
RCOR                 : 74 75 76 82 83
RETURN               : 65 66
RKEY                 : 71
RPAR                 : 40 62 63 67 68 77 78 79 86 87
SEARCH               : 
SELF                 : 
STRING               : 37 58
TIMES                : 43
TRUE                 : 69
VARIABLE             : 27 28 29 30 31 32 39 59 60 61 62 63 67 68 74 75 76 77 86 87
WHILE                : 78 79
error                : 

Nonterminals, with rules where they appear

addValueHash         : 10 22
argumentosA          : 86
array                : 32
asignacion           : 1 15
boleano              : 34
callFuncion          : 9 21 29
comparacion          : 4 17 28 47 48 55 56 78 79
comparador           : 46 47 48
cond_else            : 56
condicional          : 5 18
cuerpo               : 55 56 57 64 66 78 79
cuerpoHash           : 71 73
deleteArray          : 14 26
deleteValueHash      : 12 24
diccionario          : 30
encabezado           : 64 65 66
expression           : 2 16 27 40 41 42 46 46 47 47 48 48 65 66 72 72 73 73 74 75 75 76 76 77
factor               : 35 43 44 45 80 81 85
funciones            : 3
getValueHash         : 31
impresion            : 7 19
input                : 8 20
insertArray          : 13 25
instrucciones        : 0
modValueHash         : 11 23
parametros           : 61 63 68
parametrosA          : 81 82
term                 : 33 41 42 43 44 45
while                : 6 79

Parsing method: LALR

state 0

    (0) S' -> . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . expression
    (3) instrucciones -> . funciones
    (4) instrucciones -> . comparacion
    (5) instrucciones -> . condicional
    (6) instrucciones -> . while
    (7) instrucciones -> . impresion
    (8) instrucciones -> . input
    (9) instrucciones -> . callFuncion
    (10) instrucciones -> . addValueHash
    (11) instrucciones -> . modValueHash
    (12) instrucciones -> . deleteValueHash
    (13) instrucciones -> . insertArray
    (14) instrucciones -> . deleteArray
    (27) asignacion -> . VARIABLE ASIGN expression
    (28) asignacion -> . VARIABLE ASIGN comparacion
    (29) asignacion -> . VARIABLE ASIGN callFuncion
    (30) asignacion -> . VARIABLE ASIGN diccionario
    (31) asignacion -> . VARIABLE ASIGN getValueHash
    (32) asignacion -> . VARIABLE ASIGN array
    (33) expression -> . term
    (34) expression -> . boleano
    (41) expression -> . expression PLUS term
    (42) expression -> . expression MINUS term
    (64) funciones -> . encabezado cuerpo END
    (65) funciones -> . encabezado RETURN expression END
    (66) funciones -> . encabezado cuerpo RETURN expression END
    (46) comparacion -> . expression comparador expression
    (47) comparacion -> . expression comparador expression AND comparacion
    (48) comparacion -> . expression comparador expression OR comparacion
    (55) condicional -> . IF comparacion D_POINT cuerpo END
    (56) condicional -> . IF comparacion D_POINT cuerpo END cond_else
    (78) while -> . WHILE LPAR comparacion RPAR cuerpo END
    (79) while -> . WHILE LPAR comparacion RPAR cuerpo END while
    (58) impresion -> . PUTS STRING
    (59) input -> . VARIABLE ASIGN GETS
    (67) callFuncion -> . VARIABLE LPAR RPAR
    (68) callFuncion -> . VARIABLE LPAR parametros RPAR
    (75) addValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (76) modValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (77) deleteValueHash -> . VARIABLE POINT DELETE LPAR expression RPAR
    (86) insertArray -> . VARIABLE POINT INSERT LPAR argumentosA RPAR
    (87) deleteArray -> . VARIABLE POINT DELETE_AT LPAR NUMBER RPAR
    (35) term -> . factor
    (43) term -> . term TIMES factor
    (44) term -> . term DIVIDE factor
    (45) term -> . term EXPONENTIATION factor
    (69) boleano -> . TRUE
    (70) boleano -> . FALSE
    (62) encabezado -> . DEF VARIABLE LPAR RPAR
    (63) encabezado -> . DEF VARIABLE LPAR parametros RPAR
    (36) factor -> . NUMBER
    (37) factor -> . STRING
    (38) factor -> . FLOAT
    (39) factor -> . VARIABLE
    (40) factor -> . LPAR expression RPAR

    VARIABLE        shift and go to state 16
    IF              shift and go to state 20
    WHILE           shift and go to state 21
    PUTS            shift and go to state 23
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    DEF             shift and go to state 29
    NUMBER          shift and go to state 25
    STRING          shift and go to state 24
    FLOAT           shift and go to state 30
    LPAR            shift and go to state 22

    instrucciones                  shift and go to state 1
    asignacion                     shift and go to state 2
    expression                     shift and go to state 3
    funciones                      shift and go to state 4
    comparacion                    shift and go to state 5
    condicional                    shift and go to state 6
    while                          shift and go to state 7
    impresion                      shift and go to state 8
    input                          shift and go to state 9
    callFuncion                    shift and go to state 10
    addValueHash                   shift and go to state 11
    modValueHash                   shift and go to state 12
    deleteValueHash                shift and go to state 13
    insertArray                    shift and go to state 14
    deleteArray                    shift and go to state 15
    term                           shift and go to state 17
    boleano                        shift and go to state 18
    encabezado                     shift and go to state 19
    factor                         shift and go to state 26

state 1

    (0) S' -> instrucciones .



state 2

    (1) instrucciones -> asignacion .

    $end            reduce using rule 1 (instrucciones -> asignacion .)


state 3

    (2) instrucciones -> expression .
    (41) expression -> expression . PLUS term
    (42) expression -> expression . MINUS term
    (46) comparacion -> expression . comparador expression
    (47) comparacion -> expression . comparador expression AND comparacion
    (48) comparacion -> expression . comparador expression OR comparacion
    (49) comparador -> . GREATER
    (50) comparador -> . GREATER_OR_EQUAL
    (51) comparador -> . MINOR
    (52) comparador -> . MINOR_OR_EQUAL
    (53) comparador -> . ASIGN ASIGN
    (54) comparador -> . NOT ASIGN

    $end            reduce using rule 2 (instrucciones -> expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    GREATER         shift and go to state 34
    GREATER_OR_EQUAL shift and go to state 35
    MINOR           shift and go to state 36
    MINOR_OR_EQUAL  shift and go to state 37
    ASIGN           shift and go to state 38
    NOT             shift and go to state 39

    comparador                     shift and go to state 33

state 4

    (3) instrucciones -> funciones .

    $end            reduce using rule 3 (instrucciones -> funciones .)


state 5

    (4) instrucciones -> comparacion .

    $end            reduce using rule 4 (instrucciones -> comparacion .)


state 6

    (5) instrucciones -> condicional .

    $end            reduce using rule 5 (instrucciones -> condicional .)


state 7

    (6) instrucciones -> while .

    $end            reduce using rule 6 (instrucciones -> while .)


state 8

    (7) instrucciones -> impresion .

    $end            reduce using rule 7 (instrucciones -> impresion .)


state 9

    (8) instrucciones -> input .

    $end            reduce using rule 8 (instrucciones -> input .)


state 10

    (9) instrucciones -> callFuncion .

    $end            reduce using rule 9 (instrucciones -> callFuncion .)


state 11

    (10) instrucciones -> addValueHash .

    $end            reduce using rule 10 (instrucciones -> addValueHash .)


state 12

    (11) instrucciones -> modValueHash .

    $end            reduce using rule 11 (instrucciones -> modValueHash .)


state 13

    (12) instrucciones -> deleteValueHash .

    $end            reduce using rule 12 (instrucciones -> deleteValueHash .)


state 14

    (13) instrucciones -> insertArray .

    $end            reduce using rule 13 (instrucciones -> insertArray .)


state 15

    (14) instrucciones -> deleteArray .

    $end            reduce using rule 14 (instrucciones -> deleteArray .)


state 16

    (27) asignacion -> VARIABLE . ASIGN expression
    (28) asignacion -> VARIABLE . ASIGN comparacion
    (29) asignacion -> VARIABLE . ASIGN callFuncion
    (30) asignacion -> VARIABLE . ASIGN diccionario
    (31) asignacion -> VARIABLE . ASIGN getValueHash
    (32) asignacion -> VARIABLE . ASIGN array
    (59) input -> VARIABLE . ASIGN GETS
    (67) callFuncion -> VARIABLE . LPAR RPAR
    (68) callFuncion -> VARIABLE . LPAR parametros RPAR
    (75) addValueHash -> VARIABLE . LCOR expression RCOR ASIGN expression
    (76) modValueHash -> VARIABLE . LCOR expression RCOR ASIGN expression
    (77) deleteValueHash -> VARIABLE . POINT DELETE LPAR expression RPAR
    (86) insertArray -> VARIABLE . POINT INSERT LPAR argumentosA RPAR
    (87) deleteArray -> VARIABLE . POINT DELETE_AT LPAR NUMBER RPAR
    (39) factor -> VARIABLE .

  ! shift/reduce conflict for ASIGN resolved as shift
    ASIGN           shift and go to state 40
    LPAR            shift and go to state 41
    LCOR            shift and go to state 42
    POINT           shift and go to state 43
    TIMES           reduce using rule 39 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 39 (factor -> VARIABLE .)
    EXPONENTIATION  reduce using rule 39 (factor -> VARIABLE .)
    PLUS            reduce using rule 39 (factor -> VARIABLE .)
    MINUS           reduce using rule 39 (factor -> VARIABLE .)
    GREATER         reduce using rule 39 (factor -> VARIABLE .)
    GREATER_OR_EQUAL reduce using rule 39 (factor -> VARIABLE .)
    MINOR           reduce using rule 39 (factor -> VARIABLE .)
    MINOR_OR_EQUAL  reduce using rule 39 (factor -> VARIABLE .)
    NOT             reduce using rule 39 (factor -> VARIABLE .)
    $end            reduce using rule 39 (factor -> VARIABLE .)
    END             reduce using rule 39 (factor -> VARIABLE .)
    RETURN          reduce using rule 39 (factor -> VARIABLE .)

  ! ASIGN           [ reduce using rule 39 (factor -> VARIABLE .) ]


state 17

    (33) expression -> term .
    (43) term -> term . TIMES factor
    (44) term -> term . DIVIDE factor
    (45) term -> term . EXPONENTIATION factor

    PLUS            reduce using rule 33 (expression -> term .)
    MINUS           reduce using rule 33 (expression -> term .)
    GREATER         reduce using rule 33 (expression -> term .)
    GREATER_OR_EQUAL reduce using rule 33 (expression -> term .)
    MINOR           reduce using rule 33 (expression -> term .)
    MINOR_OR_EQUAL  reduce using rule 33 (expression -> term .)
    ASIGN           reduce using rule 33 (expression -> term .)
    NOT             reduce using rule 33 (expression -> term .)
    $end            reduce using rule 33 (expression -> term .)
    END             reduce using rule 33 (expression -> term .)
    RETURN          reduce using rule 33 (expression -> term .)
    RPAR            reduce using rule 33 (expression -> term .)
    AND             reduce using rule 33 (expression -> term .)
    OR              reduce using rule 33 (expression -> term .)
    D_POINT         reduce using rule 33 (expression -> term .)
    RCOR            reduce using rule 33 (expression -> term .)
    COMMA           reduce using rule 33 (expression -> term .)
    RKEY            reduce using rule 33 (expression -> term .)
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    EXPONENTIATION  shift and go to state 46


state 18

    (34) expression -> boleano .

    PLUS            reduce using rule 34 (expression -> boleano .)
    MINUS           reduce using rule 34 (expression -> boleano .)
    GREATER         reduce using rule 34 (expression -> boleano .)
    GREATER_OR_EQUAL reduce using rule 34 (expression -> boleano .)
    MINOR           reduce using rule 34 (expression -> boleano .)
    MINOR_OR_EQUAL  reduce using rule 34 (expression -> boleano .)
    ASIGN           reduce using rule 34 (expression -> boleano .)
    NOT             reduce using rule 34 (expression -> boleano .)
    $end            reduce using rule 34 (expression -> boleano .)
    END             reduce using rule 34 (expression -> boleano .)
    RETURN          reduce using rule 34 (expression -> boleano .)
    RPAR            reduce using rule 34 (expression -> boleano .)
    AND             reduce using rule 34 (expression -> boleano .)
    OR              reduce using rule 34 (expression -> boleano .)
    D_POINT         reduce using rule 34 (expression -> boleano .)
    RCOR            reduce using rule 34 (expression -> boleano .)
    COMMA           reduce using rule 34 (expression -> boleano .)
    RKEY            reduce using rule 34 (expression -> boleano .)


state 19

    (64) funciones -> encabezado . cuerpo END
    (65) funciones -> encabezado . RETURN expression END
    (66) funciones -> encabezado . cuerpo RETURN expression END
    (15) cuerpo -> . asignacion
    (16) cuerpo -> . expression
    (17) cuerpo -> . comparacion
    (18) cuerpo -> . condicional
    (19) cuerpo -> . impresion
    (20) cuerpo -> . input
    (21) cuerpo -> . callFuncion
    (22) cuerpo -> . addValueHash
    (23) cuerpo -> . modValueHash
    (24) cuerpo -> . deleteValueHash
    (25) cuerpo -> . insertArray
    (26) cuerpo -> . deleteArray
    (27) asignacion -> . VARIABLE ASIGN expression
    (28) asignacion -> . VARIABLE ASIGN comparacion
    (29) asignacion -> . VARIABLE ASIGN callFuncion
    (30) asignacion -> . VARIABLE ASIGN diccionario
    (31) asignacion -> . VARIABLE ASIGN getValueHash
    (32) asignacion -> . VARIABLE ASIGN array
    (33) expression -> . term
    (34) expression -> . boleano
    (41) expression -> . expression PLUS term
    (42) expression -> . expression MINUS term
    (46) comparacion -> . expression comparador expression
    (47) comparacion -> . expression comparador expression AND comparacion
    (48) comparacion -> . expression comparador expression OR comparacion
    (55) condicional -> . IF comparacion D_POINT cuerpo END
    (56) condicional -> . IF comparacion D_POINT cuerpo END cond_else
    (58) impresion -> . PUTS STRING
    (59) input -> . VARIABLE ASIGN GETS
    (67) callFuncion -> . VARIABLE LPAR RPAR
    (68) callFuncion -> . VARIABLE LPAR parametros RPAR
    (75) addValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (76) modValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (77) deleteValueHash -> . VARIABLE POINT DELETE LPAR expression RPAR
    (86) insertArray -> . VARIABLE POINT INSERT LPAR argumentosA RPAR
    (87) deleteArray -> . VARIABLE POINT DELETE_AT LPAR NUMBER RPAR
    (35) term -> . factor
    (43) term -> . term TIMES factor
    (44) term -> . term DIVIDE factor
    (45) term -> . term EXPONENTIATION factor
    (69) boleano -> . TRUE
    (70) boleano -> . FALSE
    (36) factor -> . NUMBER
    (37) factor -> . STRING
    (38) factor -> . FLOAT
    (39) factor -> . VARIABLE
    (40) factor -> . LPAR expression RPAR

    RETURN          shift and go to state 48
    VARIABLE        shift and go to state 16
    IF              shift and go to state 20
    PUTS            shift and go to state 23
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NUMBER          shift and go to state 25
    STRING          shift and go to state 24
    FLOAT           shift and go to state 30
    LPAR            shift and go to state 22

    cuerpo                         shift and go to state 47
    expression                     shift and go to state 49
    asignacion                     shift and go to state 50
    comparacion                    shift and go to state 51
    condicional                    shift and go to state 52
    impresion                      shift and go to state 53
    input                          shift and go to state 54
    callFuncion                    shift and go to state 55
    addValueHash                   shift and go to state 56
    modValueHash                   shift and go to state 57
    deleteValueHash                shift and go to state 58
    insertArray                    shift and go to state 59
    deleteArray                    shift and go to state 60
    term                           shift and go to state 17
    boleano                        shift and go to state 18
    factor                         shift and go to state 26

state 20

    (55) condicional -> IF . comparacion D_POINT cuerpo END
    (56) condicional -> IF . comparacion D_POINT cuerpo END cond_else
    (46) comparacion -> . expression comparador expression
    (47) comparacion -> . expression comparador expression AND comparacion
    (48) comparacion -> . expression comparador expression OR comparacion
    (33) expression -> . term
    (34) expression -> . boleano
    (41) expression -> . expression PLUS term
    (42) expression -> . expression MINUS term
    (35) term -> . factor
    (43) term -> . term TIMES factor
    (44) term -> . term DIVIDE factor
    (45) term -> . term EXPONENTIATION factor
    (69) boleano -> . TRUE
    (70) boleano -> . FALSE
    (36) factor -> . NUMBER
    (37) factor -> . STRING
    (38) factor -> . FLOAT
    (39) factor -> . VARIABLE
    (40) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NUMBER          shift and go to state 25
    STRING          shift and go to state 24
    FLOAT           shift and go to state 30
    VARIABLE        shift and go to state 63
    LPAR            shift and go to state 22

    comparacion                    shift and go to state 61
    expression                     shift and go to state 62
    term                           shift and go to state 17
    boleano                        shift and go to state 18
    factor                         shift and go to state 26

state 21

    (78) while -> WHILE . LPAR comparacion RPAR cuerpo END
    (79) while -> WHILE . LPAR comparacion RPAR cuerpo END while

    LPAR            shift and go to state 64


state 22

    (40) factor -> LPAR . expression RPAR
    (33) expression -> . term
    (34) expression -> . boleano
    (41) expression -> . expression PLUS term
    (42) expression -> . expression MINUS term
    (35) term -> . factor
    (43) term -> . term TIMES factor
    (44) term -> . term DIVIDE factor
    (45) term -> . term EXPONENTIATION factor
    (69) boleano -> . TRUE
    (70) boleano -> . FALSE
    (36) factor -> . NUMBER
    (37) factor -> . STRING
    (38) factor -> . FLOAT
    (39) factor -> . VARIABLE
    (40) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NUMBER          shift and go to state 25
    STRING          shift and go to state 24
    FLOAT           shift and go to state 30
    VARIABLE        shift and go to state 63
    LPAR            shift and go to state 22

    expression                     shift and go to state 65
    term                           shift and go to state 17
    boleano                        shift and go to state 18
    factor                         shift and go to state 26

state 23

    (58) impresion -> PUTS . STRING

    STRING          shift and go to state 66


state 24

    (37) factor -> STRING .

    TIMES           reduce using rule 37 (factor -> STRING .)
    DIVIDE          reduce using rule 37 (factor -> STRING .)
    EXPONENTIATION  reduce using rule 37 (factor -> STRING .)
    PLUS            reduce using rule 37 (factor -> STRING .)
    MINUS           reduce using rule 37 (factor -> STRING .)
    GREATER         reduce using rule 37 (factor -> STRING .)
    GREATER_OR_EQUAL reduce using rule 37 (factor -> STRING .)
    MINOR           reduce using rule 37 (factor -> STRING .)
    MINOR_OR_EQUAL  reduce using rule 37 (factor -> STRING .)
    ASIGN           reduce using rule 37 (factor -> STRING .)
    NOT             reduce using rule 37 (factor -> STRING .)
    $end            reduce using rule 37 (factor -> STRING .)
    END             reduce using rule 37 (factor -> STRING .)
    RETURN          reduce using rule 37 (factor -> STRING .)
    RPAR            reduce using rule 37 (factor -> STRING .)
    AND             reduce using rule 37 (factor -> STRING .)
    OR              reduce using rule 37 (factor -> STRING .)
    D_POINT         reduce using rule 37 (factor -> STRING .)
    RCOR            reduce using rule 37 (factor -> STRING .)
    COMMA           reduce using rule 37 (factor -> STRING .)
    RKEY            reduce using rule 37 (factor -> STRING .)


state 25

    (36) factor -> NUMBER .

    TIMES           reduce using rule 36 (factor -> NUMBER .)
    DIVIDE          reduce using rule 36 (factor -> NUMBER .)
    EXPONENTIATION  reduce using rule 36 (factor -> NUMBER .)
    PLUS            reduce using rule 36 (factor -> NUMBER .)
    MINUS           reduce using rule 36 (factor -> NUMBER .)
    GREATER         reduce using rule 36 (factor -> NUMBER .)
    GREATER_OR_EQUAL reduce using rule 36 (factor -> NUMBER .)
    MINOR           reduce using rule 36 (factor -> NUMBER .)
    MINOR_OR_EQUAL  reduce using rule 36 (factor -> NUMBER .)
    ASIGN           reduce using rule 36 (factor -> NUMBER .)
    NOT             reduce using rule 36 (factor -> NUMBER .)
    $end            reduce using rule 36 (factor -> NUMBER .)
    END             reduce using rule 36 (factor -> NUMBER .)
    RETURN          reduce using rule 36 (factor -> NUMBER .)
    RPAR            reduce using rule 36 (factor -> NUMBER .)
    AND             reduce using rule 36 (factor -> NUMBER .)
    OR              reduce using rule 36 (factor -> NUMBER .)
    D_POINT         reduce using rule 36 (factor -> NUMBER .)
    RCOR            reduce using rule 36 (factor -> NUMBER .)
    COMMA           reduce using rule 36 (factor -> NUMBER .)
    RKEY            reduce using rule 36 (factor -> NUMBER .)


state 26

    (35) term -> factor .

    TIMES           reduce using rule 35 (term -> factor .)
    DIVIDE          reduce using rule 35 (term -> factor .)
    EXPONENTIATION  reduce using rule 35 (term -> factor .)
    PLUS            reduce using rule 35 (term -> factor .)
    MINUS           reduce using rule 35 (term -> factor .)
    GREATER         reduce using rule 35 (term -> factor .)
    GREATER_OR_EQUAL reduce using rule 35 (term -> factor .)
    MINOR           reduce using rule 35 (term -> factor .)
    MINOR_OR_EQUAL  reduce using rule 35 (term -> factor .)
    ASIGN           reduce using rule 35 (term -> factor .)
    NOT             reduce using rule 35 (term -> factor .)
    $end            reduce using rule 35 (term -> factor .)
    END             reduce using rule 35 (term -> factor .)
    RETURN          reduce using rule 35 (term -> factor .)
    RPAR            reduce using rule 35 (term -> factor .)
    AND             reduce using rule 35 (term -> factor .)
    OR              reduce using rule 35 (term -> factor .)
    D_POINT         reduce using rule 35 (term -> factor .)
    RCOR            reduce using rule 35 (term -> factor .)
    COMMA           reduce using rule 35 (term -> factor .)
    RKEY            reduce using rule 35 (term -> factor .)


state 27

    (69) boleano -> TRUE .

    PLUS            reduce using rule 69 (boleano -> TRUE .)
    MINUS           reduce using rule 69 (boleano -> TRUE .)
    GREATER         reduce using rule 69 (boleano -> TRUE .)
    GREATER_OR_EQUAL reduce using rule 69 (boleano -> TRUE .)
    MINOR           reduce using rule 69 (boleano -> TRUE .)
    MINOR_OR_EQUAL  reduce using rule 69 (boleano -> TRUE .)
    ASIGN           reduce using rule 69 (boleano -> TRUE .)
    NOT             reduce using rule 69 (boleano -> TRUE .)
    $end            reduce using rule 69 (boleano -> TRUE .)
    END             reduce using rule 69 (boleano -> TRUE .)
    RETURN          reduce using rule 69 (boleano -> TRUE .)
    RPAR            reduce using rule 69 (boleano -> TRUE .)
    AND             reduce using rule 69 (boleano -> TRUE .)
    OR              reduce using rule 69 (boleano -> TRUE .)
    D_POINT         reduce using rule 69 (boleano -> TRUE .)
    RCOR            reduce using rule 69 (boleano -> TRUE .)
    COMMA           reduce using rule 69 (boleano -> TRUE .)
    RKEY            reduce using rule 69 (boleano -> TRUE .)


state 28

    (70) boleano -> FALSE .

    PLUS            reduce using rule 70 (boleano -> FALSE .)
    MINUS           reduce using rule 70 (boleano -> FALSE .)
    GREATER         reduce using rule 70 (boleano -> FALSE .)
    GREATER_OR_EQUAL reduce using rule 70 (boleano -> FALSE .)
    MINOR           reduce using rule 70 (boleano -> FALSE .)
    MINOR_OR_EQUAL  reduce using rule 70 (boleano -> FALSE .)
    ASIGN           reduce using rule 70 (boleano -> FALSE .)
    NOT             reduce using rule 70 (boleano -> FALSE .)
    $end            reduce using rule 70 (boleano -> FALSE .)
    END             reduce using rule 70 (boleano -> FALSE .)
    RETURN          reduce using rule 70 (boleano -> FALSE .)
    RPAR            reduce using rule 70 (boleano -> FALSE .)
    AND             reduce using rule 70 (boleano -> FALSE .)
    OR              reduce using rule 70 (boleano -> FALSE .)
    D_POINT         reduce using rule 70 (boleano -> FALSE .)
    RCOR            reduce using rule 70 (boleano -> FALSE .)
    COMMA           reduce using rule 70 (boleano -> FALSE .)
    RKEY            reduce using rule 70 (boleano -> FALSE .)


state 29

    (62) encabezado -> DEF . VARIABLE LPAR RPAR
    (63) encabezado -> DEF . VARIABLE LPAR parametros RPAR

    VARIABLE        shift and go to state 67


state 30

    (38) factor -> FLOAT .

    TIMES           reduce using rule 38 (factor -> FLOAT .)
    DIVIDE          reduce using rule 38 (factor -> FLOAT .)
    EXPONENTIATION  reduce using rule 38 (factor -> FLOAT .)
    PLUS            reduce using rule 38 (factor -> FLOAT .)
    MINUS           reduce using rule 38 (factor -> FLOAT .)
    GREATER         reduce using rule 38 (factor -> FLOAT .)
    GREATER_OR_EQUAL reduce using rule 38 (factor -> FLOAT .)
    MINOR           reduce using rule 38 (factor -> FLOAT .)
    MINOR_OR_EQUAL  reduce using rule 38 (factor -> FLOAT .)
    ASIGN           reduce using rule 38 (factor -> FLOAT .)
    NOT             reduce using rule 38 (factor -> FLOAT .)
    $end            reduce using rule 38 (factor -> FLOAT .)
    END             reduce using rule 38 (factor -> FLOAT .)
    RETURN          reduce using rule 38 (factor -> FLOAT .)
    RPAR            reduce using rule 38 (factor -> FLOAT .)
    AND             reduce using rule 38 (factor -> FLOAT .)
    OR              reduce using rule 38 (factor -> FLOAT .)
    D_POINT         reduce using rule 38 (factor -> FLOAT .)
    RCOR            reduce using rule 38 (factor -> FLOAT .)
    COMMA           reduce using rule 38 (factor -> FLOAT .)
    RKEY            reduce using rule 38 (factor -> FLOAT .)


state 31

    (41) expression -> expression PLUS . term
    (35) term -> . factor
    (43) term -> . term TIMES factor
    (44) term -> . term DIVIDE factor
    (45) term -> . term EXPONENTIATION factor
    (36) factor -> . NUMBER
    (37) factor -> . STRING
    (38) factor -> . FLOAT
    (39) factor -> . VARIABLE
    (40) factor -> . LPAR expression RPAR

    NUMBER          shift and go to state 25
    STRING          shift and go to state 24
    FLOAT           shift and go to state 30
    VARIABLE        shift and go to state 63
    LPAR            shift and go to state 22

    term                           shift and go to state 68
    factor                         shift and go to state 26

state 32

    (42) expression -> expression MINUS . term
    (35) term -> . factor
    (43) term -> . term TIMES factor
    (44) term -> . term DIVIDE factor
    (45) term -> . term EXPONENTIATION factor
    (36) factor -> . NUMBER
    (37) factor -> . STRING
    (38) factor -> . FLOAT
    (39) factor -> . VARIABLE
    (40) factor -> . LPAR expression RPAR

    NUMBER          shift and go to state 25
    STRING          shift and go to state 24
    FLOAT           shift and go to state 30
    VARIABLE        shift and go to state 63
    LPAR            shift and go to state 22

    term                           shift and go to state 69
    factor                         shift and go to state 26

state 33

    (46) comparacion -> expression comparador . expression
    (47) comparacion -> expression comparador . expression AND comparacion
    (48) comparacion -> expression comparador . expression OR comparacion
    (33) expression -> . term
    (34) expression -> . boleano
    (41) expression -> . expression PLUS term
    (42) expression -> . expression MINUS term
    (35) term -> . factor
    (43) term -> . term TIMES factor
    (44) term -> . term DIVIDE factor
    (45) term -> . term EXPONENTIATION factor
    (69) boleano -> . TRUE
    (70) boleano -> . FALSE
    (36) factor -> . NUMBER
    (37) factor -> . STRING
    (38) factor -> . FLOAT
    (39) factor -> . VARIABLE
    (40) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NUMBER          shift and go to state 25
    STRING          shift and go to state 24
    FLOAT           shift and go to state 30
    VARIABLE        shift and go to state 63
    LPAR            shift and go to state 22

    expression                     shift and go to state 70
    term                           shift and go to state 17
    boleano                        shift and go to state 18
    factor                         shift and go to state 26

state 34

    (49) comparador -> GREATER .

    TRUE            reduce using rule 49 (comparador -> GREATER .)
    FALSE           reduce using rule 49 (comparador -> GREATER .)
    NUMBER          reduce using rule 49 (comparador -> GREATER .)
    STRING          reduce using rule 49 (comparador -> GREATER .)
    FLOAT           reduce using rule 49 (comparador -> GREATER .)
    VARIABLE        reduce using rule 49 (comparador -> GREATER .)
    LPAR            reduce using rule 49 (comparador -> GREATER .)


state 35

    (50) comparador -> GREATER_OR_EQUAL .

    TRUE            reduce using rule 50 (comparador -> GREATER_OR_EQUAL .)
    FALSE           reduce using rule 50 (comparador -> GREATER_OR_EQUAL .)
    NUMBER          reduce using rule 50 (comparador -> GREATER_OR_EQUAL .)
    STRING          reduce using rule 50 (comparador -> GREATER_OR_EQUAL .)
    FLOAT           reduce using rule 50 (comparador -> GREATER_OR_EQUAL .)
    VARIABLE        reduce using rule 50 (comparador -> GREATER_OR_EQUAL .)
    LPAR            reduce using rule 50 (comparador -> GREATER_OR_EQUAL .)


state 36

    (51) comparador -> MINOR .

    TRUE            reduce using rule 51 (comparador -> MINOR .)
    FALSE           reduce using rule 51 (comparador -> MINOR .)
    NUMBER          reduce using rule 51 (comparador -> MINOR .)
    STRING          reduce using rule 51 (comparador -> MINOR .)
    FLOAT           reduce using rule 51 (comparador -> MINOR .)
    VARIABLE        reduce using rule 51 (comparador -> MINOR .)
    LPAR            reduce using rule 51 (comparador -> MINOR .)


state 37

    (52) comparador -> MINOR_OR_EQUAL .

    TRUE            reduce using rule 52 (comparador -> MINOR_OR_EQUAL .)
    FALSE           reduce using rule 52 (comparador -> MINOR_OR_EQUAL .)
    NUMBER          reduce using rule 52 (comparador -> MINOR_OR_EQUAL .)
    STRING          reduce using rule 52 (comparador -> MINOR_OR_EQUAL .)
    FLOAT           reduce using rule 52 (comparador -> MINOR_OR_EQUAL .)
    VARIABLE        reduce using rule 52 (comparador -> MINOR_OR_EQUAL .)
    LPAR            reduce using rule 52 (comparador -> MINOR_OR_EQUAL .)


state 38

    (53) comparador -> ASIGN . ASIGN

    ASIGN           shift and go to state 71


state 39

    (54) comparador -> NOT . ASIGN

    ASIGN           shift and go to state 72


state 40

    (27) asignacion -> VARIABLE ASIGN . expression
    (28) asignacion -> VARIABLE ASIGN . comparacion
    (29) asignacion -> VARIABLE ASIGN . callFuncion
    (30) asignacion -> VARIABLE ASIGN . diccionario
    (31) asignacion -> VARIABLE ASIGN . getValueHash
    (32) asignacion -> VARIABLE ASIGN . array
    (59) input -> VARIABLE ASIGN . GETS
    (33) expression -> . term
    (34) expression -> . boleano
    (41) expression -> . expression PLUS term
    (42) expression -> . expression MINUS term
    (46) comparacion -> . expression comparador expression
    (47) comparacion -> . expression comparador expression AND comparacion
    (48) comparacion -> . expression comparador expression OR comparacion
    (67) callFuncion -> . VARIABLE LPAR RPAR
    (68) callFuncion -> . VARIABLE LPAR parametros RPAR
    (71) diccionario -> . LKEY cuerpoHash RKEY
    (74) getValueHash -> . VARIABLE LCOR expression RCOR
    (82) array -> . LCOR parametrosA RCOR
    (83) array -> . LCOR RCOR
    (35) term -> . factor
    (43) term -> . term TIMES factor
    (44) term -> . term DIVIDE factor
    (45) term -> . term EXPONENTIATION factor
    (69) boleano -> . TRUE
    (70) boleano -> . FALSE
    (36) factor -> . NUMBER
    (37) factor -> . STRING
    (38) factor -> . FLOAT
    (39) factor -> . VARIABLE
    (40) factor -> . LPAR expression RPAR

    GETS            shift and go to state 80
    VARIABLE        shift and go to state 73
    LKEY            shift and go to state 81
    LCOR            shift and go to state 82
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NUMBER          shift and go to state 25
    STRING          shift and go to state 24
    FLOAT           shift and go to state 30
    LPAR            shift and go to state 22

    expression                     shift and go to state 74
    comparacion                    shift and go to state 75
    callFuncion                    shift and go to state 76
    diccionario                    shift and go to state 77
    getValueHash                   shift and go to state 78
    array                          shift and go to state 79
    term                           shift and go to state 17
    boleano                        shift and go to state 18
    factor                         shift and go to state 26

state 41

    (67) callFuncion -> VARIABLE LPAR . RPAR
    (68) callFuncion -> VARIABLE LPAR . parametros RPAR
    (60) parametros -> . VARIABLE
    (61) parametros -> . VARIABLE COMMA parametros

    RPAR            shift and go to state 84
    VARIABLE        shift and go to state 83

    parametros                     shift and go to state 85

state 42

    (75) addValueHash -> VARIABLE LCOR . expression RCOR ASIGN expression
    (76) modValueHash -> VARIABLE LCOR . expression RCOR ASIGN expression
    (33) expression -> . term
    (34) expression -> . boleano
    (41) expression -> . expression PLUS term
    (42) expression -> . expression MINUS term
    (35) term -> . factor
    (43) term -> . term TIMES factor
    (44) term -> . term DIVIDE factor
    (45) term -> . term EXPONENTIATION factor
    (69) boleano -> . TRUE
    (70) boleano -> . FALSE
    (36) factor -> . NUMBER
    (37) factor -> . STRING
    (38) factor -> . FLOAT
    (39) factor -> . VARIABLE
    (40) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NUMBER          shift and go to state 25
    STRING          shift and go to state 24
    FLOAT           shift and go to state 30
    VARIABLE        shift and go to state 63
    LPAR            shift and go to state 22

    expression                     shift and go to state 86
    term                           shift and go to state 17
    boleano                        shift and go to state 18
    factor                         shift and go to state 26

state 43

    (77) deleteValueHash -> VARIABLE POINT . DELETE LPAR expression RPAR
    (86) insertArray -> VARIABLE POINT . INSERT LPAR argumentosA RPAR
    (87) deleteArray -> VARIABLE POINT . DELETE_AT LPAR NUMBER RPAR

    DELETE          shift and go to state 87
    INSERT          shift and go to state 88
    DELETE_AT       shift and go to state 89


state 44

    (43) term -> term TIMES . factor
    (36) factor -> . NUMBER
    (37) factor -> . STRING
    (38) factor -> . FLOAT
    (39) factor -> . VARIABLE
    (40) factor -> . LPAR expression RPAR

    NUMBER          shift and go to state 25
    STRING          shift and go to state 24
    FLOAT           shift and go to state 30
    VARIABLE        shift and go to state 63
    LPAR            shift and go to state 22

    factor                         shift and go to state 90

state 45

    (44) term -> term DIVIDE . factor
    (36) factor -> . NUMBER
    (37) factor -> . STRING
    (38) factor -> . FLOAT
    (39) factor -> . VARIABLE
    (40) factor -> . LPAR expression RPAR

    NUMBER          shift and go to state 25
    STRING          shift and go to state 24
    FLOAT           shift and go to state 30
    VARIABLE        shift and go to state 63
    LPAR            shift and go to state 22

    factor                         shift and go to state 91

state 46

    (45) term -> term EXPONENTIATION . factor
    (36) factor -> . NUMBER
    (37) factor -> . STRING
    (38) factor -> . FLOAT
    (39) factor -> . VARIABLE
    (40) factor -> . LPAR expression RPAR

    NUMBER          shift and go to state 25
    STRING          shift and go to state 24
    FLOAT           shift and go to state 30
    VARIABLE        shift and go to state 63
    LPAR            shift and go to state 22

    factor                         shift and go to state 92

state 47

    (64) funciones -> encabezado cuerpo . END
    (66) funciones -> encabezado cuerpo . RETURN expression END

    END             shift and go to state 93
    RETURN          shift and go to state 94


state 48

    (65) funciones -> encabezado RETURN . expression END
    (33) expression -> . term
    (34) expression -> . boleano
    (41) expression -> . expression PLUS term
    (42) expression -> . expression MINUS term
    (35) term -> . factor
    (43) term -> . term TIMES factor
    (44) term -> . term DIVIDE factor
    (45) term -> . term EXPONENTIATION factor
    (69) boleano -> . TRUE
    (70) boleano -> . FALSE
    (36) factor -> . NUMBER
    (37) factor -> . STRING
    (38) factor -> . FLOAT
    (39) factor -> . VARIABLE
    (40) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NUMBER          shift and go to state 25
    STRING          shift and go to state 24
    FLOAT           shift and go to state 30
    VARIABLE        shift and go to state 63
    LPAR            shift and go to state 22

    expression                     shift and go to state 95
    term                           shift and go to state 17
    boleano                        shift and go to state 18
    factor                         shift and go to state 26

state 49

    (16) cuerpo -> expression .
    (41) expression -> expression . PLUS term
    (42) expression -> expression . MINUS term
    (46) comparacion -> expression . comparador expression
    (47) comparacion -> expression . comparador expression AND comparacion
    (48) comparacion -> expression . comparador expression OR comparacion
    (49) comparador -> . GREATER
    (50) comparador -> . GREATER_OR_EQUAL
    (51) comparador -> . MINOR
    (52) comparador -> . MINOR_OR_EQUAL
    (53) comparador -> . ASIGN ASIGN
    (54) comparador -> . NOT ASIGN

    END             reduce using rule 16 (cuerpo -> expression .)
    RETURN          reduce using rule 16 (cuerpo -> expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    GREATER         shift and go to state 34
    GREATER_OR_EQUAL shift and go to state 35
    MINOR           shift and go to state 36
    MINOR_OR_EQUAL  shift and go to state 37
    ASIGN           shift and go to state 38
    NOT             shift and go to state 39

    comparador                     shift and go to state 33

state 50

    (15) cuerpo -> asignacion .

    END             reduce using rule 15 (cuerpo -> asignacion .)
    RETURN          reduce using rule 15 (cuerpo -> asignacion .)


state 51

    (17) cuerpo -> comparacion .

    END             reduce using rule 17 (cuerpo -> comparacion .)
    RETURN          reduce using rule 17 (cuerpo -> comparacion .)


state 52

    (18) cuerpo -> condicional .

    END             reduce using rule 18 (cuerpo -> condicional .)
    RETURN          reduce using rule 18 (cuerpo -> condicional .)


state 53

    (19) cuerpo -> impresion .

    END             reduce using rule 19 (cuerpo -> impresion .)
    RETURN          reduce using rule 19 (cuerpo -> impresion .)


state 54

    (20) cuerpo -> input .

    END             reduce using rule 20 (cuerpo -> input .)
    RETURN          reduce using rule 20 (cuerpo -> input .)


state 55

    (21) cuerpo -> callFuncion .

    END             reduce using rule 21 (cuerpo -> callFuncion .)
    RETURN          reduce using rule 21 (cuerpo -> callFuncion .)


state 56

    (22) cuerpo -> addValueHash .

    END             reduce using rule 22 (cuerpo -> addValueHash .)
    RETURN          reduce using rule 22 (cuerpo -> addValueHash .)


state 57

    (23) cuerpo -> modValueHash .

    END             reduce using rule 23 (cuerpo -> modValueHash .)
    RETURN          reduce using rule 23 (cuerpo -> modValueHash .)


state 58

    (24) cuerpo -> deleteValueHash .

    END             reduce using rule 24 (cuerpo -> deleteValueHash .)
    RETURN          reduce using rule 24 (cuerpo -> deleteValueHash .)


state 59

    (25) cuerpo -> insertArray .

    END             reduce using rule 25 (cuerpo -> insertArray .)
    RETURN          reduce using rule 25 (cuerpo -> insertArray .)


state 60

    (26) cuerpo -> deleteArray .

    END             reduce using rule 26 (cuerpo -> deleteArray .)
    RETURN          reduce using rule 26 (cuerpo -> deleteArray .)


state 61

    (55) condicional -> IF comparacion . D_POINT cuerpo END
    (56) condicional -> IF comparacion . D_POINT cuerpo END cond_else

    D_POINT         shift and go to state 96


state 62

    (46) comparacion -> expression . comparador expression
    (47) comparacion -> expression . comparador expression AND comparacion
    (48) comparacion -> expression . comparador expression OR comparacion
    (41) expression -> expression . PLUS term
    (42) expression -> expression . MINUS term
    (49) comparador -> . GREATER
    (50) comparador -> . GREATER_OR_EQUAL
    (51) comparador -> . MINOR
    (52) comparador -> . MINOR_OR_EQUAL
    (53) comparador -> . ASIGN ASIGN
    (54) comparador -> . NOT ASIGN

    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    GREATER         shift and go to state 34
    GREATER_OR_EQUAL shift and go to state 35
    MINOR           shift and go to state 36
    MINOR_OR_EQUAL  shift and go to state 37
    ASIGN           shift and go to state 38
    NOT             shift and go to state 39

    comparador                     shift and go to state 33

state 63

    (39) factor -> VARIABLE .

    TIMES           reduce using rule 39 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 39 (factor -> VARIABLE .)
    EXPONENTIATION  reduce using rule 39 (factor -> VARIABLE .)
    PLUS            reduce using rule 39 (factor -> VARIABLE .)
    MINUS           reduce using rule 39 (factor -> VARIABLE .)
    GREATER         reduce using rule 39 (factor -> VARIABLE .)
    GREATER_OR_EQUAL reduce using rule 39 (factor -> VARIABLE .)
    MINOR           reduce using rule 39 (factor -> VARIABLE .)
    MINOR_OR_EQUAL  reduce using rule 39 (factor -> VARIABLE .)
    ASIGN           reduce using rule 39 (factor -> VARIABLE .)
    NOT             reduce using rule 39 (factor -> VARIABLE .)
    RPAR            reduce using rule 39 (factor -> VARIABLE .)
    $end            reduce using rule 39 (factor -> VARIABLE .)
    END             reduce using rule 39 (factor -> VARIABLE .)
    RETURN          reduce using rule 39 (factor -> VARIABLE .)
    AND             reduce using rule 39 (factor -> VARIABLE .)
    OR              reduce using rule 39 (factor -> VARIABLE .)
    D_POINT         reduce using rule 39 (factor -> VARIABLE .)
    RCOR            reduce using rule 39 (factor -> VARIABLE .)
    COMMA           reduce using rule 39 (factor -> VARIABLE .)
    RKEY            reduce using rule 39 (factor -> VARIABLE .)


state 64

    (78) while -> WHILE LPAR . comparacion RPAR cuerpo END
    (79) while -> WHILE LPAR . comparacion RPAR cuerpo END while
    (46) comparacion -> . expression comparador expression
    (47) comparacion -> . expression comparador expression AND comparacion
    (48) comparacion -> . expression comparador expression OR comparacion
    (33) expression -> . term
    (34) expression -> . boleano
    (41) expression -> . expression PLUS term
    (42) expression -> . expression MINUS term
    (35) term -> . factor
    (43) term -> . term TIMES factor
    (44) term -> . term DIVIDE factor
    (45) term -> . term EXPONENTIATION factor
    (69) boleano -> . TRUE
    (70) boleano -> . FALSE
    (36) factor -> . NUMBER
    (37) factor -> . STRING
    (38) factor -> . FLOAT
    (39) factor -> . VARIABLE
    (40) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NUMBER          shift and go to state 25
    STRING          shift and go to state 24
    FLOAT           shift and go to state 30
    VARIABLE        shift and go to state 63
    LPAR            shift and go to state 22

    comparacion                    shift and go to state 97
    expression                     shift and go to state 62
    term                           shift and go to state 17
    boleano                        shift and go to state 18
    factor                         shift and go to state 26

state 65

    (40) factor -> LPAR expression . RPAR
    (41) expression -> expression . PLUS term
    (42) expression -> expression . MINUS term

    RPAR            shift and go to state 98
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32


state 66

    (58) impresion -> PUTS STRING .

    $end            reduce using rule 58 (impresion -> PUTS STRING .)
    END             reduce using rule 58 (impresion -> PUTS STRING .)
    RETURN          reduce using rule 58 (impresion -> PUTS STRING .)


state 67

    (62) encabezado -> DEF VARIABLE . LPAR RPAR
    (63) encabezado -> DEF VARIABLE . LPAR parametros RPAR

    LPAR            shift and go to state 99


state 68

    (41) expression -> expression PLUS term .
    (43) term -> term . TIMES factor
    (44) term -> term . DIVIDE factor
    (45) term -> term . EXPONENTIATION factor

    PLUS            reduce using rule 41 (expression -> expression PLUS term .)
    MINUS           reduce using rule 41 (expression -> expression PLUS term .)
    GREATER         reduce using rule 41 (expression -> expression PLUS term .)
    GREATER_OR_EQUAL reduce using rule 41 (expression -> expression PLUS term .)
    MINOR           reduce using rule 41 (expression -> expression PLUS term .)
    MINOR_OR_EQUAL  reduce using rule 41 (expression -> expression PLUS term .)
    ASIGN           reduce using rule 41 (expression -> expression PLUS term .)
    NOT             reduce using rule 41 (expression -> expression PLUS term .)
    $end            reduce using rule 41 (expression -> expression PLUS term .)
    END             reduce using rule 41 (expression -> expression PLUS term .)
    RETURN          reduce using rule 41 (expression -> expression PLUS term .)
    RPAR            reduce using rule 41 (expression -> expression PLUS term .)
    AND             reduce using rule 41 (expression -> expression PLUS term .)
    OR              reduce using rule 41 (expression -> expression PLUS term .)
    D_POINT         reduce using rule 41 (expression -> expression PLUS term .)
    RCOR            reduce using rule 41 (expression -> expression PLUS term .)
    COMMA           reduce using rule 41 (expression -> expression PLUS term .)
    RKEY            reduce using rule 41 (expression -> expression PLUS term .)
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    EXPONENTIATION  shift and go to state 46


state 69

    (42) expression -> expression MINUS term .
    (43) term -> term . TIMES factor
    (44) term -> term . DIVIDE factor
    (45) term -> term . EXPONENTIATION factor

    PLUS            reduce using rule 42 (expression -> expression MINUS term .)
    MINUS           reduce using rule 42 (expression -> expression MINUS term .)
    GREATER         reduce using rule 42 (expression -> expression MINUS term .)
    GREATER_OR_EQUAL reduce using rule 42 (expression -> expression MINUS term .)
    MINOR           reduce using rule 42 (expression -> expression MINUS term .)
    MINOR_OR_EQUAL  reduce using rule 42 (expression -> expression MINUS term .)
    ASIGN           reduce using rule 42 (expression -> expression MINUS term .)
    NOT             reduce using rule 42 (expression -> expression MINUS term .)
    $end            reduce using rule 42 (expression -> expression MINUS term .)
    END             reduce using rule 42 (expression -> expression MINUS term .)
    RETURN          reduce using rule 42 (expression -> expression MINUS term .)
    RPAR            reduce using rule 42 (expression -> expression MINUS term .)
    AND             reduce using rule 42 (expression -> expression MINUS term .)
    OR              reduce using rule 42 (expression -> expression MINUS term .)
    D_POINT         reduce using rule 42 (expression -> expression MINUS term .)
    RCOR            reduce using rule 42 (expression -> expression MINUS term .)
    COMMA           reduce using rule 42 (expression -> expression MINUS term .)
    RKEY            reduce using rule 42 (expression -> expression MINUS term .)
    TIMES           shift and go to state 44
    DIVIDE          shift and go to state 45
    EXPONENTIATION  shift and go to state 46


state 70

    (46) comparacion -> expression comparador expression .
    (47) comparacion -> expression comparador expression . AND comparacion
    (48) comparacion -> expression comparador expression . OR comparacion
    (41) expression -> expression . PLUS term
    (42) expression -> expression . MINUS term

    $end            reduce using rule 46 (comparacion -> expression comparador expression .)
    END             reduce using rule 46 (comparacion -> expression comparador expression .)
    RETURN          reduce using rule 46 (comparacion -> expression comparador expression .)
    D_POINT         reduce using rule 46 (comparacion -> expression comparador expression .)
    RPAR            reduce using rule 46 (comparacion -> expression comparador expression .)
    AND             shift and go to state 100
    OR              shift and go to state 101
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32


state 71

    (53) comparador -> ASIGN ASIGN .

    TRUE            reduce using rule 53 (comparador -> ASIGN ASIGN .)
    FALSE           reduce using rule 53 (comparador -> ASIGN ASIGN .)
    NUMBER          reduce using rule 53 (comparador -> ASIGN ASIGN .)
    STRING          reduce using rule 53 (comparador -> ASIGN ASIGN .)
    FLOAT           reduce using rule 53 (comparador -> ASIGN ASIGN .)
    VARIABLE        reduce using rule 53 (comparador -> ASIGN ASIGN .)
    LPAR            reduce using rule 53 (comparador -> ASIGN ASIGN .)


state 72

    (54) comparador -> NOT ASIGN .

    TRUE            reduce using rule 54 (comparador -> NOT ASIGN .)
    FALSE           reduce using rule 54 (comparador -> NOT ASIGN .)
    NUMBER          reduce using rule 54 (comparador -> NOT ASIGN .)
    STRING          reduce using rule 54 (comparador -> NOT ASIGN .)
    FLOAT           reduce using rule 54 (comparador -> NOT ASIGN .)
    VARIABLE        reduce using rule 54 (comparador -> NOT ASIGN .)
    LPAR            reduce using rule 54 (comparador -> NOT ASIGN .)


state 73

    (67) callFuncion -> VARIABLE . LPAR RPAR
    (68) callFuncion -> VARIABLE . LPAR parametros RPAR
    (74) getValueHash -> VARIABLE . LCOR expression RCOR
    (39) factor -> VARIABLE .

    LPAR            shift and go to state 41
    LCOR            shift and go to state 102
    TIMES           reduce using rule 39 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 39 (factor -> VARIABLE .)
    EXPONENTIATION  reduce using rule 39 (factor -> VARIABLE .)
    PLUS            reduce using rule 39 (factor -> VARIABLE .)
    MINUS           reduce using rule 39 (factor -> VARIABLE .)
    GREATER         reduce using rule 39 (factor -> VARIABLE .)
    GREATER_OR_EQUAL reduce using rule 39 (factor -> VARIABLE .)
    MINOR           reduce using rule 39 (factor -> VARIABLE .)
    MINOR_OR_EQUAL  reduce using rule 39 (factor -> VARIABLE .)
    ASIGN           reduce using rule 39 (factor -> VARIABLE .)
    NOT             reduce using rule 39 (factor -> VARIABLE .)
    $end            reduce using rule 39 (factor -> VARIABLE .)
    END             reduce using rule 39 (factor -> VARIABLE .)
    RETURN          reduce using rule 39 (factor -> VARIABLE .)


state 74

    (27) asignacion -> VARIABLE ASIGN expression .
    (41) expression -> expression . PLUS term
    (42) expression -> expression . MINUS term
    (46) comparacion -> expression . comparador expression
    (47) comparacion -> expression . comparador expression AND comparacion
    (48) comparacion -> expression . comparador expression OR comparacion
    (49) comparador -> . GREATER
    (50) comparador -> . GREATER_OR_EQUAL
    (51) comparador -> . MINOR
    (52) comparador -> . MINOR_OR_EQUAL
    (53) comparador -> . ASIGN ASIGN
    (54) comparador -> . NOT ASIGN

    $end            reduce using rule 27 (asignacion -> VARIABLE ASIGN expression .)
    END             reduce using rule 27 (asignacion -> VARIABLE ASIGN expression .)
    RETURN          reduce using rule 27 (asignacion -> VARIABLE ASIGN expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32
    GREATER         shift and go to state 34
    GREATER_OR_EQUAL shift and go to state 35
    MINOR           shift and go to state 36
    MINOR_OR_EQUAL  shift and go to state 37
    ASIGN           shift and go to state 38
    NOT             shift and go to state 39

    comparador                     shift and go to state 33

state 75

    (28) asignacion -> VARIABLE ASIGN comparacion .

    $end            reduce using rule 28 (asignacion -> VARIABLE ASIGN comparacion .)
    END             reduce using rule 28 (asignacion -> VARIABLE ASIGN comparacion .)
    RETURN          reduce using rule 28 (asignacion -> VARIABLE ASIGN comparacion .)


state 76

    (29) asignacion -> VARIABLE ASIGN callFuncion .

    $end            reduce using rule 29 (asignacion -> VARIABLE ASIGN callFuncion .)
    END             reduce using rule 29 (asignacion -> VARIABLE ASIGN callFuncion .)
    RETURN          reduce using rule 29 (asignacion -> VARIABLE ASIGN callFuncion .)


state 77

    (30) asignacion -> VARIABLE ASIGN diccionario .

    $end            reduce using rule 30 (asignacion -> VARIABLE ASIGN diccionario .)
    END             reduce using rule 30 (asignacion -> VARIABLE ASIGN diccionario .)
    RETURN          reduce using rule 30 (asignacion -> VARIABLE ASIGN diccionario .)


state 78

    (31) asignacion -> VARIABLE ASIGN getValueHash .

    $end            reduce using rule 31 (asignacion -> VARIABLE ASIGN getValueHash .)
    END             reduce using rule 31 (asignacion -> VARIABLE ASIGN getValueHash .)
    RETURN          reduce using rule 31 (asignacion -> VARIABLE ASIGN getValueHash .)


state 79

    (32) asignacion -> VARIABLE ASIGN array .

    $end            reduce using rule 32 (asignacion -> VARIABLE ASIGN array .)
    END             reduce using rule 32 (asignacion -> VARIABLE ASIGN array .)
    RETURN          reduce using rule 32 (asignacion -> VARIABLE ASIGN array .)


state 80

    (59) input -> VARIABLE ASIGN GETS .

    $end            reduce using rule 59 (input -> VARIABLE ASIGN GETS .)
    END             reduce using rule 59 (input -> VARIABLE ASIGN GETS .)
    RETURN          reduce using rule 59 (input -> VARIABLE ASIGN GETS .)


state 81

    (71) diccionario -> LKEY . cuerpoHash RKEY
    (72) cuerpoHash -> . expression ASIGN GREATER expression
    (73) cuerpoHash -> . expression ASIGN GREATER expression COMMA cuerpoHash
    (33) expression -> . term
    (34) expression -> . boleano
    (41) expression -> . expression PLUS term
    (42) expression -> . expression MINUS term
    (35) term -> . factor
    (43) term -> . term TIMES factor
    (44) term -> . term DIVIDE factor
    (45) term -> . term EXPONENTIATION factor
    (69) boleano -> . TRUE
    (70) boleano -> . FALSE
    (36) factor -> . NUMBER
    (37) factor -> . STRING
    (38) factor -> . FLOAT
    (39) factor -> . VARIABLE
    (40) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NUMBER          shift and go to state 25
    STRING          shift and go to state 24
    FLOAT           shift and go to state 30
    VARIABLE        shift and go to state 63
    LPAR            shift and go to state 22

    cuerpoHash                     shift and go to state 103
    expression                     shift and go to state 104
    term                           shift and go to state 17
    boleano                        shift and go to state 18
    factor                         shift and go to state 26

state 82

    (82) array -> LCOR . parametrosA RCOR
    (83) array -> LCOR . RCOR
    (80) parametrosA -> . factor
    (81) parametrosA -> . factor COMMA parametrosA
    (36) factor -> . NUMBER
    (37) factor -> . STRING
    (38) factor -> . FLOAT
    (39) factor -> . VARIABLE
    (40) factor -> . LPAR expression RPAR

    RCOR            shift and go to state 106
    NUMBER          shift and go to state 25
    STRING          shift and go to state 24
    FLOAT           shift and go to state 30
    VARIABLE        shift and go to state 63
    LPAR            shift and go to state 22

    parametrosA                    shift and go to state 105
    factor                         shift and go to state 107

state 83

    (60) parametros -> VARIABLE .
    (61) parametros -> VARIABLE . COMMA parametros

    RPAR            reduce using rule 60 (parametros -> VARIABLE .)
    COMMA           shift and go to state 108


state 84

    (67) callFuncion -> VARIABLE LPAR RPAR .

    $end            reduce using rule 67 (callFuncion -> VARIABLE LPAR RPAR .)
    END             reduce using rule 67 (callFuncion -> VARIABLE LPAR RPAR .)
    RETURN          reduce using rule 67 (callFuncion -> VARIABLE LPAR RPAR .)


state 85

    (68) callFuncion -> VARIABLE LPAR parametros . RPAR

    RPAR            shift and go to state 109


state 86

    (75) addValueHash -> VARIABLE LCOR expression . RCOR ASIGN expression
    (76) modValueHash -> VARIABLE LCOR expression . RCOR ASIGN expression
    (41) expression -> expression . PLUS term
    (42) expression -> expression . MINUS term

    RCOR            shift and go to state 110
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32


state 87

    (77) deleteValueHash -> VARIABLE POINT DELETE . LPAR expression RPAR

    LPAR            shift and go to state 111


state 88

    (86) insertArray -> VARIABLE POINT INSERT . LPAR argumentosA RPAR

    LPAR            shift and go to state 112


state 89

    (87) deleteArray -> VARIABLE POINT DELETE_AT . LPAR NUMBER RPAR

    LPAR            shift and go to state 113


state 90

    (43) term -> term TIMES factor .

    TIMES           reduce using rule 43 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 43 (term -> term TIMES factor .)
    EXPONENTIATION  reduce using rule 43 (term -> term TIMES factor .)
    PLUS            reduce using rule 43 (term -> term TIMES factor .)
    MINUS           reduce using rule 43 (term -> term TIMES factor .)
    GREATER         reduce using rule 43 (term -> term TIMES factor .)
    GREATER_OR_EQUAL reduce using rule 43 (term -> term TIMES factor .)
    MINOR           reduce using rule 43 (term -> term TIMES factor .)
    MINOR_OR_EQUAL  reduce using rule 43 (term -> term TIMES factor .)
    ASIGN           reduce using rule 43 (term -> term TIMES factor .)
    NOT             reduce using rule 43 (term -> term TIMES factor .)
    $end            reduce using rule 43 (term -> term TIMES factor .)
    END             reduce using rule 43 (term -> term TIMES factor .)
    RETURN          reduce using rule 43 (term -> term TIMES factor .)
    RPAR            reduce using rule 43 (term -> term TIMES factor .)
    AND             reduce using rule 43 (term -> term TIMES factor .)
    OR              reduce using rule 43 (term -> term TIMES factor .)
    D_POINT         reduce using rule 43 (term -> term TIMES factor .)
    RCOR            reduce using rule 43 (term -> term TIMES factor .)
    COMMA           reduce using rule 43 (term -> term TIMES factor .)
    RKEY            reduce using rule 43 (term -> term TIMES factor .)


state 91

    (44) term -> term DIVIDE factor .

    TIMES           reduce using rule 44 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 44 (term -> term DIVIDE factor .)
    EXPONENTIATION  reduce using rule 44 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 44 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 44 (term -> term DIVIDE factor .)
    GREATER         reduce using rule 44 (term -> term DIVIDE factor .)
    GREATER_OR_EQUAL reduce using rule 44 (term -> term DIVIDE factor .)
    MINOR           reduce using rule 44 (term -> term DIVIDE factor .)
    MINOR_OR_EQUAL  reduce using rule 44 (term -> term DIVIDE factor .)
    ASIGN           reduce using rule 44 (term -> term DIVIDE factor .)
    NOT             reduce using rule 44 (term -> term DIVIDE factor .)
    $end            reduce using rule 44 (term -> term DIVIDE factor .)
    END             reduce using rule 44 (term -> term DIVIDE factor .)
    RETURN          reduce using rule 44 (term -> term DIVIDE factor .)
    RPAR            reduce using rule 44 (term -> term DIVIDE factor .)
    AND             reduce using rule 44 (term -> term DIVIDE factor .)
    OR              reduce using rule 44 (term -> term DIVIDE factor .)
    D_POINT         reduce using rule 44 (term -> term DIVIDE factor .)
    RCOR            reduce using rule 44 (term -> term DIVIDE factor .)
    COMMA           reduce using rule 44 (term -> term DIVIDE factor .)
    RKEY            reduce using rule 44 (term -> term DIVIDE factor .)


state 92

    (45) term -> term EXPONENTIATION factor .

    TIMES           reduce using rule 45 (term -> term EXPONENTIATION factor .)
    DIVIDE          reduce using rule 45 (term -> term EXPONENTIATION factor .)
    EXPONENTIATION  reduce using rule 45 (term -> term EXPONENTIATION factor .)
    PLUS            reduce using rule 45 (term -> term EXPONENTIATION factor .)
    MINUS           reduce using rule 45 (term -> term EXPONENTIATION factor .)
    GREATER         reduce using rule 45 (term -> term EXPONENTIATION factor .)
    GREATER_OR_EQUAL reduce using rule 45 (term -> term EXPONENTIATION factor .)
    MINOR           reduce using rule 45 (term -> term EXPONENTIATION factor .)
    MINOR_OR_EQUAL  reduce using rule 45 (term -> term EXPONENTIATION factor .)
    ASIGN           reduce using rule 45 (term -> term EXPONENTIATION factor .)
    NOT             reduce using rule 45 (term -> term EXPONENTIATION factor .)
    $end            reduce using rule 45 (term -> term EXPONENTIATION factor .)
    END             reduce using rule 45 (term -> term EXPONENTIATION factor .)
    RETURN          reduce using rule 45 (term -> term EXPONENTIATION factor .)
    RPAR            reduce using rule 45 (term -> term EXPONENTIATION factor .)
    AND             reduce using rule 45 (term -> term EXPONENTIATION factor .)
    OR              reduce using rule 45 (term -> term EXPONENTIATION factor .)
    D_POINT         reduce using rule 45 (term -> term EXPONENTIATION factor .)
    RCOR            reduce using rule 45 (term -> term EXPONENTIATION factor .)
    COMMA           reduce using rule 45 (term -> term EXPONENTIATION factor .)
    RKEY            reduce using rule 45 (term -> term EXPONENTIATION factor .)


state 93

    (64) funciones -> encabezado cuerpo END .

    $end            reduce using rule 64 (funciones -> encabezado cuerpo END .)


state 94

    (66) funciones -> encabezado cuerpo RETURN . expression END
    (33) expression -> . term
    (34) expression -> . boleano
    (41) expression -> . expression PLUS term
    (42) expression -> . expression MINUS term
    (35) term -> . factor
    (43) term -> . term TIMES factor
    (44) term -> . term DIVIDE factor
    (45) term -> . term EXPONENTIATION factor
    (69) boleano -> . TRUE
    (70) boleano -> . FALSE
    (36) factor -> . NUMBER
    (37) factor -> . STRING
    (38) factor -> . FLOAT
    (39) factor -> . VARIABLE
    (40) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NUMBER          shift and go to state 25
    STRING          shift and go to state 24
    FLOAT           shift and go to state 30
    VARIABLE        shift and go to state 63
    LPAR            shift and go to state 22

    expression                     shift and go to state 114
    term                           shift and go to state 17
    boleano                        shift and go to state 18
    factor                         shift and go to state 26

state 95

    (65) funciones -> encabezado RETURN expression . END
    (41) expression -> expression . PLUS term
    (42) expression -> expression . MINUS term

    END             shift and go to state 115
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32


state 96

    (55) condicional -> IF comparacion D_POINT . cuerpo END
    (56) condicional -> IF comparacion D_POINT . cuerpo END cond_else
    (15) cuerpo -> . asignacion
    (16) cuerpo -> . expression
    (17) cuerpo -> . comparacion
    (18) cuerpo -> . condicional
    (19) cuerpo -> . impresion
    (20) cuerpo -> . input
    (21) cuerpo -> . callFuncion
    (22) cuerpo -> . addValueHash
    (23) cuerpo -> . modValueHash
    (24) cuerpo -> . deleteValueHash
    (25) cuerpo -> . insertArray
    (26) cuerpo -> . deleteArray
    (27) asignacion -> . VARIABLE ASIGN expression
    (28) asignacion -> . VARIABLE ASIGN comparacion
    (29) asignacion -> . VARIABLE ASIGN callFuncion
    (30) asignacion -> . VARIABLE ASIGN diccionario
    (31) asignacion -> . VARIABLE ASIGN getValueHash
    (32) asignacion -> . VARIABLE ASIGN array
    (33) expression -> . term
    (34) expression -> . boleano
    (41) expression -> . expression PLUS term
    (42) expression -> . expression MINUS term
    (46) comparacion -> . expression comparador expression
    (47) comparacion -> . expression comparador expression AND comparacion
    (48) comparacion -> . expression comparador expression OR comparacion
    (55) condicional -> . IF comparacion D_POINT cuerpo END
    (56) condicional -> . IF comparacion D_POINT cuerpo END cond_else
    (58) impresion -> . PUTS STRING
    (59) input -> . VARIABLE ASIGN GETS
    (67) callFuncion -> . VARIABLE LPAR RPAR
    (68) callFuncion -> . VARIABLE LPAR parametros RPAR
    (75) addValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (76) modValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (77) deleteValueHash -> . VARIABLE POINT DELETE LPAR expression RPAR
    (86) insertArray -> . VARIABLE POINT INSERT LPAR argumentosA RPAR
    (87) deleteArray -> . VARIABLE POINT DELETE_AT LPAR NUMBER RPAR
    (35) term -> . factor
    (43) term -> . term TIMES factor
    (44) term -> . term DIVIDE factor
    (45) term -> . term EXPONENTIATION factor
    (69) boleano -> . TRUE
    (70) boleano -> . FALSE
    (36) factor -> . NUMBER
    (37) factor -> . STRING
    (38) factor -> . FLOAT
    (39) factor -> . VARIABLE
    (40) factor -> . LPAR expression RPAR

    VARIABLE        shift and go to state 16
    IF              shift and go to state 20
    PUTS            shift and go to state 23
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NUMBER          shift and go to state 25
    STRING          shift and go to state 24
    FLOAT           shift and go to state 30
    LPAR            shift and go to state 22

    comparacion                    shift and go to state 51
    cuerpo                         shift and go to state 116
    asignacion                     shift and go to state 50
    expression                     shift and go to state 49
    condicional                    shift and go to state 52
    impresion                      shift and go to state 53
    input                          shift and go to state 54
    callFuncion                    shift and go to state 55
    addValueHash                   shift and go to state 56
    modValueHash                   shift and go to state 57
    deleteValueHash                shift and go to state 58
    insertArray                    shift and go to state 59
    deleteArray                    shift and go to state 60
    term                           shift and go to state 17
    boleano                        shift and go to state 18
    factor                         shift and go to state 26

state 97

    (78) while -> WHILE LPAR comparacion . RPAR cuerpo END
    (79) while -> WHILE LPAR comparacion . RPAR cuerpo END while

    RPAR            shift and go to state 117


state 98

    (40) factor -> LPAR expression RPAR .

    TIMES           reduce using rule 40 (factor -> LPAR expression RPAR .)
    DIVIDE          reduce using rule 40 (factor -> LPAR expression RPAR .)
    EXPONENTIATION  reduce using rule 40 (factor -> LPAR expression RPAR .)
    PLUS            reduce using rule 40 (factor -> LPAR expression RPAR .)
    MINUS           reduce using rule 40 (factor -> LPAR expression RPAR .)
    GREATER         reduce using rule 40 (factor -> LPAR expression RPAR .)
    GREATER_OR_EQUAL reduce using rule 40 (factor -> LPAR expression RPAR .)
    MINOR           reduce using rule 40 (factor -> LPAR expression RPAR .)
    MINOR_OR_EQUAL  reduce using rule 40 (factor -> LPAR expression RPAR .)
    ASIGN           reduce using rule 40 (factor -> LPAR expression RPAR .)
    NOT             reduce using rule 40 (factor -> LPAR expression RPAR .)
    $end            reduce using rule 40 (factor -> LPAR expression RPAR .)
    END             reduce using rule 40 (factor -> LPAR expression RPAR .)
    RETURN          reduce using rule 40 (factor -> LPAR expression RPAR .)
    RPAR            reduce using rule 40 (factor -> LPAR expression RPAR .)
    AND             reduce using rule 40 (factor -> LPAR expression RPAR .)
    OR              reduce using rule 40 (factor -> LPAR expression RPAR .)
    D_POINT         reduce using rule 40 (factor -> LPAR expression RPAR .)
    RCOR            reduce using rule 40 (factor -> LPAR expression RPAR .)
    COMMA           reduce using rule 40 (factor -> LPAR expression RPAR .)
    RKEY            reduce using rule 40 (factor -> LPAR expression RPAR .)


state 99

    (62) encabezado -> DEF VARIABLE LPAR . RPAR
    (63) encabezado -> DEF VARIABLE LPAR . parametros RPAR
    (60) parametros -> . VARIABLE
    (61) parametros -> . VARIABLE COMMA parametros

    RPAR            shift and go to state 118
    VARIABLE        shift and go to state 83

    parametros                     shift and go to state 119

state 100

    (47) comparacion -> expression comparador expression AND . comparacion
    (46) comparacion -> . expression comparador expression
    (47) comparacion -> . expression comparador expression AND comparacion
    (48) comparacion -> . expression comparador expression OR comparacion
    (33) expression -> . term
    (34) expression -> . boleano
    (41) expression -> . expression PLUS term
    (42) expression -> . expression MINUS term
    (35) term -> . factor
    (43) term -> . term TIMES factor
    (44) term -> . term DIVIDE factor
    (45) term -> . term EXPONENTIATION factor
    (69) boleano -> . TRUE
    (70) boleano -> . FALSE
    (36) factor -> . NUMBER
    (37) factor -> . STRING
    (38) factor -> . FLOAT
    (39) factor -> . VARIABLE
    (40) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NUMBER          shift and go to state 25
    STRING          shift and go to state 24
    FLOAT           shift and go to state 30
    VARIABLE        shift and go to state 63
    LPAR            shift and go to state 22

    expression                     shift and go to state 62
    comparacion                    shift and go to state 120
    term                           shift and go to state 17
    boleano                        shift and go to state 18
    factor                         shift and go to state 26

state 101

    (48) comparacion -> expression comparador expression OR . comparacion
    (46) comparacion -> . expression comparador expression
    (47) comparacion -> . expression comparador expression AND comparacion
    (48) comparacion -> . expression comparador expression OR comparacion
    (33) expression -> . term
    (34) expression -> . boleano
    (41) expression -> . expression PLUS term
    (42) expression -> . expression MINUS term
    (35) term -> . factor
    (43) term -> . term TIMES factor
    (44) term -> . term DIVIDE factor
    (45) term -> . term EXPONENTIATION factor
    (69) boleano -> . TRUE
    (70) boleano -> . FALSE
    (36) factor -> . NUMBER
    (37) factor -> . STRING
    (38) factor -> . FLOAT
    (39) factor -> . VARIABLE
    (40) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NUMBER          shift and go to state 25
    STRING          shift and go to state 24
    FLOAT           shift and go to state 30
    VARIABLE        shift and go to state 63
    LPAR            shift and go to state 22

    expression                     shift and go to state 62
    comparacion                    shift and go to state 121
    term                           shift and go to state 17
    boleano                        shift and go to state 18
    factor                         shift and go to state 26

state 102

    (74) getValueHash -> VARIABLE LCOR . expression RCOR
    (33) expression -> . term
    (34) expression -> . boleano
    (41) expression -> . expression PLUS term
    (42) expression -> . expression MINUS term
    (35) term -> . factor
    (43) term -> . term TIMES factor
    (44) term -> . term DIVIDE factor
    (45) term -> . term EXPONENTIATION factor
    (69) boleano -> . TRUE
    (70) boleano -> . FALSE
    (36) factor -> . NUMBER
    (37) factor -> . STRING
    (38) factor -> . FLOAT
    (39) factor -> . VARIABLE
    (40) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NUMBER          shift and go to state 25
    STRING          shift and go to state 24
    FLOAT           shift and go to state 30
    VARIABLE        shift and go to state 63
    LPAR            shift and go to state 22

    expression                     shift and go to state 122
    term                           shift and go to state 17
    boleano                        shift and go to state 18
    factor                         shift and go to state 26

state 103

    (71) diccionario -> LKEY cuerpoHash . RKEY

    RKEY            shift and go to state 123


state 104

    (72) cuerpoHash -> expression . ASIGN GREATER expression
    (73) cuerpoHash -> expression . ASIGN GREATER expression COMMA cuerpoHash
    (41) expression -> expression . PLUS term
    (42) expression -> expression . MINUS term

    ASIGN           shift and go to state 124
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32


state 105

    (82) array -> LCOR parametrosA . RCOR

    RCOR            shift and go to state 125


state 106

    (83) array -> LCOR RCOR .

    $end            reduce using rule 83 (array -> LCOR RCOR .)
    END             reduce using rule 83 (array -> LCOR RCOR .)
    RETURN          reduce using rule 83 (array -> LCOR RCOR .)


state 107

    (80) parametrosA -> factor .
    (81) parametrosA -> factor . COMMA parametrosA

    RCOR            reduce using rule 80 (parametrosA -> factor .)
    COMMA           shift and go to state 126


state 108

    (61) parametros -> VARIABLE COMMA . parametros
    (60) parametros -> . VARIABLE
    (61) parametros -> . VARIABLE COMMA parametros

    VARIABLE        shift and go to state 83

    parametros                     shift and go to state 127

state 109

    (68) callFuncion -> VARIABLE LPAR parametros RPAR .

    $end            reduce using rule 68 (callFuncion -> VARIABLE LPAR parametros RPAR .)
    END             reduce using rule 68 (callFuncion -> VARIABLE LPAR parametros RPAR .)
    RETURN          reduce using rule 68 (callFuncion -> VARIABLE LPAR parametros RPAR .)


state 110

    (75) addValueHash -> VARIABLE LCOR expression RCOR . ASIGN expression
    (76) modValueHash -> VARIABLE LCOR expression RCOR . ASIGN expression

    ASIGN           shift and go to state 128


state 111

    (77) deleteValueHash -> VARIABLE POINT DELETE LPAR . expression RPAR
    (33) expression -> . term
    (34) expression -> . boleano
    (41) expression -> . expression PLUS term
    (42) expression -> . expression MINUS term
    (35) term -> . factor
    (43) term -> . term TIMES factor
    (44) term -> . term DIVIDE factor
    (45) term -> . term EXPONENTIATION factor
    (69) boleano -> . TRUE
    (70) boleano -> . FALSE
    (36) factor -> . NUMBER
    (37) factor -> . STRING
    (38) factor -> . FLOAT
    (39) factor -> . VARIABLE
    (40) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NUMBER          shift and go to state 25
    STRING          shift and go to state 24
    FLOAT           shift and go to state 30
    VARIABLE        shift and go to state 63
    LPAR            shift and go to state 22

    expression                     shift and go to state 129
    term                           shift and go to state 17
    boleano                        shift and go to state 18
    factor                         shift and go to state 26

state 112

    (86) insertArray -> VARIABLE POINT INSERT LPAR . argumentosA RPAR
    (84) argumentosA -> . NUMBER
    (85) argumentosA -> . NUMBER COMMA factor

    NUMBER          shift and go to state 131

    argumentosA                    shift and go to state 130

state 113

    (87) deleteArray -> VARIABLE POINT DELETE_AT LPAR . NUMBER RPAR

    NUMBER          shift and go to state 132


state 114

    (66) funciones -> encabezado cuerpo RETURN expression . END
    (41) expression -> expression . PLUS term
    (42) expression -> expression . MINUS term

    END             shift and go to state 133
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32


state 115

    (65) funciones -> encabezado RETURN expression END .

    $end            reduce using rule 65 (funciones -> encabezado RETURN expression END .)


state 116

    (55) condicional -> IF comparacion D_POINT cuerpo . END
    (56) condicional -> IF comparacion D_POINT cuerpo . END cond_else

    END             shift and go to state 134


state 117

    (78) while -> WHILE LPAR comparacion RPAR . cuerpo END
    (79) while -> WHILE LPAR comparacion RPAR . cuerpo END while
    (15) cuerpo -> . asignacion
    (16) cuerpo -> . expression
    (17) cuerpo -> . comparacion
    (18) cuerpo -> . condicional
    (19) cuerpo -> . impresion
    (20) cuerpo -> . input
    (21) cuerpo -> . callFuncion
    (22) cuerpo -> . addValueHash
    (23) cuerpo -> . modValueHash
    (24) cuerpo -> . deleteValueHash
    (25) cuerpo -> . insertArray
    (26) cuerpo -> . deleteArray
    (27) asignacion -> . VARIABLE ASIGN expression
    (28) asignacion -> . VARIABLE ASIGN comparacion
    (29) asignacion -> . VARIABLE ASIGN callFuncion
    (30) asignacion -> . VARIABLE ASIGN diccionario
    (31) asignacion -> . VARIABLE ASIGN getValueHash
    (32) asignacion -> . VARIABLE ASIGN array
    (33) expression -> . term
    (34) expression -> . boleano
    (41) expression -> . expression PLUS term
    (42) expression -> . expression MINUS term
    (46) comparacion -> . expression comparador expression
    (47) comparacion -> . expression comparador expression AND comparacion
    (48) comparacion -> . expression comparador expression OR comparacion
    (55) condicional -> . IF comparacion D_POINT cuerpo END
    (56) condicional -> . IF comparacion D_POINT cuerpo END cond_else
    (58) impresion -> . PUTS STRING
    (59) input -> . VARIABLE ASIGN GETS
    (67) callFuncion -> . VARIABLE LPAR RPAR
    (68) callFuncion -> . VARIABLE LPAR parametros RPAR
    (75) addValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (76) modValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (77) deleteValueHash -> . VARIABLE POINT DELETE LPAR expression RPAR
    (86) insertArray -> . VARIABLE POINT INSERT LPAR argumentosA RPAR
    (87) deleteArray -> . VARIABLE POINT DELETE_AT LPAR NUMBER RPAR
    (35) term -> . factor
    (43) term -> . term TIMES factor
    (44) term -> . term DIVIDE factor
    (45) term -> . term EXPONENTIATION factor
    (69) boleano -> . TRUE
    (70) boleano -> . FALSE
    (36) factor -> . NUMBER
    (37) factor -> . STRING
    (38) factor -> . FLOAT
    (39) factor -> . VARIABLE
    (40) factor -> . LPAR expression RPAR

    VARIABLE        shift and go to state 16
    IF              shift and go to state 20
    PUTS            shift and go to state 23
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NUMBER          shift and go to state 25
    STRING          shift and go to state 24
    FLOAT           shift and go to state 30
    LPAR            shift and go to state 22

    comparacion                    shift and go to state 51
    cuerpo                         shift and go to state 135
    asignacion                     shift and go to state 50
    expression                     shift and go to state 49
    condicional                    shift and go to state 52
    impresion                      shift and go to state 53
    input                          shift and go to state 54
    callFuncion                    shift and go to state 55
    addValueHash                   shift and go to state 56
    modValueHash                   shift and go to state 57
    deleteValueHash                shift and go to state 58
    insertArray                    shift and go to state 59
    deleteArray                    shift and go to state 60
    term                           shift and go to state 17
    boleano                        shift and go to state 18
    factor                         shift and go to state 26

state 118

    (62) encabezado -> DEF VARIABLE LPAR RPAR .

    RETURN          reduce using rule 62 (encabezado -> DEF VARIABLE LPAR RPAR .)
    VARIABLE        reduce using rule 62 (encabezado -> DEF VARIABLE LPAR RPAR .)
    IF              reduce using rule 62 (encabezado -> DEF VARIABLE LPAR RPAR .)
    PUTS            reduce using rule 62 (encabezado -> DEF VARIABLE LPAR RPAR .)
    TRUE            reduce using rule 62 (encabezado -> DEF VARIABLE LPAR RPAR .)
    FALSE           reduce using rule 62 (encabezado -> DEF VARIABLE LPAR RPAR .)
    NUMBER          reduce using rule 62 (encabezado -> DEF VARIABLE LPAR RPAR .)
    STRING          reduce using rule 62 (encabezado -> DEF VARIABLE LPAR RPAR .)
    FLOAT           reduce using rule 62 (encabezado -> DEF VARIABLE LPAR RPAR .)
    LPAR            reduce using rule 62 (encabezado -> DEF VARIABLE LPAR RPAR .)


state 119

    (63) encabezado -> DEF VARIABLE LPAR parametros . RPAR

    RPAR            shift and go to state 136


state 120

    (47) comparacion -> expression comparador expression AND comparacion .

    $end            reduce using rule 47 (comparacion -> expression comparador expression AND comparacion .)
    END             reduce using rule 47 (comparacion -> expression comparador expression AND comparacion .)
    RETURN          reduce using rule 47 (comparacion -> expression comparador expression AND comparacion .)
    D_POINT         reduce using rule 47 (comparacion -> expression comparador expression AND comparacion .)
    RPAR            reduce using rule 47 (comparacion -> expression comparador expression AND comparacion .)


state 121

    (48) comparacion -> expression comparador expression OR comparacion .

    $end            reduce using rule 48 (comparacion -> expression comparador expression OR comparacion .)
    END             reduce using rule 48 (comparacion -> expression comparador expression OR comparacion .)
    RETURN          reduce using rule 48 (comparacion -> expression comparador expression OR comparacion .)
    D_POINT         reduce using rule 48 (comparacion -> expression comparador expression OR comparacion .)
    RPAR            reduce using rule 48 (comparacion -> expression comparador expression OR comparacion .)


state 122

    (74) getValueHash -> VARIABLE LCOR expression . RCOR
    (41) expression -> expression . PLUS term
    (42) expression -> expression . MINUS term

    RCOR            shift and go to state 137
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32


state 123

    (71) diccionario -> LKEY cuerpoHash RKEY .

    $end            reduce using rule 71 (diccionario -> LKEY cuerpoHash RKEY .)
    END             reduce using rule 71 (diccionario -> LKEY cuerpoHash RKEY .)
    RETURN          reduce using rule 71 (diccionario -> LKEY cuerpoHash RKEY .)


state 124

    (72) cuerpoHash -> expression ASIGN . GREATER expression
    (73) cuerpoHash -> expression ASIGN . GREATER expression COMMA cuerpoHash

    GREATER         shift and go to state 138


state 125

    (82) array -> LCOR parametrosA RCOR .

    $end            reduce using rule 82 (array -> LCOR parametrosA RCOR .)
    END             reduce using rule 82 (array -> LCOR parametrosA RCOR .)
    RETURN          reduce using rule 82 (array -> LCOR parametrosA RCOR .)


state 126

    (81) parametrosA -> factor COMMA . parametrosA
    (80) parametrosA -> . factor
    (81) parametrosA -> . factor COMMA parametrosA
    (36) factor -> . NUMBER
    (37) factor -> . STRING
    (38) factor -> . FLOAT
    (39) factor -> . VARIABLE
    (40) factor -> . LPAR expression RPAR

    NUMBER          shift and go to state 25
    STRING          shift and go to state 24
    FLOAT           shift and go to state 30
    VARIABLE        shift and go to state 63
    LPAR            shift and go to state 22

    factor                         shift and go to state 107
    parametrosA                    shift and go to state 139

state 127

    (61) parametros -> VARIABLE COMMA parametros .

    RPAR            reduce using rule 61 (parametros -> VARIABLE COMMA parametros .)


state 128

    (75) addValueHash -> VARIABLE LCOR expression RCOR ASIGN . expression
    (76) modValueHash -> VARIABLE LCOR expression RCOR ASIGN . expression
    (33) expression -> . term
    (34) expression -> . boleano
    (41) expression -> . expression PLUS term
    (42) expression -> . expression MINUS term
    (35) term -> . factor
    (43) term -> . term TIMES factor
    (44) term -> . term DIVIDE factor
    (45) term -> . term EXPONENTIATION factor
    (69) boleano -> . TRUE
    (70) boleano -> . FALSE
    (36) factor -> . NUMBER
    (37) factor -> . STRING
    (38) factor -> . FLOAT
    (39) factor -> . VARIABLE
    (40) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NUMBER          shift and go to state 25
    STRING          shift and go to state 24
    FLOAT           shift and go to state 30
    VARIABLE        shift and go to state 63
    LPAR            shift and go to state 22

    expression                     shift and go to state 140
    term                           shift and go to state 17
    boleano                        shift and go to state 18
    factor                         shift and go to state 26

state 129

    (77) deleteValueHash -> VARIABLE POINT DELETE LPAR expression . RPAR
    (41) expression -> expression . PLUS term
    (42) expression -> expression . MINUS term

    RPAR            shift and go to state 141
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32


state 130

    (86) insertArray -> VARIABLE POINT INSERT LPAR argumentosA . RPAR

    RPAR            shift and go to state 142


state 131

    (84) argumentosA -> NUMBER .
    (85) argumentosA -> NUMBER . COMMA factor

    RPAR            reduce using rule 84 (argumentosA -> NUMBER .)
    COMMA           shift and go to state 143


state 132

    (87) deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER . RPAR

    RPAR            shift and go to state 144


state 133

    (66) funciones -> encabezado cuerpo RETURN expression END .

    $end            reduce using rule 66 (funciones -> encabezado cuerpo RETURN expression END .)


state 134

    (55) condicional -> IF comparacion D_POINT cuerpo END .
    (56) condicional -> IF comparacion D_POINT cuerpo END . cond_else
    (57) cond_else -> . ELSE D_POINT cuerpo END

    $end            reduce using rule 55 (condicional -> IF comparacion D_POINT cuerpo END .)
    END             reduce using rule 55 (condicional -> IF comparacion D_POINT cuerpo END .)
    RETURN          reduce using rule 55 (condicional -> IF comparacion D_POINT cuerpo END .)
    ELSE            shift and go to state 146

    cond_else                      shift and go to state 145

state 135

    (78) while -> WHILE LPAR comparacion RPAR cuerpo . END
    (79) while -> WHILE LPAR comparacion RPAR cuerpo . END while

    END             shift and go to state 147


state 136

    (63) encabezado -> DEF VARIABLE LPAR parametros RPAR .

    RETURN          reduce using rule 63 (encabezado -> DEF VARIABLE LPAR parametros RPAR .)
    VARIABLE        reduce using rule 63 (encabezado -> DEF VARIABLE LPAR parametros RPAR .)
    IF              reduce using rule 63 (encabezado -> DEF VARIABLE LPAR parametros RPAR .)
    PUTS            reduce using rule 63 (encabezado -> DEF VARIABLE LPAR parametros RPAR .)
    TRUE            reduce using rule 63 (encabezado -> DEF VARIABLE LPAR parametros RPAR .)
    FALSE           reduce using rule 63 (encabezado -> DEF VARIABLE LPAR parametros RPAR .)
    NUMBER          reduce using rule 63 (encabezado -> DEF VARIABLE LPAR parametros RPAR .)
    STRING          reduce using rule 63 (encabezado -> DEF VARIABLE LPAR parametros RPAR .)
    FLOAT           reduce using rule 63 (encabezado -> DEF VARIABLE LPAR parametros RPAR .)
    LPAR            reduce using rule 63 (encabezado -> DEF VARIABLE LPAR parametros RPAR .)


state 137

    (74) getValueHash -> VARIABLE LCOR expression RCOR .

    $end            reduce using rule 74 (getValueHash -> VARIABLE LCOR expression RCOR .)
    END             reduce using rule 74 (getValueHash -> VARIABLE LCOR expression RCOR .)
    RETURN          reduce using rule 74 (getValueHash -> VARIABLE LCOR expression RCOR .)


state 138

    (72) cuerpoHash -> expression ASIGN GREATER . expression
    (73) cuerpoHash -> expression ASIGN GREATER . expression COMMA cuerpoHash
    (33) expression -> . term
    (34) expression -> . boleano
    (41) expression -> . expression PLUS term
    (42) expression -> . expression MINUS term
    (35) term -> . factor
    (43) term -> . term TIMES factor
    (44) term -> . term DIVIDE factor
    (45) term -> . term EXPONENTIATION factor
    (69) boleano -> . TRUE
    (70) boleano -> . FALSE
    (36) factor -> . NUMBER
    (37) factor -> . STRING
    (38) factor -> . FLOAT
    (39) factor -> . VARIABLE
    (40) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NUMBER          shift and go to state 25
    STRING          shift and go to state 24
    FLOAT           shift and go to state 30
    VARIABLE        shift and go to state 63
    LPAR            shift and go to state 22

    expression                     shift and go to state 148
    term                           shift and go to state 17
    boleano                        shift and go to state 18
    factor                         shift and go to state 26

state 139

    (81) parametrosA -> factor COMMA parametrosA .

    RCOR            reduce using rule 81 (parametrosA -> factor COMMA parametrosA .)


state 140

    (75) addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .
    (76) modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .
    (41) expression -> expression . PLUS term
    (42) expression -> expression . MINUS term

  ! reduce/reduce conflict for $end resolved using rule 75 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
  ! reduce/reduce conflict for END resolved using rule 75 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
  ! reduce/reduce conflict for RETURN resolved using rule 75 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
    $end            reduce using rule 75 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
    END             reduce using rule 75 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
    RETURN          reduce using rule 75 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32

  ! $end            [ reduce using rule 76 (modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .) ]
  ! END             [ reduce using rule 76 (modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .) ]
  ! RETURN          [ reduce using rule 76 (modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .) ]


state 141

    (77) deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR .

    $end            reduce using rule 77 (deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR .)
    END             reduce using rule 77 (deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR .)
    RETURN          reduce using rule 77 (deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR .)


state 142

    (86) insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR .

    $end            reduce using rule 86 (insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR .)
    END             reduce using rule 86 (insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR .)
    RETURN          reduce using rule 86 (insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR .)


state 143

    (85) argumentosA -> NUMBER COMMA . factor
    (36) factor -> . NUMBER
    (37) factor -> . STRING
    (38) factor -> . FLOAT
    (39) factor -> . VARIABLE
    (40) factor -> . LPAR expression RPAR

    NUMBER          shift and go to state 25
    STRING          shift and go to state 24
    FLOAT           shift and go to state 30
    VARIABLE        shift and go to state 63
    LPAR            shift and go to state 22

    factor                         shift and go to state 149

state 144

    (87) deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR .

    $end            reduce using rule 87 (deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR .)
    END             reduce using rule 87 (deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR .)
    RETURN          reduce using rule 87 (deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR .)


state 145

    (56) condicional -> IF comparacion D_POINT cuerpo END cond_else .

    $end            reduce using rule 56 (condicional -> IF comparacion D_POINT cuerpo END cond_else .)
    END             reduce using rule 56 (condicional -> IF comparacion D_POINT cuerpo END cond_else .)
    RETURN          reduce using rule 56 (condicional -> IF comparacion D_POINT cuerpo END cond_else .)


state 146

    (57) cond_else -> ELSE . D_POINT cuerpo END

    D_POINT         shift and go to state 150


state 147

    (78) while -> WHILE LPAR comparacion RPAR cuerpo END .
    (79) while -> WHILE LPAR comparacion RPAR cuerpo END . while
    (78) while -> . WHILE LPAR comparacion RPAR cuerpo END
    (79) while -> . WHILE LPAR comparacion RPAR cuerpo END while

    $end            reduce using rule 78 (while -> WHILE LPAR comparacion RPAR cuerpo END .)
    WHILE           shift and go to state 21

    while                          shift and go to state 151

state 148

    (72) cuerpoHash -> expression ASIGN GREATER expression .
    (73) cuerpoHash -> expression ASIGN GREATER expression . COMMA cuerpoHash
    (41) expression -> expression . PLUS term
    (42) expression -> expression . MINUS term

    RKEY            reduce using rule 72 (cuerpoHash -> expression ASIGN GREATER expression .)
    COMMA           shift and go to state 152
    PLUS            shift and go to state 31
    MINUS           shift and go to state 32


state 149

    (85) argumentosA -> NUMBER COMMA factor .

    RPAR            reduce using rule 85 (argumentosA -> NUMBER COMMA factor .)


state 150

    (57) cond_else -> ELSE D_POINT . cuerpo END
    (15) cuerpo -> . asignacion
    (16) cuerpo -> . expression
    (17) cuerpo -> . comparacion
    (18) cuerpo -> . condicional
    (19) cuerpo -> . impresion
    (20) cuerpo -> . input
    (21) cuerpo -> . callFuncion
    (22) cuerpo -> . addValueHash
    (23) cuerpo -> . modValueHash
    (24) cuerpo -> . deleteValueHash
    (25) cuerpo -> . insertArray
    (26) cuerpo -> . deleteArray
    (27) asignacion -> . VARIABLE ASIGN expression
    (28) asignacion -> . VARIABLE ASIGN comparacion
    (29) asignacion -> . VARIABLE ASIGN callFuncion
    (30) asignacion -> . VARIABLE ASIGN diccionario
    (31) asignacion -> . VARIABLE ASIGN getValueHash
    (32) asignacion -> . VARIABLE ASIGN array
    (33) expression -> . term
    (34) expression -> . boleano
    (41) expression -> . expression PLUS term
    (42) expression -> . expression MINUS term
    (46) comparacion -> . expression comparador expression
    (47) comparacion -> . expression comparador expression AND comparacion
    (48) comparacion -> . expression comparador expression OR comparacion
    (55) condicional -> . IF comparacion D_POINT cuerpo END
    (56) condicional -> . IF comparacion D_POINT cuerpo END cond_else
    (58) impresion -> . PUTS STRING
    (59) input -> . VARIABLE ASIGN GETS
    (67) callFuncion -> . VARIABLE LPAR RPAR
    (68) callFuncion -> . VARIABLE LPAR parametros RPAR
    (75) addValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (76) modValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (77) deleteValueHash -> . VARIABLE POINT DELETE LPAR expression RPAR
    (86) insertArray -> . VARIABLE POINT INSERT LPAR argumentosA RPAR
    (87) deleteArray -> . VARIABLE POINT DELETE_AT LPAR NUMBER RPAR
    (35) term -> . factor
    (43) term -> . term TIMES factor
    (44) term -> . term DIVIDE factor
    (45) term -> . term EXPONENTIATION factor
    (69) boleano -> . TRUE
    (70) boleano -> . FALSE
    (36) factor -> . NUMBER
    (37) factor -> . STRING
    (38) factor -> . FLOAT
    (39) factor -> . VARIABLE
    (40) factor -> . LPAR expression RPAR

    VARIABLE        shift and go to state 16
    IF              shift and go to state 20
    PUTS            shift and go to state 23
    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NUMBER          shift and go to state 25
    STRING          shift and go to state 24
    FLOAT           shift and go to state 30
    LPAR            shift and go to state 22

    cuerpo                         shift and go to state 153
    asignacion                     shift and go to state 50
    expression                     shift and go to state 49
    comparacion                    shift and go to state 51
    condicional                    shift and go to state 52
    impresion                      shift and go to state 53
    input                          shift and go to state 54
    callFuncion                    shift and go to state 55
    addValueHash                   shift and go to state 56
    modValueHash                   shift and go to state 57
    deleteValueHash                shift and go to state 58
    insertArray                    shift and go to state 59
    deleteArray                    shift and go to state 60
    term                           shift and go to state 17
    boleano                        shift and go to state 18
    factor                         shift and go to state 26

state 151

    (79) while -> WHILE LPAR comparacion RPAR cuerpo END while .

    $end            reduce using rule 79 (while -> WHILE LPAR comparacion RPAR cuerpo END while .)


state 152

    (73) cuerpoHash -> expression ASIGN GREATER expression COMMA . cuerpoHash
    (72) cuerpoHash -> . expression ASIGN GREATER expression
    (73) cuerpoHash -> . expression ASIGN GREATER expression COMMA cuerpoHash
    (33) expression -> . term
    (34) expression -> . boleano
    (41) expression -> . expression PLUS term
    (42) expression -> . expression MINUS term
    (35) term -> . factor
    (43) term -> . term TIMES factor
    (44) term -> . term DIVIDE factor
    (45) term -> . term EXPONENTIATION factor
    (69) boleano -> . TRUE
    (70) boleano -> . FALSE
    (36) factor -> . NUMBER
    (37) factor -> . STRING
    (38) factor -> . FLOAT
    (39) factor -> . VARIABLE
    (40) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 27
    FALSE           shift and go to state 28
    NUMBER          shift and go to state 25
    STRING          shift and go to state 24
    FLOAT           shift and go to state 30
    VARIABLE        shift and go to state 63
    LPAR            shift and go to state 22

    expression                     shift and go to state 104
    cuerpoHash                     shift and go to state 154
    term                           shift and go to state 17
    boleano                        shift and go to state 18
    factor                         shift and go to state 26

state 153

    (57) cond_else -> ELSE D_POINT cuerpo . END

    END             shift and go to state 155


state 154

    (73) cuerpoHash -> expression ASIGN GREATER expression COMMA cuerpoHash .

    RKEY            reduce using rule 73 (cuerpoHash -> expression ASIGN GREATER expression COMMA cuerpoHash .)


state 155

    (57) cond_else -> ELSE D_POINT cuerpo END .

    $end            reduce using rule 57 (cond_else -> ELSE D_POINT cuerpo END .)
    END             reduce using rule 57 (cond_else -> ELSE D_POINT cuerpo END .)
    RETURN          reduce using rule 57 (cond_else -> ELSE D_POINT cuerpo END .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ASIGN in state 16 resolved as shift
WARNING: reduce/reduce conflict in state 140 resolved using rule (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression)
WARNING: rejected rule (modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression) in state 140
WARNING: Rule (modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression) is never reduced
