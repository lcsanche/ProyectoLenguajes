Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> instrucciones
Rule 1     instrucciones -> asignacion
Rule 2     instrucciones -> expression
Rule 3     instrucciones -> funciones
Rule 4     instrucciones -> comparacion
Rule 5     instrucciones -> condicional
Rule 6     instrucciones -> while
Rule 7     instrucciones -> for
Rule 8     instrucciones -> impresion
Rule 9     instrucciones -> input
Rule 10    instrucciones -> callFuncion
Rule 11    instrucciones -> addValueHash
Rule 12    instrucciones -> modValueHash
Rule 13    instrucciones -> deleteValueHash
Rule 14    instrucciones -> insertArray
Rule 15    instrucciones -> deleteArray
Rule 16    instrucciones -> searchStack
Rule 17    instrucciones -> pushStack
Rule 18    instrucciones -> metodoBoleano
Rule 19    instrucciones -> opMatematicas
Rule 20    cuerpo -> asignacion
Rule 21    cuerpo -> expression
Rule 22    cuerpo -> comparacion
Rule 23    cuerpo -> condicional
Rule 24    cuerpo -> impresion
Rule 25    cuerpo -> for
Rule 26    cuerpo -> while
Rule 27    cuerpo -> input
Rule 28    cuerpo -> callFuncion
Rule 29    cuerpo -> addValueHash
Rule 30    cuerpo -> modValueHash
Rule 31    cuerpo -> deleteValueHash
Rule 32    cuerpo -> insertArray
Rule 33    cuerpo -> deleteArray
Rule 34    cuerpo -> pushStack
Rule 35    cuerpo -> searchStack
Rule 36    cuerpo -> opMatematicas
Rule 37    asignacion -> VARIABLE ASIGN expression
Rule 38    asignacion -> VARIABLE ASIGN comparacion
Rule 39    asignacion -> VARIABLE ASIGN callFuncion
Rule 40    asignacion -> VARIABLE ASIGN diccionario
Rule 41    asignacion -> VARIABLE ASIGN getValueHash
Rule 42    asignacion -> VARIABLE ASIGN array
Rule 43    asignacion -> VARIABLE ASIGN stack
Rule 44    asignacion -> VARIABLE tipo_asignacion factor
Rule 45    asignacion -> VARIABLE ASIGN opMatematicas
Rule 46    tipo_asignacion -> PLUS ASIGN
Rule 47    tipo_asignacion -> MINUS ASIGN
Rule 48    tipo_asignacion -> TIMES ASIGN
Rule 49    tipo_asignacion -> DIVIDE ASIGN
Rule 50    tipo_asignacion -> EXPONENTIATION ASIGN
Rule 51    expression -> term
Rule 52    expression -> boleano
Rule 53    term -> factor
Rule 54    factor -> NUMBER
Rule 55    factor -> STRING
Rule 56    factor -> FLOAT
Rule 57    factor -> VARIABLE
Rule 58    factor -> LPAR expression RPAR
Rule 59    comparacion -> expression comparador expression
Rule 60    comparacion -> expression comparador expression AND comparacion
Rule 61    comparacion -> expression comparador expression OR comparacion
Rule 62    comparacion -> expression AND expression
Rule 63    comparacion -> expression OR expression
Rule 64    comparador -> GREATER
Rule 65    comparador -> GREATER_OR_EQUAL
Rule 66    comparador -> MINOR
Rule 67    comparador -> MINOR_OR_EQUAL
Rule 68    comparador -> ASIGN ASIGN
Rule 69    comparador -> NOT ASIGN
Rule 70    condicional -> IF comparacion D_POINT repCuerpo END
Rule 71    condicional -> IF comparacion D_POINT repCuerpo END cond_else
Rule 72    cond_else -> ELSE D_POINT repCuerpo END
Rule 73    impresion -> PUTS factor
Rule 74    input -> VARIABLE ASIGN GETS
Rule 75    boleano -> TRUE
Rule 76    boleano -> FALSE
Rule 77    diccionario -> LKEY cuerpoHash RKEY
Rule 78    cuerpoHash -> expression ASIGN GREATER expression
Rule 79    cuerpoHash -> expression ASIGN GREATER expression COMMA cuerpoHash
Rule 80    getValueHash -> VARIABLE LCOR expression RCOR
Rule 81    addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression
Rule 82    modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression
Rule 83    deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR
Rule 84    metodoBoleano -> VARIABLE POINT VARIABLE QUESTION LPAR expression RPAR
Rule 85    metodoBoleano -> VARIABLE POINT VARIABLE QUESTION LPAR RPAR
Rule 86    while -> WHILE LPAR comparacion RPAR repCuerpo END
Rule 87    while -> WHILE LPAR comparacion RPAR repCuerpo END while
Rule 88    repCuerpo -> cuerpo
Rule 89    repCuerpo -> cuerpo repCuerpo
Rule 90    parametrosA -> factor
Rule 91    parametrosA -> factor COMMA parametrosA
Rule 92    array -> LCOR parametrosA RCOR
Rule 93    array -> LCOR RCOR
Rule 94    argumentosA -> NUMBER COMMA factor
Rule 95    insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR
Rule 96    deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR
Rule 97    for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END
Rule 98    for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for
Rule 99    vacio -> 
Rule 100   stack -> LCOR parametrosA RCOR
Rule 101   stack -> LCOR vacio RCOR
Rule 102   searchStack -> VARIABLE POINT SEARCH LPAR factor RPAR
Rule 103   pushStack -> VARIABLE POINT PUSH LPAR factor RPAR
Rule 104   opMatematicas -> suma
Rule 105   opMatematicas -> resta
Rule 106   opMatematicas -> multiplicacion
Rule 107   opMatematicas -> division
Rule 108   opMatematicas -> exponenciacion
Rule 109   suma -> VARIABLE PLUS NUMBER
Rule 110   suma -> operadores PLUS operadores
Rule 111   suma -> operadores PLUS opMatematicas
Rule 112   suma -> operadores PLUS LPAR operadores RPAR
Rule 113   suma -> operadores PLUS LPAR opMatematicas RPAR
Rule 114   resta -> VARIABLE MINUS NUMBER
Rule 115   resta -> operadores MINUS operadores
Rule 116   resta -> operadores MINUS opMatematicas
Rule 117   resta -> operadores MINUS LPAR operadores RPAR
Rule 118   resta -> operadores MINUS LPAR opMatematicas RPAR
Rule 119   multiplicacion -> operadores TIMES operadores
Rule 120   multiplicacion -> operadores TIMES LPAR operadores RPAR
Rule 121   multiplicacion -> operadores TIMES LPAR opMatematicas RPAR
Rule 122   division -> operadores DIVIDE operadores
Rule 123   division -> operadores DIVIDE LPAR operadores RPAR
Rule 124   division -> operadores DIVIDE LPAR opMatematicas RPAR
Rule 125   exponenciacion -> operadores EXPONENTIATION operadores
Rule 126   exponenciacion -> LPAR operadores RPAR EXPONENTIATION operadores
Rule 127   exponenciacion -> LPAR opMatematicas RPAR EXPONENTIATION operadores
Rule 128   operadores -> enteros
Rule 129   operadores -> FLOAT
Rule 130   enteros -> NUMBER
Rule 131   enteros -> MINUS NUMBER
Rule 132   parametros -> VARIABLE
Rule 133   parametros -> VARIABLE COMMA parametros
Rule 134   encabezado -> DEF VARIABLE LPAR RPAR
Rule 135   encabezado -> DEF VARIABLE LPAR parametros RPAR
Rule 136   funciones -> encabezado repCuerpo END
Rule 137   funciones -> encabezado RETURN expression END
Rule 138   funciones -> encabezado repCuerpo RETURN expression END
Rule 139   callFuncion -> VARIABLE LPAR RPAR
Rule 140   callFuncion -> VARIABLE LPAR parametros RPAR

Terminals, with rules where they appear

                     : 99
AND                  : 60 62
ASIGN                : 37 38 39 40 41 42 43 45 46 47 48 49 50 68 68 69 74 78 79 81 82
COMMA                : 79 91 94 133
DEF                  : 134 135
DELETE               : 83
DELETE_AT            : 96
DIVIDE               : 49 122 123 124
DO                   : 97 98
D_POINT              : 70 71 72
ELSE                 : 72
END                  : 70 71 72 86 87 97 98 136 137 138
EXPONENTIATION       : 50 125 126 127
FALSE                : 76
FLOAT                : 56 129
FOR                  : 97 98
GETS                 : 74
GREATER              : 64 78 79
GREATER_OR_EQUAL     : 65
IF                   : 70 71
IN                   : 97 98
INSERT               : 95
LCOR                 : 80 81 82 92 93 100 101
LKEY                 : 77
LPAR                 : 58 83 84 85 86 87 95 96 102 103 112 113 117 118 120 121 123 124 126 127 134 135 139 140
MINOR                : 66
MINOR_OR_EQUAL       : 67
MINUS                : 47 114 115 116 117 118 131
NOT                  : 69
NUMBER               : 54 94 96 97 97 98 98 109 114 130 131
OR                   : 61 63
PLUS                 : 46 109 110 111 112 113
POINT                : 83 84 85 95 96 97 97 98 98 102 103
PUSH                 : 103
PUTS                 : 73
QUESTION             : 84 85
RCOR                 : 80 81 82 92 93 100 101
RETURN               : 137 138
RKEY                 : 77
RPAR                 : 58 83 84 85 86 87 95 96 102 103 112 113 117 118 120 121 123 124 126 127 134 135 139 140
SEARCH               : 102
STRING               : 55
TIMES                : 48 119 120 121
TRUE                 : 75
VARIABLE             : 37 38 39 40 41 42 43 44 45 57 74 80 81 82 83 84 84 85 85 95 96 97 98 102 103 109 114 132 133 134 135 139 140
WHILE                : 86 87
error                : 

Nonterminals, with rules where they appear

addValueHash         : 11 29
argumentosA          : 95
array                : 42
asignacion           : 1 20
boleano              : 52
callFuncion          : 10 28 39
comparacion          : 4 22 38 60 61 70 71 86 87
comparador           : 59 60 61
cond_else            : 71
condicional          : 5 23
cuerpo               : 88 89
cuerpoHash           : 77 79
deleteArray          : 15 33
deleteValueHash      : 13 31
diccionario          : 40
division             : 107
encabezado           : 136 137 138
enteros              : 128
exponenciacion       : 108
expression           : 2 21 37 58 59 59 60 60 61 61 62 62 63 63 78 78 79 79 80 81 81 82 82 83 84 137 138
factor               : 44 53 73 90 91 94 102 103
for                  : 7 25 98
funciones            : 3
getValueHash         : 41
impresion            : 8 24
input                : 9 27
insertArray          : 14 32
instrucciones        : 0
metodoBoleano        : 18
modValueHash         : 12 30
multiplicacion       : 106
opMatematicas        : 19 36 45 111 113 116 118 121 124 127
operadores           : 110 110 111 112 112 113 115 115 116 117 117 118 119 119 120 120 121 122 122 123 123 124 125 125 126 126 127
parametros           : 133 135 140
parametrosA          : 91 92 100
pushStack            : 17 34
repCuerpo            : 70 71 72 86 87 89 97 98 136 138
resta                : 105
searchStack          : 16 35
stack                : 43
suma                 : 104
term                 : 51
tipo_asignacion      : 44
vacio                : 101
while                : 6 26 87

Parsing method: LALR

state 0

    (0) S' -> . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . expression
    (3) instrucciones -> . funciones
    (4) instrucciones -> . comparacion
    (5) instrucciones -> . condicional
    (6) instrucciones -> . while
    (7) instrucciones -> . for
    (8) instrucciones -> . impresion
    (9) instrucciones -> . input
    (10) instrucciones -> . callFuncion
    (11) instrucciones -> . addValueHash
    (12) instrucciones -> . modValueHash
    (13) instrucciones -> . deleteValueHash
    (14) instrucciones -> . insertArray
    (15) instrucciones -> . deleteArray
    (16) instrucciones -> . searchStack
    (17) instrucciones -> . pushStack
    (18) instrucciones -> . metodoBoleano
    (19) instrucciones -> . opMatematicas
    (37) asignacion -> . VARIABLE ASIGN expression
    (38) asignacion -> . VARIABLE ASIGN comparacion
    (39) asignacion -> . VARIABLE ASIGN callFuncion
    (40) asignacion -> . VARIABLE ASIGN diccionario
    (41) asignacion -> . VARIABLE ASIGN getValueHash
    (42) asignacion -> . VARIABLE ASIGN array
    (43) asignacion -> . VARIABLE ASIGN stack
    (44) asignacion -> . VARIABLE tipo_asignacion factor
    (45) asignacion -> . VARIABLE ASIGN opMatematicas
    (51) expression -> . term
    (52) expression -> . boleano
    (136) funciones -> . encabezado repCuerpo END
    (137) funciones -> . encabezado RETURN expression END
    (138) funciones -> . encabezado repCuerpo RETURN expression END
    (59) comparacion -> . expression comparador expression
    (60) comparacion -> . expression comparador expression AND comparacion
    (61) comparacion -> . expression comparador expression OR comparacion
    (62) comparacion -> . expression AND expression
    (63) comparacion -> . expression OR expression
    (70) condicional -> . IF comparacion D_POINT repCuerpo END
    (71) condicional -> . IF comparacion D_POINT repCuerpo END cond_else
    (86) while -> . WHILE LPAR comparacion RPAR repCuerpo END
    (87) while -> . WHILE LPAR comparacion RPAR repCuerpo END while
    (97) for -> . FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END
    (98) for -> . FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for
    (73) impresion -> . PUTS factor
    (74) input -> . VARIABLE ASIGN GETS
    (139) callFuncion -> . VARIABLE LPAR RPAR
    (140) callFuncion -> . VARIABLE LPAR parametros RPAR
    (81) addValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (82) modValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (83) deleteValueHash -> . VARIABLE POINT DELETE LPAR expression RPAR
    (95) insertArray -> . VARIABLE POINT INSERT LPAR argumentosA RPAR
    (96) deleteArray -> . VARIABLE POINT DELETE_AT LPAR NUMBER RPAR
    (102) searchStack -> . VARIABLE POINT SEARCH LPAR factor RPAR
    (103) pushStack -> . VARIABLE POINT PUSH LPAR factor RPAR
    (84) metodoBoleano -> . VARIABLE POINT VARIABLE QUESTION LPAR expression RPAR
    (85) metodoBoleano -> . VARIABLE POINT VARIABLE QUESTION LPAR RPAR
    (104) opMatematicas -> . suma
    (105) opMatematicas -> . resta
    (106) opMatematicas -> . multiplicacion
    (107) opMatematicas -> . division
    (108) opMatematicas -> . exponenciacion
    (53) term -> . factor
    (75) boleano -> . TRUE
    (76) boleano -> . FALSE
    (134) encabezado -> . DEF VARIABLE LPAR RPAR
    (135) encabezado -> . DEF VARIABLE LPAR parametros RPAR
    (109) suma -> . VARIABLE PLUS NUMBER
    (110) suma -> . operadores PLUS operadores
    (111) suma -> . operadores PLUS opMatematicas
    (112) suma -> . operadores PLUS LPAR operadores RPAR
    (113) suma -> . operadores PLUS LPAR opMatematicas RPAR
    (114) resta -> . VARIABLE MINUS NUMBER
    (115) resta -> . operadores MINUS operadores
    (116) resta -> . operadores MINUS opMatematicas
    (117) resta -> . operadores MINUS LPAR operadores RPAR
    (118) resta -> . operadores MINUS LPAR opMatematicas RPAR
    (119) multiplicacion -> . operadores TIMES operadores
    (120) multiplicacion -> . operadores TIMES LPAR operadores RPAR
    (121) multiplicacion -> . operadores TIMES LPAR opMatematicas RPAR
    (122) division -> . operadores DIVIDE operadores
    (123) division -> . operadores DIVIDE LPAR operadores RPAR
    (124) division -> . operadores DIVIDE LPAR opMatematicas RPAR
    (125) exponenciacion -> . operadores EXPONENTIATION operadores
    (126) exponenciacion -> . LPAR operadores RPAR EXPONENTIATION operadores
    (127) exponenciacion -> . LPAR opMatematicas RPAR EXPONENTIATION operadores
    (54) factor -> . NUMBER
    (55) factor -> . STRING
    (56) factor -> . FLOAT
    (57) factor -> . VARIABLE
    (58) factor -> . LPAR expression RPAR
    (128) operadores -> . enteros
    (129) operadores -> . FLOAT
    (130) enteros -> . NUMBER
    (131) enteros -> . MINUS NUMBER

    VARIABLE        shift and go to state 21
    IF              shift and go to state 26
    WHILE           shift and go to state 27
    FOR             shift and go to state 29
    PUTS            shift and go to state 31
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    DEF             shift and go to state 39
    LPAR            shift and go to state 28
    NUMBER          shift and go to state 30
    STRING          shift and go to state 42
    FLOAT           shift and go to state 43
    MINUS           shift and go to state 41

    instrucciones                  shift and go to state 1
    asignacion                     shift and go to state 2
    expression                     shift and go to state 3
    funciones                      shift and go to state 4
    comparacion                    shift and go to state 5
    condicional                    shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    impresion                      shift and go to state 9
    input                          shift and go to state 10
    callFuncion                    shift and go to state 11
    addValueHash                   shift and go to state 12
    modValueHash                   shift and go to state 13
    deleteValueHash                shift and go to state 14
    insertArray                    shift and go to state 15
    deleteArray                    shift and go to state 16
    searchStack                    shift and go to state 17
    pushStack                      shift and go to state 18
    metodoBoleano                  shift and go to state 19
    opMatematicas                  shift and go to state 20
    factor                         shift and go to state 22
    term                           shift and go to state 23
    boleano                        shift and go to state 24
    encabezado                     shift and go to state 25
    suma                           shift and go to state 32
    resta                          shift and go to state 33
    multiplicacion                 shift and go to state 34
    division                       shift and go to state 35
    exponenciacion                 shift and go to state 36
    operadores                     shift and go to state 40
    enteros                        shift and go to state 44

state 1

    (0) S' -> instrucciones .



state 2

    (1) instrucciones -> asignacion .

    $end            reduce using rule 1 (instrucciones -> asignacion .)


state 3

    (2) instrucciones -> expression .
    (59) comparacion -> expression . comparador expression
    (60) comparacion -> expression . comparador expression AND comparacion
    (61) comparacion -> expression . comparador expression OR comparacion
    (62) comparacion -> expression . AND expression
    (63) comparacion -> expression . OR expression
    (64) comparador -> . GREATER
    (65) comparador -> . GREATER_OR_EQUAL
    (66) comparador -> . MINOR
    (67) comparador -> . MINOR_OR_EQUAL
    (68) comparador -> . ASIGN ASIGN
    (69) comparador -> . NOT ASIGN

    $end            reduce using rule 2 (instrucciones -> expression .)
    AND             shift and go to state 46
    OR              shift and go to state 47
    GREATER         shift and go to state 48
    GREATER_OR_EQUAL shift and go to state 49
    MINOR           shift and go to state 50
    MINOR_OR_EQUAL  shift and go to state 51
    ASIGN           shift and go to state 52
    NOT             shift and go to state 53

    comparador                     shift and go to state 45

state 4

    (3) instrucciones -> funciones .

    $end            reduce using rule 3 (instrucciones -> funciones .)


state 5

    (4) instrucciones -> comparacion .

    $end            reduce using rule 4 (instrucciones -> comparacion .)


state 6

    (5) instrucciones -> condicional .

    $end            reduce using rule 5 (instrucciones -> condicional .)


state 7

    (6) instrucciones -> while .

    $end            reduce using rule 6 (instrucciones -> while .)


state 8

    (7) instrucciones -> for .

    $end            reduce using rule 7 (instrucciones -> for .)


state 9

    (8) instrucciones -> impresion .

    $end            reduce using rule 8 (instrucciones -> impresion .)


state 10

    (9) instrucciones -> input .

    $end            reduce using rule 9 (instrucciones -> input .)


state 11

    (10) instrucciones -> callFuncion .

    $end            reduce using rule 10 (instrucciones -> callFuncion .)


state 12

    (11) instrucciones -> addValueHash .

    $end            reduce using rule 11 (instrucciones -> addValueHash .)


state 13

    (12) instrucciones -> modValueHash .

    $end            reduce using rule 12 (instrucciones -> modValueHash .)


state 14

    (13) instrucciones -> deleteValueHash .

    $end            reduce using rule 13 (instrucciones -> deleteValueHash .)


state 15

    (14) instrucciones -> insertArray .

    $end            reduce using rule 14 (instrucciones -> insertArray .)


state 16

    (15) instrucciones -> deleteArray .

    $end            reduce using rule 15 (instrucciones -> deleteArray .)


state 17

    (16) instrucciones -> searchStack .

    $end            reduce using rule 16 (instrucciones -> searchStack .)


state 18

    (17) instrucciones -> pushStack .

    $end            reduce using rule 17 (instrucciones -> pushStack .)


state 19

    (18) instrucciones -> metodoBoleano .

    $end            reduce using rule 18 (instrucciones -> metodoBoleano .)


state 20

    (19) instrucciones -> opMatematicas .

    $end            reduce using rule 19 (instrucciones -> opMatematicas .)


state 21

    (37) asignacion -> VARIABLE . ASIGN expression
    (38) asignacion -> VARIABLE . ASIGN comparacion
    (39) asignacion -> VARIABLE . ASIGN callFuncion
    (40) asignacion -> VARIABLE . ASIGN diccionario
    (41) asignacion -> VARIABLE . ASIGN getValueHash
    (42) asignacion -> VARIABLE . ASIGN array
    (43) asignacion -> VARIABLE . ASIGN stack
    (44) asignacion -> VARIABLE . tipo_asignacion factor
    (45) asignacion -> VARIABLE . ASIGN opMatematicas
    (74) input -> VARIABLE . ASIGN GETS
    (139) callFuncion -> VARIABLE . LPAR RPAR
    (140) callFuncion -> VARIABLE . LPAR parametros RPAR
    (81) addValueHash -> VARIABLE . LCOR expression RCOR ASIGN expression
    (82) modValueHash -> VARIABLE . LCOR expression RCOR ASIGN expression
    (83) deleteValueHash -> VARIABLE . POINT DELETE LPAR expression RPAR
    (95) insertArray -> VARIABLE . POINT INSERT LPAR argumentosA RPAR
    (96) deleteArray -> VARIABLE . POINT DELETE_AT LPAR NUMBER RPAR
    (102) searchStack -> VARIABLE . POINT SEARCH LPAR factor RPAR
    (103) pushStack -> VARIABLE . POINT PUSH LPAR factor RPAR
    (84) metodoBoleano -> VARIABLE . POINT VARIABLE QUESTION LPAR expression RPAR
    (85) metodoBoleano -> VARIABLE . POINT VARIABLE QUESTION LPAR RPAR
    (109) suma -> VARIABLE . PLUS NUMBER
    (114) resta -> VARIABLE . MINUS NUMBER
    (57) factor -> VARIABLE .
    (46) tipo_asignacion -> . PLUS ASIGN
    (47) tipo_asignacion -> . MINUS ASIGN
    (48) tipo_asignacion -> . TIMES ASIGN
    (49) tipo_asignacion -> . DIVIDE ASIGN
    (50) tipo_asignacion -> . EXPONENTIATION ASIGN

  ! shift/reduce conflict for ASIGN resolved as shift
    ASIGN           shift and go to state 54
    LPAR            shift and go to state 56
    LCOR            shift and go to state 57
    POINT           shift and go to state 58
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    AND             reduce using rule 57 (factor -> VARIABLE .)
    OR              reduce using rule 57 (factor -> VARIABLE .)
    GREATER         reduce using rule 57 (factor -> VARIABLE .)
    GREATER_OR_EQUAL reduce using rule 57 (factor -> VARIABLE .)
    MINOR           reduce using rule 57 (factor -> VARIABLE .)
    MINOR_OR_EQUAL  reduce using rule 57 (factor -> VARIABLE .)
    NOT             reduce using rule 57 (factor -> VARIABLE .)
    $end            reduce using rule 57 (factor -> VARIABLE .)
    TIMES           shift and go to state 61
    DIVIDE          shift and go to state 62
    EXPONENTIATION  shift and go to state 63

  ! ASIGN           [ reduce using rule 57 (factor -> VARIABLE .) ]

    tipo_asignacion                shift and go to state 55

state 22

    (53) term -> factor .

    AND             reduce using rule 53 (term -> factor .)
    OR              reduce using rule 53 (term -> factor .)
    GREATER         reduce using rule 53 (term -> factor .)
    GREATER_OR_EQUAL reduce using rule 53 (term -> factor .)
    MINOR           reduce using rule 53 (term -> factor .)
    MINOR_OR_EQUAL  reduce using rule 53 (term -> factor .)
    ASIGN           reduce using rule 53 (term -> factor .)
    NOT             reduce using rule 53 (term -> factor .)
    $end            reduce using rule 53 (term -> factor .)
    VARIABLE        reduce using rule 53 (term -> factor .)
    IF              reduce using rule 53 (term -> factor .)
    PUTS            reduce using rule 53 (term -> factor .)
    FOR             reduce using rule 53 (term -> factor .)
    WHILE           reduce using rule 53 (term -> factor .)
    TRUE            reduce using rule 53 (term -> factor .)
    FALSE           reduce using rule 53 (term -> factor .)
    LPAR            reduce using rule 53 (term -> factor .)
    NUMBER          reduce using rule 53 (term -> factor .)
    STRING          reduce using rule 53 (term -> factor .)
    FLOAT           reduce using rule 53 (term -> factor .)
    MINUS           reduce using rule 53 (term -> factor .)
    END             reduce using rule 53 (term -> factor .)
    RETURN          reduce using rule 53 (term -> factor .)
    RPAR            reduce using rule 53 (term -> factor .)
    D_POINT         reduce using rule 53 (term -> factor .)
    RCOR            reduce using rule 53 (term -> factor .)
    COMMA           reduce using rule 53 (term -> factor .)
    RKEY            reduce using rule 53 (term -> factor .)


state 23

    (51) expression -> term .

    AND             reduce using rule 51 (expression -> term .)
    OR              reduce using rule 51 (expression -> term .)
    GREATER         reduce using rule 51 (expression -> term .)
    GREATER_OR_EQUAL reduce using rule 51 (expression -> term .)
    MINOR           reduce using rule 51 (expression -> term .)
    MINOR_OR_EQUAL  reduce using rule 51 (expression -> term .)
    ASIGN           reduce using rule 51 (expression -> term .)
    NOT             reduce using rule 51 (expression -> term .)
    $end            reduce using rule 51 (expression -> term .)
    VARIABLE        reduce using rule 51 (expression -> term .)
    IF              reduce using rule 51 (expression -> term .)
    PUTS            reduce using rule 51 (expression -> term .)
    FOR             reduce using rule 51 (expression -> term .)
    WHILE           reduce using rule 51 (expression -> term .)
    TRUE            reduce using rule 51 (expression -> term .)
    FALSE           reduce using rule 51 (expression -> term .)
    LPAR            reduce using rule 51 (expression -> term .)
    NUMBER          reduce using rule 51 (expression -> term .)
    STRING          reduce using rule 51 (expression -> term .)
    FLOAT           reduce using rule 51 (expression -> term .)
    MINUS           reduce using rule 51 (expression -> term .)
    END             reduce using rule 51 (expression -> term .)
    RETURN          reduce using rule 51 (expression -> term .)
    RPAR            reduce using rule 51 (expression -> term .)
    D_POINT         reduce using rule 51 (expression -> term .)
    RCOR            reduce using rule 51 (expression -> term .)
    COMMA           reduce using rule 51 (expression -> term .)
    RKEY            reduce using rule 51 (expression -> term .)


state 24

    (52) expression -> boleano .

    AND             reduce using rule 52 (expression -> boleano .)
    OR              reduce using rule 52 (expression -> boleano .)
    GREATER         reduce using rule 52 (expression -> boleano .)
    GREATER_OR_EQUAL reduce using rule 52 (expression -> boleano .)
    MINOR           reduce using rule 52 (expression -> boleano .)
    MINOR_OR_EQUAL  reduce using rule 52 (expression -> boleano .)
    ASIGN           reduce using rule 52 (expression -> boleano .)
    NOT             reduce using rule 52 (expression -> boleano .)
    $end            reduce using rule 52 (expression -> boleano .)
    VARIABLE        reduce using rule 52 (expression -> boleano .)
    IF              reduce using rule 52 (expression -> boleano .)
    PUTS            reduce using rule 52 (expression -> boleano .)
    FOR             reduce using rule 52 (expression -> boleano .)
    WHILE           reduce using rule 52 (expression -> boleano .)
    TRUE            reduce using rule 52 (expression -> boleano .)
    FALSE           reduce using rule 52 (expression -> boleano .)
    LPAR            reduce using rule 52 (expression -> boleano .)
    NUMBER          reduce using rule 52 (expression -> boleano .)
    STRING          reduce using rule 52 (expression -> boleano .)
    FLOAT           reduce using rule 52 (expression -> boleano .)
    MINUS           reduce using rule 52 (expression -> boleano .)
    END             reduce using rule 52 (expression -> boleano .)
    RETURN          reduce using rule 52 (expression -> boleano .)
    RPAR            reduce using rule 52 (expression -> boleano .)
    D_POINT         reduce using rule 52 (expression -> boleano .)
    RCOR            reduce using rule 52 (expression -> boleano .)
    COMMA           reduce using rule 52 (expression -> boleano .)
    RKEY            reduce using rule 52 (expression -> boleano .)


state 25

    (136) funciones -> encabezado . repCuerpo END
    (137) funciones -> encabezado . RETURN expression END
    (138) funciones -> encabezado . repCuerpo RETURN expression END
    (88) repCuerpo -> . cuerpo
    (89) repCuerpo -> . cuerpo repCuerpo
    (20) cuerpo -> . asignacion
    (21) cuerpo -> . expression
    (22) cuerpo -> . comparacion
    (23) cuerpo -> . condicional
    (24) cuerpo -> . impresion
    (25) cuerpo -> . for
    (26) cuerpo -> . while
    (27) cuerpo -> . input
    (28) cuerpo -> . callFuncion
    (29) cuerpo -> . addValueHash
    (30) cuerpo -> . modValueHash
    (31) cuerpo -> . deleteValueHash
    (32) cuerpo -> . insertArray
    (33) cuerpo -> . deleteArray
    (34) cuerpo -> . pushStack
    (35) cuerpo -> . searchStack
    (36) cuerpo -> . opMatematicas
    (37) asignacion -> . VARIABLE ASIGN expression
    (38) asignacion -> . VARIABLE ASIGN comparacion
    (39) asignacion -> . VARIABLE ASIGN callFuncion
    (40) asignacion -> . VARIABLE ASIGN diccionario
    (41) asignacion -> . VARIABLE ASIGN getValueHash
    (42) asignacion -> . VARIABLE ASIGN array
    (43) asignacion -> . VARIABLE ASIGN stack
    (44) asignacion -> . VARIABLE tipo_asignacion factor
    (45) asignacion -> . VARIABLE ASIGN opMatematicas
    (51) expression -> . term
    (52) expression -> . boleano
    (59) comparacion -> . expression comparador expression
    (60) comparacion -> . expression comparador expression AND comparacion
    (61) comparacion -> . expression comparador expression OR comparacion
    (62) comparacion -> . expression AND expression
    (63) comparacion -> . expression OR expression
    (70) condicional -> . IF comparacion D_POINT repCuerpo END
    (71) condicional -> . IF comparacion D_POINT repCuerpo END cond_else
    (73) impresion -> . PUTS factor
    (97) for -> . FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END
    (98) for -> . FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for
    (86) while -> . WHILE LPAR comparacion RPAR repCuerpo END
    (87) while -> . WHILE LPAR comparacion RPAR repCuerpo END while
    (74) input -> . VARIABLE ASIGN GETS
    (139) callFuncion -> . VARIABLE LPAR RPAR
    (140) callFuncion -> . VARIABLE LPAR parametros RPAR
    (81) addValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (82) modValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (83) deleteValueHash -> . VARIABLE POINT DELETE LPAR expression RPAR
    (95) insertArray -> . VARIABLE POINT INSERT LPAR argumentosA RPAR
    (96) deleteArray -> . VARIABLE POINT DELETE_AT LPAR NUMBER RPAR
    (103) pushStack -> . VARIABLE POINT PUSH LPAR factor RPAR
    (102) searchStack -> . VARIABLE POINT SEARCH LPAR factor RPAR
    (104) opMatematicas -> . suma
    (105) opMatematicas -> . resta
    (106) opMatematicas -> . multiplicacion
    (107) opMatematicas -> . division
    (108) opMatematicas -> . exponenciacion
    (53) term -> . factor
    (75) boleano -> . TRUE
    (76) boleano -> . FALSE
    (109) suma -> . VARIABLE PLUS NUMBER
    (110) suma -> . operadores PLUS operadores
    (111) suma -> . operadores PLUS opMatematicas
    (112) suma -> . operadores PLUS LPAR operadores RPAR
    (113) suma -> . operadores PLUS LPAR opMatematicas RPAR
    (114) resta -> . VARIABLE MINUS NUMBER
    (115) resta -> . operadores MINUS operadores
    (116) resta -> . operadores MINUS opMatematicas
    (117) resta -> . operadores MINUS LPAR operadores RPAR
    (118) resta -> . operadores MINUS LPAR opMatematicas RPAR
    (119) multiplicacion -> . operadores TIMES operadores
    (120) multiplicacion -> . operadores TIMES LPAR operadores RPAR
    (121) multiplicacion -> . operadores TIMES LPAR opMatematicas RPAR
    (122) division -> . operadores DIVIDE operadores
    (123) division -> . operadores DIVIDE LPAR operadores RPAR
    (124) division -> . operadores DIVIDE LPAR opMatematicas RPAR
    (125) exponenciacion -> . operadores EXPONENTIATION operadores
    (126) exponenciacion -> . LPAR operadores RPAR EXPONENTIATION operadores
    (127) exponenciacion -> . LPAR opMatematicas RPAR EXPONENTIATION operadores
    (54) factor -> . NUMBER
    (55) factor -> . STRING
    (56) factor -> . FLOAT
    (57) factor -> . VARIABLE
    (58) factor -> . LPAR expression RPAR
    (128) operadores -> . enteros
    (129) operadores -> . FLOAT
    (130) enteros -> . NUMBER
    (131) enteros -> . MINUS NUMBER

    RETURN          shift and go to state 65
    VARIABLE        shift and go to state 84
    IF              shift and go to state 26
    PUTS            shift and go to state 31
    FOR             shift and go to state 29
    WHILE           shift and go to state 27
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    LPAR            shift and go to state 28
    NUMBER          shift and go to state 30
    STRING          shift and go to state 42
    FLOAT           shift and go to state 43
    MINUS           shift and go to state 41

    repCuerpo                      shift and go to state 64
    expression                     shift and go to state 66
    cuerpo                         shift and go to state 67
    asignacion                     shift and go to state 68
    comparacion                    shift and go to state 69
    condicional                    shift and go to state 70
    impresion                      shift and go to state 71
    for                            shift and go to state 72
    while                          shift and go to state 73
    input                          shift and go to state 74
    callFuncion                    shift and go to state 75
    addValueHash                   shift and go to state 76
    modValueHash                   shift and go to state 77
    deleteValueHash                shift and go to state 78
    insertArray                    shift and go to state 79
    deleteArray                    shift and go to state 80
    pushStack                      shift and go to state 81
    searchStack                    shift and go to state 82
    opMatematicas                  shift and go to state 83
    factor                         shift and go to state 22
    term                           shift and go to state 23
    boleano                        shift and go to state 24
    suma                           shift and go to state 32
    resta                          shift and go to state 33
    multiplicacion                 shift and go to state 34
    division                       shift and go to state 35
    exponenciacion                 shift and go to state 36
    operadores                     shift and go to state 40
    enteros                        shift and go to state 44

state 26

    (70) condicional -> IF . comparacion D_POINT repCuerpo END
    (71) condicional -> IF . comparacion D_POINT repCuerpo END cond_else
    (59) comparacion -> . expression comparador expression
    (60) comparacion -> . expression comparador expression AND comparacion
    (61) comparacion -> . expression comparador expression OR comparacion
    (62) comparacion -> . expression AND expression
    (63) comparacion -> . expression OR expression
    (51) expression -> . term
    (52) expression -> . boleano
    (53) term -> . factor
    (75) boleano -> . TRUE
    (76) boleano -> . FALSE
    (54) factor -> . NUMBER
    (55) factor -> . STRING
    (56) factor -> . FLOAT
    (57) factor -> . VARIABLE
    (58) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    NUMBER          shift and go to state 87
    STRING          shift and go to state 42
    FLOAT           shift and go to state 88
    VARIABLE        shift and go to state 89
    LPAR            shift and go to state 90

    comparacion                    shift and go to state 85
    expression                     shift and go to state 86
    term                           shift and go to state 23
    boleano                        shift and go to state 24
    factor                         shift and go to state 22

state 27

    (86) while -> WHILE . LPAR comparacion RPAR repCuerpo END
    (87) while -> WHILE . LPAR comparacion RPAR repCuerpo END while

    LPAR            shift and go to state 91


state 28

    (126) exponenciacion -> LPAR . operadores RPAR EXPONENTIATION operadores
    (127) exponenciacion -> LPAR . opMatematicas RPAR EXPONENTIATION operadores
    (58) factor -> LPAR . expression RPAR
    (128) operadores -> . enteros
    (129) operadores -> . FLOAT
    (104) opMatematicas -> . suma
    (105) opMatematicas -> . resta
    (106) opMatematicas -> . multiplicacion
    (107) opMatematicas -> . division
    (108) opMatematicas -> . exponenciacion
    (51) expression -> . term
    (52) expression -> . boleano
    (130) enteros -> . NUMBER
    (131) enteros -> . MINUS NUMBER
    (109) suma -> . VARIABLE PLUS NUMBER
    (110) suma -> . operadores PLUS operadores
    (111) suma -> . operadores PLUS opMatematicas
    (112) suma -> . operadores PLUS LPAR operadores RPAR
    (113) suma -> . operadores PLUS LPAR opMatematicas RPAR
    (114) resta -> . VARIABLE MINUS NUMBER
    (115) resta -> . operadores MINUS operadores
    (116) resta -> . operadores MINUS opMatematicas
    (117) resta -> . operadores MINUS LPAR operadores RPAR
    (118) resta -> . operadores MINUS LPAR opMatematicas RPAR
    (119) multiplicacion -> . operadores TIMES operadores
    (120) multiplicacion -> . operadores TIMES LPAR operadores RPAR
    (121) multiplicacion -> . operadores TIMES LPAR opMatematicas RPAR
    (122) division -> . operadores DIVIDE operadores
    (123) division -> . operadores DIVIDE LPAR operadores RPAR
    (124) division -> . operadores DIVIDE LPAR opMatematicas RPAR
    (125) exponenciacion -> . operadores EXPONENTIATION operadores
    (126) exponenciacion -> . LPAR operadores RPAR EXPONENTIATION operadores
    (127) exponenciacion -> . LPAR opMatematicas RPAR EXPONENTIATION operadores
    (53) term -> . factor
    (75) boleano -> . TRUE
    (76) boleano -> . FALSE
    (54) factor -> . NUMBER
    (55) factor -> . STRING
    (56) factor -> . FLOAT
    (57) factor -> . VARIABLE
    (58) factor -> . LPAR expression RPAR

    FLOAT           shift and go to state 95
    NUMBER          shift and go to state 96
    MINUS           shift and go to state 41
    VARIABLE        shift and go to state 97
    LPAR            shift and go to state 28
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    STRING          shift and go to state 42

    operadores                     shift and go to state 92
    opMatematicas                  shift and go to state 93
    expression                     shift and go to state 94
    enteros                        shift and go to state 44
    suma                           shift and go to state 32
    resta                          shift and go to state 33
    multiplicacion                 shift and go to state 34
    division                       shift and go to state 35
    exponenciacion                 shift and go to state 36
    term                           shift and go to state 23
    boleano                        shift and go to state 24
    factor                         shift and go to state 22

state 29

    (97) for -> FOR . VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END
    (98) for -> FOR . VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for

    VARIABLE        shift and go to state 98


state 30

    (54) factor -> NUMBER .
    (130) enteros -> NUMBER .

  ! reduce/reduce conflict for MINUS resolved using rule 54 (factor -> NUMBER .)
    AND             reduce using rule 54 (factor -> NUMBER .)
    OR              reduce using rule 54 (factor -> NUMBER .)
    GREATER         reduce using rule 54 (factor -> NUMBER .)
    GREATER_OR_EQUAL reduce using rule 54 (factor -> NUMBER .)
    MINOR           reduce using rule 54 (factor -> NUMBER .)
    MINOR_OR_EQUAL  reduce using rule 54 (factor -> NUMBER .)
    ASIGN           reduce using rule 54 (factor -> NUMBER .)
    NOT             reduce using rule 54 (factor -> NUMBER .)
    $end            reduce using rule 54 (factor -> NUMBER .)
    VARIABLE        reduce using rule 54 (factor -> NUMBER .)
    IF              reduce using rule 54 (factor -> NUMBER .)
    PUTS            reduce using rule 54 (factor -> NUMBER .)
    FOR             reduce using rule 54 (factor -> NUMBER .)
    WHILE           reduce using rule 54 (factor -> NUMBER .)
    TRUE            reduce using rule 54 (factor -> NUMBER .)
    FALSE           reduce using rule 54 (factor -> NUMBER .)
    LPAR            reduce using rule 54 (factor -> NUMBER .)
    NUMBER          reduce using rule 54 (factor -> NUMBER .)
    STRING          reduce using rule 54 (factor -> NUMBER .)
    FLOAT           reduce using rule 54 (factor -> NUMBER .)
    MINUS           reduce using rule 54 (factor -> NUMBER .)
    END             reduce using rule 54 (factor -> NUMBER .)
    RETURN          reduce using rule 54 (factor -> NUMBER .)
    PLUS            reduce using rule 130 (enteros -> NUMBER .)
    TIMES           reduce using rule 130 (enteros -> NUMBER .)
    DIVIDE          reduce using rule 130 (enteros -> NUMBER .)
    EXPONENTIATION  reduce using rule 130 (enteros -> NUMBER .)

  ! MINUS           [ reduce using rule 130 (enteros -> NUMBER .) ]


state 31

    (73) impresion -> PUTS . factor
    (54) factor -> . NUMBER
    (55) factor -> . STRING
    (56) factor -> . FLOAT
    (57) factor -> . VARIABLE
    (58) factor -> . LPAR expression RPAR

    NUMBER          shift and go to state 87
    STRING          shift and go to state 42
    FLOAT           shift and go to state 88
    VARIABLE        shift and go to state 89
    LPAR            shift and go to state 90

    factor                         shift and go to state 99

state 32

    (104) opMatematicas -> suma .

    $end            reduce using rule 104 (opMatematicas -> suma .)
    VARIABLE        reduce using rule 104 (opMatematicas -> suma .)
    IF              reduce using rule 104 (opMatematicas -> suma .)
    PUTS            reduce using rule 104 (opMatematicas -> suma .)
    FOR             reduce using rule 104 (opMatematicas -> suma .)
    WHILE           reduce using rule 104 (opMatematicas -> suma .)
    TRUE            reduce using rule 104 (opMatematicas -> suma .)
    FALSE           reduce using rule 104 (opMatematicas -> suma .)
    LPAR            reduce using rule 104 (opMatematicas -> suma .)
    NUMBER          reduce using rule 104 (opMatematicas -> suma .)
    STRING          reduce using rule 104 (opMatematicas -> suma .)
    FLOAT           reduce using rule 104 (opMatematicas -> suma .)
    MINUS           reduce using rule 104 (opMatematicas -> suma .)
    END             reduce using rule 104 (opMatematicas -> suma .)
    RETURN          reduce using rule 104 (opMatematicas -> suma .)
    RPAR            reduce using rule 104 (opMatematicas -> suma .)


state 33

    (105) opMatematicas -> resta .

    $end            reduce using rule 105 (opMatematicas -> resta .)
    VARIABLE        reduce using rule 105 (opMatematicas -> resta .)
    IF              reduce using rule 105 (opMatematicas -> resta .)
    PUTS            reduce using rule 105 (opMatematicas -> resta .)
    FOR             reduce using rule 105 (opMatematicas -> resta .)
    WHILE           reduce using rule 105 (opMatematicas -> resta .)
    TRUE            reduce using rule 105 (opMatematicas -> resta .)
    FALSE           reduce using rule 105 (opMatematicas -> resta .)
    LPAR            reduce using rule 105 (opMatematicas -> resta .)
    NUMBER          reduce using rule 105 (opMatematicas -> resta .)
    STRING          reduce using rule 105 (opMatematicas -> resta .)
    FLOAT           reduce using rule 105 (opMatematicas -> resta .)
    MINUS           reduce using rule 105 (opMatematicas -> resta .)
    END             reduce using rule 105 (opMatematicas -> resta .)
    RETURN          reduce using rule 105 (opMatematicas -> resta .)
    RPAR            reduce using rule 105 (opMatematicas -> resta .)


state 34

    (106) opMatematicas -> multiplicacion .

    $end            reduce using rule 106 (opMatematicas -> multiplicacion .)
    VARIABLE        reduce using rule 106 (opMatematicas -> multiplicacion .)
    IF              reduce using rule 106 (opMatematicas -> multiplicacion .)
    PUTS            reduce using rule 106 (opMatematicas -> multiplicacion .)
    FOR             reduce using rule 106 (opMatematicas -> multiplicacion .)
    WHILE           reduce using rule 106 (opMatematicas -> multiplicacion .)
    TRUE            reduce using rule 106 (opMatematicas -> multiplicacion .)
    FALSE           reduce using rule 106 (opMatematicas -> multiplicacion .)
    LPAR            reduce using rule 106 (opMatematicas -> multiplicacion .)
    NUMBER          reduce using rule 106 (opMatematicas -> multiplicacion .)
    STRING          reduce using rule 106 (opMatematicas -> multiplicacion .)
    FLOAT           reduce using rule 106 (opMatematicas -> multiplicacion .)
    MINUS           reduce using rule 106 (opMatematicas -> multiplicacion .)
    END             reduce using rule 106 (opMatematicas -> multiplicacion .)
    RETURN          reduce using rule 106 (opMatematicas -> multiplicacion .)
    RPAR            reduce using rule 106 (opMatematicas -> multiplicacion .)


state 35

    (107) opMatematicas -> division .

    $end            reduce using rule 107 (opMatematicas -> division .)
    VARIABLE        reduce using rule 107 (opMatematicas -> division .)
    IF              reduce using rule 107 (opMatematicas -> division .)
    PUTS            reduce using rule 107 (opMatematicas -> division .)
    FOR             reduce using rule 107 (opMatematicas -> division .)
    WHILE           reduce using rule 107 (opMatematicas -> division .)
    TRUE            reduce using rule 107 (opMatematicas -> division .)
    FALSE           reduce using rule 107 (opMatematicas -> division .)
    LPAR            reduce using rule 107 (opMatematicas -> division .)
    NUMBER          reduce using rule 107 (opMatematicas -> division .)
    STRING          reduce using rule 107 (opMatematicas -> division .)
    FLOAT           reduce using rule 107 (opMatematicas -> division .)
    MINUS           reduce using rule 107 (opMatematicas -> division .)
    END             reduce using rule 107 (opMatematicas -> division .)
    RETURN          reduce using rule 107 (opMatematicas -> division .)
    RPAR            reduce using rule 107 (opMatematicas -> division .)


state 36

    (108) opMatematicas -> exponenciacion .

    $end            reduce using rule 108 (opMatematicas -> exponenciacion .)
    VARIABLE        reduce using rule 108 (opMatematicas -> exponenciacion .)
    IF              reduce using rule 108 (opMatematicas -> exponenciacion .)
    PUTS            reduce using rule 108 (opMatematicas -> exponenciacion .)
    FOR             reduce using rule 108 (opMatematicas -> exponenciacion .)
    WHILE           reduce using rule 108 (opMatematicas -> exponenciacion .)
    TRUE            reduce using rule 108 (opMatematicas -> exponenciacion .)
    FALSE           reduce using rule 108 (opMatematicas -> exponenciacion .)
    LPAR            reduce using rule 108 (opMatematicas -> exponenciacion .)
    NUMBER          reduce using rule 108 (opMatematicas -> exponenciacion .)
    STRING          reduce using rule 108 (opMatematicas -> exponenciacion .)
    FLOAT           reduce using rule 108 (opMatematicas -> exponenciacion .)
    MINUS           reduce using rule 108 (opMatematicas -> exponenciacion .)
    END             reduce using rule 108 (opMatematicas -> exponenciacion .)
    RETURN          reduce using rule 108 (opMatematicas -> exponenciacion .)
    RPAR            reduce using rule 108 (opMatematicas -> exponenciacion .)


state 37

    (75) boleano -> TRUE .

    AND             reduce using rule 75 (boleano -> TRUE .)
    OR              reduce using rule 75 (boleano -> TRUE .)
    GREATER         reduce using rule 75 (boleano -> TRUE .)
    GREATER_OR_EQUAL reduce using rule 75 (boleano -> TRUE .)
    MINOR           reduce using rule 75 (boleano -> TRUE .)
    MINOR_OR_EQUAL  reduce using rule 75 (boleano -> TRUE .)
    ASIGN           reduce using rule 75 (boleano -> TRUE .)
    NOT             reduce using rule 75 (boleano -> TRUE .)
    $end            reduce using rule 75 (boleano -> TRUE .)
    VARIABLE        reduce using rule 75 (boleano -> TRUE .)
    IF              reduce using rule 75 (boleano -> TRUE .)
    PUTS            reduce using rule 75 (boleano -> TRUE .)
    FOR             reduce using rule 75 (boleano -> TRUE .)
    WHILE           reduce using rule 75 (boleano -> TRUE .)
    TRUE            reduce using rule 75 (boleano -> TRUE .)
    FALSE           reduce using rule 75 (boleano -> TRUE .)
    LPAR            reduce using rule 75 (boleano -> TRUE .)
    NUMBER          reduce using rule 75 (boleano -> TRUE .)
    STRING          reduce using rule 75 (boleano -> TRUE .)
    FLOAT           reduce using rule 75 (boleano -> TRUE .)
    MINUS           reduce using rule 75 (boleano -> TRUE .)
    END             reduce using rule 75 (boleano -> TRUE .)
    RETURN          reduce using rule 75 (boleano -> TRUE .)
    RPAR            reduce using rule 75 (boleano -> TRUE .)
    D_POINT         reduce using rule 75 (boleano -> TRUE .)
    RCOR            reduce using rule 75 (boleano -> TRUE .)
    COMMA           reduce using rule 75 (boleano -> TRUE .)
    RKEY            reduce using rule 75 (boleano -> TRUE .)


state 38

    (76) boleano -> FALSE .

    AND             reduce using rule 76 (boleano -> FALSE .)
    OR              reduce using rule 76 (boleano -> FALSE .)
    GREATER         reduce using rule 76 (boleano -> FALSE .)
    GREATER_OR_EQUAL reduce using rule 76 (boleano -> FALSE .)
    MINOR           reduce using rule 76 (boleano -> FALSE .)
    MINOR_OR_EQUAL  reduce using rule 76 (boleano -> FALSE .)
    ASIGN           reduce using rule 76 (boleano -> FALSE .)
    NOT             reduce using rule 76 (boleano -> FALSE .)
    $end            reduce using rule 76 (boleano -> FALSE .)
    VARIABLE        reduce using rule 76 (boleano -> FALSE .)
    IF              reduce using rule 76 (boleano -> FALSE .)
    PUTS            reduce using rule 76 (boleano -> FALSE .)
    FOR             reduce using rule 76 (boleano -> FALSE .)
    WHILE           reduce using rule 76 (boleano -> FALSE .)
    TRUE            reduce using rule 76 (boleano -> FALSE .)
    FALSE           reduce using rule 76 (boleano -> FALSE .)
    LPAR            reduce using rule 76 (boleano -> FALSE .)
    NUMBER          reduce using rule 76 (boleano -> FALSE .)
    STRING          reduce using rule 76 (boleano -> FALSE .)
    FLOAT           reduce using rule 76 (boleano -> FALSE .)
    MINUS           reduce using rule 76 (boleano -> FALSE .)
    END             reduce using rule 76 (boleano -> FALSE .)
    RETURN          reduce using rule 76 (boleano -> FALSE .)
    RPAR            reduce using rule 76 (boleano -> FALSE .)
    D_POINT         reduce using rule 76 (boleano -> FALSE .)
    RCOR            reduce using rule 76 (boleano -> FALSE .)
    COMMA           reduce using rule 76 (boleano -> FALSE .)
    RKEY            reduce using rule 76 (boleano -> FALSE .)


state 39

    (134) encabezado -> DEF . VARIABLE LPAR RPAR
    (135) encabezado -> DEF . VARIABLE LPAR parametros RPAR

    VARIABLE        shift and go to state 100


state 40

    (110) suma -> operadores . PLUS operadores
    (111) suma -> operadores . PLUS opMatematicas
    (112) suma -> operadores . PLUS LPAR operadores RPAR
    (113) suma -> operadores . PLUS LPAR opMatematicas RPAR
    (115) resta -> operadores . MINUS operadores
    (116) resta -> operadores . MINUS opMatematicas
    (117) resta -> operadores . MINUS LPAR operadores RPAR
    (118) resta -> operadores . MINUS LPAR opMatematicas RPAR
    (119) multiplicacion -> operadores . TIMES operadores
    (120) multiplicacion -> operadores . TIMES LPAR operadores RPAR
    (121) multiplicacion -> operadores . TIMES LPAR opMatematicas RPAR
    (122) division -> operadores . DIVIDE operadores
    (123) division -> operadores . DIVIDE LPAR operadores RPAR
    (124) division -> operadores . DIVIDE LPAR opMatematicas RPAR
    (125) exponenciacion -> operadores . EXPONENTIATION operadores

    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    TIMES           shift and go to state 103
    DIVIDE          shift and go to state 104
    EXPONENTIATION  shift and go to state 105


state 41

    (131) enteros -> MINUS . NUMBER

    NUMBER          shift and go to state 106


state 42

    (55) factor -> STRING .

    AND             reduce using rule 55 (factor -> STRING .)
    OR              reduce using rule 55 (factor -> STRING .)
    GREATER         reduce using rule 55 (factor -> STRING .)
    GREATER_OR_EQUAL reduce using rule 55 (factor -> STRING .)
    MINOR           reduce using rule 55 (factor -> STRING .)
    MINOR_OR_EQUAL  reduce using rule 55 (factor -> STRING .)
    ASIGN           reduce using rule 55 (factor -> STRING .)
    NOT             reduce using rule 55 (factor -> STRING .)
    $end            reduce using rule 55 (factor -> STRING .)
    VARIABLE        reduce using rule 55 (factor -> STRING .)
    IF              reduce using rule 55 (factor -> STRING .)
    PUTS            reduce using rule 55 (factor -> STRING .)
    FOR             reduce using rule 55 (factor -> STRING .)
    WHILE           reduce using rule 55 (factor -> STRING .)
    TRUE            reduce using rule 55 (factor -> STRING .)
    FALSE           reduce using rule 55 (factor -> STRING .)
    LPAR            reduce using rule 55 (factor -> STRING .)
    NUMBER          reduce using rule 55 (factor -> STRING .)
    STRING          reduce using rule 55 (factor -> STRING .)
    FLOAT           reduce using rule 55 (factor -> STRING .)
    MINUS           reduce using rule 55 (factor -> STRING .)
    END             reduce using rule 55 (factor -> STRING .)
    RETURN          reduce using rule 55 (factor -> STRING .)
    RPAR            reduce using rule 55 (factor -> STRING .)
    D_POINT         reduce using rule 55 (factor -> STRING .)
    RCOR            reduce using rule 55 (factor -> STRING .)
    COMMA           reduce using rule 55 (factor -> STRING .)
    RKEY            reduce using rule 55 (factor -> STRING .)


state 43

    (56) factor -> FLOAT .
    (129) operadores -> FLOAT .

  ! reduce/reduce conflict for MINUS resolved using rule 56 (factor -> FLOAT .)
    AND             reduce using rule 56 (factor -> FLOAT .)
    OR              reduce using rule 56 (factor -> FLOAT .)
    GREATER         reduce using rule 56 (factor -> FLOAT .)
    GREATER_OR_EQUAL reduce using rule 56 (factor -> FLOAT .)
    MINOR           reduce using rule 56 (factor -> FLOAT .)
    MINOR_OR_EQUAL  reduce using rule 56 (factor -> FLOAT .)
    ASIGN           reduce using rule 56 (factor -> FLOAT .)
    NOT             reduce using rule 56 (factor -> FLOAT .)
    $end            reduce using rule 56 (factor -> FLOAT .)
    VARIABLE        reduce using rule 56 (factor -> FLOAT .)
    IF              reduce using rule 56 (factor -> FLOAT .)
    PUTS            reduce using rule 56 (factor -> FLOAT .)
    FOR             reduce using rule 56 (factor -> FLOAT .)
    WHILE           reduce using rule 56 (factor -> FLOAT .)
    TRUE            reduce using rule 56 (factor -> FLOAT .)
    FALSE           reduce using rule 56 (factor -> FLOAT .)
    LPAR            reduce using rule 56 (factor -> FLOAT .)
    NUMBER          reduce using rule 56 (factor -> FLOAT .)
    STRING          reduce using rule 56 (factor -> FLOAT .)
    FLOAT           reduce using rule 56 (factor -> FLOAT .)
    MINUS           reduce using rule 56 (factor -> FLOAT .)
    END             reduce using rule 56 (factor -> FLOAT .)
    RETURN          reduce using rule 56 (factor -> FLOAT .)
    PLUS            reduce using rule 129 (operadores -> FLOAT .)
    TIMES           reduce using rule 129 (operadores -> FLOAT .)
    DIVIDE          reduce using rule 129 (operadores -> FLOAT .)
    EXPONENTIATION  reduce using rule 129 (operadores -> FLOAT .)

  ! MINUS           [ reduce using rule 129 (operadores -> FLOAT .) ]


state 44

    (128) operadores -> enteros .

    PLUS            reduce using rule 128 (operadores -> enteros .)
    MINUS           reduce using rule 128 (operadores -> enteros .)
    TIMES           reduce using rule 128 (operadores -> enteros .)
    DIVIDE          reduce using rule 128 (operadores -> enteros .)
    EXPONENTIATION  reduce using rule 128 (operadores -> enteros .)
    RPAR            reduce using rule 128 (operadores -> enteros .)
    $end            reduce using rule 128 (operadores -> enteros .)
    VARIABLE        reduce using rule 128 (operadores -> enteros .)
    IF              reduce using rule 128 (operadores -> enteros .)
    PUTS            reduce using rule 128 (operadores -> enteros .)
    FOR             reduce using rule 128 (operadores -> enteros .)
    WHILE           reduce using rule 128 (operadores -> enteros .)
    TRUE            reduce using rule 128 (operadores -> enteros .)
    FALSE           reduce using rule 128 (operadores -> enteros .)
    LPAR            reduce using rule 128 (operadores -> enteros .)
    NUMBER          reduce using rule 128 (operadores -> enteros .)
    STRING          reduce using rule 128 (operadores -> enteros .)
    FLOAT           reduce using rule 128 (operadores -> enteros .)
    END             reduce using rule 128 (operadores -> enteros .)
    RETURN          reduce using rule 128 (operadores -> enteros .)


state 45

    (59) comparacion -> expression comparador . expression
    (60) comparacion -> expression comparador . expression AND comparacion
    (61) comparacion -> expression comparador . expression OR comparacion
    (51) expression -> . term
    (52) expression -> . boleano
    (53) term -> . factor
    (75) boleano -> . TRUE
    (76) boleano -> . FALSE
    (54) factor -> . NUMBER
    (55) factor -> . STRING
    (56) factor -> . FLOAT
    (57) factor -> . VARIABLE
    (58) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    NUMBER          shift and go to state 87
    STRING          shift and go to state 42
    FLOAT           shift and go to state 88
    VARIABLE        shift and go to state 89
    LPAR            shift and go to state 90

    expression                     shift and go to state 107
    term                           shift and go to state 23
    boleano                        shift and go to state 24
    factor                         shift and go to state 22

state 46

    (62) comparacion -> expression AND . expression
    (51) expression -> . term
    (52) expression -> . boleano
    (53) term -> . factor
    (75) boleano -> . TRUE
    (76) boleano -> . FALSE
    (54) factor -> . NUMBER
    (55) factor -> . STRING
    (56) factor -> . FLOAT
    (57) factor -> . VARIABLE
    (58) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    NUMBER          shift and go to state 87
    STRING          shift and go to state 42
    FLOAT           shift and go to state 88
    VARIABLE        shift and go to state 89
    LPAR            shift and go to state 90

    expression                     shift and go to state 108
    term                           shift and go to state 23
    boleano                        shift and go to state 24
    factor                         shift and go to state 22

state 47

    (63) comparacion -> expression OR . expression
    (51) expression -> . term
    (52) expression -> . boleano
    (53) term -> . factor
    (75) boleano -> . TRUE
    (76) boleano -> . FALSE
    (54) factor -> . NUMBER
    (55) factor -> . STRING
    (56) factor -> . FLOAT
    (57) factor -> . VARIABLE
    (58) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    NUMBER          shift and go to state 87
    STRING          shift and go to state 42
    FLOAT           shift and go to state 88
    VARIABLE        shift and go to state 89
    LPAR            shift and go to state 90

    expression                     shift and go to state 109
    term                           shift and go to state 23
    boleano                        shift and go to state 24
    factor                         shift and go to state 22

state 48

    (64) comparador -> GREATER .

    TRUE            reduce using rule 64 (comparador -> GREATER .)
    FALSE           reduce using rule 64 (comparador -> GREATER .)
    NUMBER          reduce using rule 64 (comparador -> GREATER .)
    STRING          reduce using rule 64 (comparador -> GREATER .)
    FLOAT           reduce using rule 64 (comparador -> GREATER .)
    VARIABLE        reduce using rule 64 (comparador -> GREATER .)
    LPAR            reduce using rule 64 (comparador -> GREATER .)


state 49

    (65) comparador -> GREATER_OR_EQUAL .

    TRUE            reduce using rule 65 (comparador -> GREATER_OR_EQUAL .)
    FALSE           reduce using rule 65 (comparador -> GREATER_OR_EQUAL .)
    NUMBER          reduce using rule 65 (comparador -> GREATER_OR_EQUAL .)
    STRING          reduce using rule 65 (comparador -> GREATER_OR_EQUAL .)
    FLOAT           reduce using rule 65 (comparador -> GREATER_OR_EQUAL .)
    VARIABLE        reduce using rule 65 (comparador -> GREATER_OR_EQUAL .)
    LPAR            reduce using rule 65 (comparador -> GREATER_OR_EQUAL .)


state 50

    (66) comparador -> MINOR .

    TRUE            reduce using rule 66 (comparador -> MINOR .)
    FALSE           reduce using rule 66 (comparador -> MINOR .)
    NUMBER          reduce using rule 66 (comparador -> MINOR .)
    STRING          reduce using rule 66 (comparador -> MINOR .)
    FLOAT           reduce using rule 66 (comparador -> MINOR .)
    VARIABLE        reduce using rule 66 (comparador -> MINOR .)
    LPAR            reduce using rule 66 (comparador -> MINOR .)


state 51

    (67) comparador -> MINOR_OR_EQUAL .

    TRUE            reduce using rule 67 (comparador -> MINOR_OR_EQUAL .)
    FALSE           reduce using rule 67 (comparador -> MINOR_OR_EQUAL .)
    NUMBER          reduce using rule 67 (comparador -> MINOR_OR_EQUAL .)
    STRING          reduce using rule 67 (comparador -> MINOR_OR_EQUAL .)
    FLOAT           reduce using rule 67 (comparador -> MINOR_OR_EQUAL .)
    VARIABLE        reduce using rule 67 (comparador -> MINOR_OR_EQUAL .)
    LPAR            reduce using rule 67 (comparador -> MINOR_OR_EQUAL .)


state 52

    (68) comparador -> ASIGN . ASIGN

    ASIGN           shift and go to state 110


state 53

    (69) comparador -> NOT . ASIGN

    ASIGN           shift and go to state 111


state 54

    (37) asignacion -> VARIABLE ASIGN . expression
    (38) asignacion -> VARIABLE ASIGN . comparacion
    (39) asignacion -> VARIABLE ASIGN . callFuncion
    (40) asignacion -> VARIABLE ASIGN . diccionario
    (41) asignacion -> VARIABLE ASIGN . getValueHash
    (42) asignacion -> VARIABLE ASIGN . array
    (43) asignacion -> VARIABLE ASIGN . stack
    (45) asignacion -> VARIABLE ASIGN . opMatematicas
    (74) input -> VARIABLE ASIGN . GETS
    (51) expression -> . term
    (52) expression -> . boleano
    (59) comparacion -> . expression comparador expression
    (60) comparacion -> . expression comparador expression AND comparacion
    (61) comparacion -> . expression comparador expression OR comparacion
    (62) comparacion -> . expression AND expression
    (63) comparacion -> . expression OR expression
    (139) callFuncion -> . VARIABLE LPAR RPAR
    (140) callFuncion -> . VARIABLE LPAR parametros RPAR
    (77) diccionario -> . LKEY cuerpoHash RKEY
    (80) getValueHash -> . VARIABLE LCOR expression RCOR
    (92) array -> . LCOR parametrosA RCOR
    (93) array -> . LCOR RCOR
    (100) stack -> . LCOR parametrosA RCOR
    (101) stack -> . LCOR vacio RCOR
    (104) opMatematicas -> . suma
    (105) opMatematicas -> . resta
    (106) opMatematicas -> . multiplicacion
    (107) opMatematicas -> . division
    (108) opMatematicas -> . exponenciacion
    (53) term -> . factor
    (75) boleano -> . TRUE
    (76) boleano -> . FALSE
    (109) suma -> . VARIABLE PLUS NUMBER
    (110) suma -> . operadores PLUS operadores
    (111) suma -> . operadores PLUS opMatematicas
    (112) suma -> . operadores PLUS LPAR operadores RPAR
    (113) suma -> . operadores PLUS LPAR opMatematicas RPAR
    (114) resta -> . VARIABLE MINUS NUMBER
    (115) resta -> . operadores MINUS operadores
    (116) resta -> . operadores MINUS opMatematicas
    (117) resta -> . operadores MINUS LPAR operadores RPAR
    (118) resta -> . operadores MINUS LPAR opMatematicas RPAR
    (119) multiplicacion -> . operadores TIMES operadores
    (120) multiplicacion -> . operadores TIMES LPAR operadores RPAR
    (121) multiplicacion -> . operadores TIMES LPAR opMatematicas RPAR
    (122) division -> . operadores DIVIDE operadores
    (123) division -> . operadores DIVIDE LPAR operadores RPAR
    (124) division -> . operadores DIVIDE LPAR opMatematicas RPAR
    (125) exponenciacion -> . operadores EXPONENTIATION operadores
    (126) exponenciacion -> . LPAR operadores RPAR EXPONENTIATION operadores
    (127) exponenciacion -> . LPAR opMatematicas RPAR EXPONENTIATION operadores
    (54) factor -> . NUMBER
    (55) factor -> . STRING
    (56) factor -> . FLOAT
    (57) factor -> . VARIABLE
    (58) factor -> . LPAR expression RPAR
    (128) operadores -> . enteros
    (129) operadores -> . FLOAT
    (130) enteros -> . NUMBER
    (131) enteros -> . MINUS NUMBER

    GETS            shift and go to state 121
    VARIABLE        shift and go to state 112
    LKEY            shift and go to state 122
    LCOR            shift and go to state 123
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    LPAR            shift and go to state 28
    NUMBER          shift and go to state 30
    STRING          shift and go to state 42
    FLOAT           shift and go to state 43
    MINUS           shift and go to state 41

    expression                     shift and go to state 113
    comparacion                    shift and go to state 114
    callFuncion                    shift and go to state 115
    diccionario                    shift and go to state 116
    getValueHash                   shift and go to state 117
    array                          shift and go to state 118
    stack                          shift and go to state 119
    opMatematicas                  shift and go to state 120
    term                           shift and go to state 23
    boleano                        shift and go to state 24
    suma                           shift and go to state 32
    resta                          shift and go to state 33
    multiplicacion                 shift and go to state 34
    division                       shift and go to state 35
    exponenciacion                 shift and go to state 36
    factor                         shift and go to state 22
    operadores                     shift and go to state 40
    enteros                        shift and go to state 44

state 55

    (44) asignacion -> VARIABLE tipo_asignacion . factor
    (54) factor -> . NUMBER
    (55) factor -> . STRING
    (56) factor -> . FLOAT
    (57) factor -> . VARIABLE
    (58) factor -> . LPAR expression RPAR

    NUMBER          shift and go to state 87
    STRING          shift and go to state 42
    FLOAT           shift and go to state 88
    VARIABLE        shift and go to state 89
    LPAR            shift and go to state 90

    factor                         shift and go to state 124

state 56

    (139) callFuncion -> VARIABLE LPAR . RPAR
    (140) callFuncion -> VARIABLE LPAR . parametros RPAR
    (132) parametros -> . VARIABLE
    (133) parametros -> . VARIABLE COMMA parametros

    RPAR            shift and go to state 126
    VARIABLE        shift and go to state 125

    parametros                     shift and go to state 127

state 57

    (81) addValueHash -> VARIABLE LCOR . expression RCOR ASIGN expression
    (82) modValueHash -> VARIABLE LCOR . expression RCOR ASIGN expression
    (51) expression -> . term
    (52) expression -> . boleano
    (53) term -> . factor
    (75) boleano -> . TRUE
    (76) boleano -> . FALSE
    (54) factor -> . NUMBER
    (55) factor -> . STRING
    (56) factor -> . FLOAT
    (57) factor -> . VARIABLE
    (58) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    NUMBER          shift and go to state 87
    STRING          shift and go to state 42
    FLOAT           shift and go to state 88
    VARIABLE        shift and go to state 89
    LPAR            shift and go to state 90

    expression                     shift and go to state 128
    term                           shift and go to state 23
    boleano                        shift and go to state 24
    factor                         shift and go to state 22

state 58

    (83) deleteValueHash -> VARIABLE POINT . DELETE LPAR expression RPAR
    (95) insertArray -> VARIABLE POINT . INSERT LPAR argumentosA RPAR
    (96) deleteArray -> VARIABLE POINT . DELETE_AT LPAR NUMBER RPAR
    (102) searchStack -> VARIABLE POINT . SEARCH LPAR factor RPAR
    (103) pushStack -> VARIABLE POINT . PUSH LPAR factor RPAR
    (84) metodoBoleano -> VARIABLE POINT . VARIABLE QUESTION LPAR expression RPAR
    (85) metodoBoleano -> VARIABLE POINT . VARIABLE QUESTION LPAR RPAR

    DELETE          shift and go to state 130
    INSERT          shift and go to state 131
    DELETE_AT       shift and go to state 132
    SEARCH          shift and go to state 133
    PUSH            shift and go to state 134
    VARIABLE        shift and go to state 129


state 59

    (109) suma -> VARIABLE PLUS . NUMBER
    (46) tipo_asignacion -> PLUS . ASIGN

    NUMBER          shift and go to state 135
    ASIGN           shift and go to state 136


state 60

    (114) resta -> VARIABLE MINUS . NUMBER
    (47) tipo_asignacion -> MINUS . ASIGN

    NUMBER          shift and go to state 137
    ASIGN           shift and go to state 138


state 61

    (48) tipo_asignacion -> TIMES . ASIGN

    ASIGN           shift and go to state 139


state 62

    (49) tipo_asignacion -> DIVIDE . ASIGN

    ASIGN           shift and go to state 140


state 63

    (50) tipo_asignacion -> EXPONENTIATION . ASIGN

    ASIGN           shift and go to state 141


state 64

    (136) funciones -> encabezado repCuerpo . END
    (138) funciones -> encabezado repCuerpo . RETURN expression END

    END             shift and go to state 142
    RETURN          shift and go to state 143


state 65

    (137) funciones -> encabezado RETURN . expression END
    (51) expression -> . term
    (52) expression -> . boleano
    (53) term -> . factor
    (75) boleano -> . TRUE
    (76) boleano -> . FALSE
    (54) factor -> . NUMBER
    (55) factor -> . STRING
    (56) factor -> . FLOAT
    (57) factor -> . VARIABLE
    (58) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    NUMBER          shift and go to state 87
    STRING          shift and go to state 42
    FLOAT           shift and go to state 88
    VARIABLE        shift and go to state 89
    LPAR            shift and go to state 90

    expression                     shift and go to state 144
    term                           shift and go to state 23
    boleano                        shift and go to state 24
    factor                         shift and go to state 22

state 66

    (21) cuerpo -> expression .
    (59) comparacion -> expression . comparador expression
    (60) comparacion -> expression . comparador expression AND comparacion
    (61) comparacion -> expression . comparador expression OR comparacion
    (62) comparacion -> expression . AND expression
    (63) comparacion -> expression . OR expression
    (64) comparador -> . GREATER
    (65) comparador -> . GREATER_OR_EQUAL
    (66) comparador -> . MINOR
    (67) comparador -> . MINOR_OR_EQUAL
    (68) comparador -> . ASIGN ASIGN
    (69) comparador -> . NOT ASIGN

    VARIABLE        reduce using rule 21 (cuerpo -> expression .)
    IF              reduce using rule 21 (cuerpo -> expression .)
    PUTS            reduce using rule 21 (cuerpo -> expression .)
    FOR             reduce using rule 21 (cuerpo -> expression .)
    WHILE           reduce using rule 21 (cuerpo -> expression .)
    TRUE            reduce using rule 21 (cuerpo -> expression .)
    FALSE           reduce using rule 21 (cuerpo -> expression .)
    LPAR            reduce using rule 21 (cuerpo -> expression .)
    NUMBER          reduce using rule 21 (cuerpo -> expression .)
    STRING          reduce using rule 21 (cuerpo -> expression .)
    FLOAT           reduce using rule 21 (cuerpo -> expression .)
    MINUS           reduce using rule 21 (cuerpo -> expression .)
    END             reduce using rule 21 (cuerpo -> expression .)
    RETURN          reduce using rule 21 (cuerpo -> expression .)
    AND             shift and go to state 46
    OR              shift and go to state 47
    GREATER         shift and go to state 48
    GREATER_OR_EQUAL shift and go to state 49
    MINOR           shift and go to state 50
    MINOR_OR_EQUAL  shift and go to state 51
    ASIGN           shift and go to state 52
    NOT             shift and go to state 53

    comparador                     shift and go to state 45

state 67

    (88) repCuerpo -> cuerpo .
    (89) repCuerpo -> cuerpo . repCuerpo
    (88) repCuerpo -> . cuerpo
    (89) repCuerpo -> . cuerpo repCuerpo
    (20) cuerpo -> . asignacion
    (21) cuerpo -> . expression
    (22) cuerpo -> . comparacion
    (23) cuerpo -> . condicional
    (24) cuerpo -> . impresion
    (25) cuerpo -> . for
    (26) cuerpo -> . while
    (27) cuerpo -> . input
    (28) cuerpo -> . callFuncion
    (29) cuerpo -> . addValueHash
    (30) cuerpo -> . modValueHash
    (31) cuerpo -> . deleteValueHash
    (32) cuerpo -> . insertArray
    (33) cuerpo -> . deleteArray
    (34) cuerpo -> . pushStack
    (35) cuerpo -> . searchStack
    (36) cuerpo -> . opMatematicas
    (37) asignacion -> . VARIABLE ASIGN expression
    (38) asignacion -> . VARIABLE ASIGN comparacion
    (39) asignacion -> . VARIABLE ASIGN callFuncion
    (40) asignacion -> . VARIABLE ASIGN diccionario
    (41) asignacion -> . VARIABLE ASIGN getValueHash
    (42) asignacion -> . VARIABLE ASIGN array
    (43) asignacion -> . VARIABLE ASIGN stack
    (44) asignacion -> . VARIABLE tipo_asignacion factor
    (45) asignacion -> . VARIABLE ASIGN opMatematicas
    (51) expression -> . term
    (52) expression -> . boleano
    (59) comparacion -> . expression comparador expression
    (60) comparacion -> . expression comparador expression AND comparacion
    (61) comparacion -> . expression comparador expression OR comparacion
    (62) comparacion -> . expression AND expression
    (63) comparacion -> . expression OR expression
    (70) condicional -> . IF comparacion D_POINT repCuerpo END
    (71) condicional -> . IF comparacion D_POINT repCuerpo END cond_else
    (73) impresion -> . PUTS factor
    (97) for -> . FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END
    (98) for -> . FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for
    (86) while -> . WHILE LPAR comparacion RPAR repCuerpo END
    (87) while -> . WHILE LPAR comparacion RPAR repCuerpo END while
    (74) input -> . VARIABLE ASIGN GETS
    (139) callFuncion -> . VARIABLE LPAR RPAR
    (140) callFuncion -> . VARIABLE LPAR parametros RPAR
    (81) addValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (82) modValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (83) deleteValueHash -> . VARIABLE POINT DELETE LPAR expression RPAR
    (95) insertArray -> . VARIABLE POINT INSERT LPAR argumentosA RPAR
    (96) deleteArray -> . VARIABLE POINT DELETE_AT LPAR NUMBER RPAR
    (103) pushStack -> . VARIABLE POINT PUSH LPAR factor RPAR
    (102) searchStack -> . VARIABLE POINT SEARCH LPAR factor RPAR
    (104) opMatematicas -> . suma
    (105) opMatematicas -> . resta
    (106) opMatematicas -> . multiplicacion
    (107) opMatematicas -> . division
    (108) opMatematicas -> . exponenciacion
    (53) term -> . factor
    (75) boleano -> . TRUE
    (76) boleano -> . FALSE
    (109) suma -> . VARIABLE PLUS NUMBER
    (110) suma -> . operadores PLUS operadores
    (111) suma -> . operadores PLUS opMatematicas
    (112) suma -> . operadores PLUS LPAR operadores RPAR
    (113) suma -> . operadores PLUS LPAR opMatematicas RPAR
    (114) resta -> . VARIABLE MINUS NUMBER
    (115) resta -> . operadores MINUS operadores
    (116) resta -> . operadores MINUS opMatematicas
    (117) resta -> . operadores MINUS LPAR operadores RPAR
    (118) resta -> . operadores MINUS LPAR opMatematicas RPAR
    (119) multiplicacion -> . operadores TIMES operadores
    (120) multiplicacion -> . operadores TIMES LPAR operadores RPAR
    (121) multiplicacion -> . operadores TIMES LPAR opMatematicas RPAR
    (122) division -> . operadores DIVIDE operadores
    (123) division -> . operadores DIVIDE LPAR operadores RPAR
    (124) division -> . operadores DIVIDE LPAR opMatematicas RPAR
    (125) exponenciacion -> . operadores EXPONENTIATION operadores
    (126) exponenciacion -> . LPAR operadores RPAR EXPONENTIATION operadores
    (127) exponenciacion -> . LPAR opMatematicas RPAR EXPONENTIATION operadores
    (54) factor -> . NUMBER
    (55) factor -> . STRING
    (56) factor -> . FLOAT
    (57) factor -> . VARIABLE
    (58) factor -> . LPAR expression RPAR
    (128) operadores -> . enteros
    (129) operadores -> . FLOAT
    (130) enteros -> . NUMBER
    (131) enteros -> . MINUS NUMBER

    END             reduce using rule 88 (repCuerpo -> cuerpo .)
    RETURN          reduce using rule 88 (repCuerpo -> cuerpo .)
    VARIABLE        shift and go to state 84
    IF              shift and go to state 26
    PUTS            shift and go to state 31
    FOR             shift and go to state 29
    WHILE           shift and go to state 27
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    LPAR            shift and go to state 28
    NUMBER          shift and go to state 30
    STRING          shift and go to state 42
    FLOAT           shift and go to state 43
    MINUS           shift and go to state 41

    cuerpo                         shift and go to state 67
    repCuerpo                      shift and go to state 145
    asignacion                     shift and go to state 68
    expression                     shift and go to state 66
    comparacion                    shift and go to state 69
    condicional                    shift and go to state 70
    impresion                      shift and go to state 71
    for                            shift and go to state 72
    while                          shift and go to state 73
    input                          shift and go to state 74
    callFuncion                    shift and go to state 75
    addValueHash                   shift and go to state 76
    modValueHash                   shift and go to state 77
    deleteValueHash                shift and go to state 78
    insertArray                    shift and go to state 79
    deleteArray                    shift and go to state 80
    pushStack                      shift and go to state 81
    searchStack                    shift and go to state 82
    opMatematicas                  shift and go to state 83
    factor                         shift and go to state 22
    term                           shift and go to state 23
    boleano                        shift and go to state 24
    suma                           shift and go to state 32
    resta                          shift and go to state 33
    multiplicacion                 shift and go to state 34
    division                       shift and go to state 35
    exponenciacion                 shift and go to state 36
    operadores                     shift and go to state 40
    enteros                        shift and go to state 44

state 68

    (20) cuerpo -> asignacion .

    VARIABLE        reduce using rule 20 (cuerpo -> asignacion .)
    IF              reduce using rule 20 (cuerpo -> asignacion .)
    PUTS            reduce using rule 20 (cuerpo -> asignacion .)
    FOR             reduce using rule 20 (cuerpo -> asignacion .)
    WHILE           reduce using rule 20 (cuerpo -> asignacion .)
    TRUE            reduce using rule 20 (cuerpo -> asignacion .)
    FALSE           reduce using rule 20 (cuerpo -> asignacion .)
    LPAR            reduce using rule 20 (cuerpo -> asignacion .)
    NUMBER          reduce using rule 20 (cuerpo -> asignacion .)
    STRING          reduce using rule 20 (cuerpo -> asignacion .)
    FLOAT           reduce using rule 20 (cuerpo -> asignacion .)
    MINUS           reduce using rule 20 (cuerpo -> asignacion .)
    END             reduce using rule 20 (cuerpo -> asignacion .)
    RETURN          reduce using rule 20 (cuerpo -> asignacion .)


state 69

    (22) cuerpo -> comparacion .

    VARIABLE        reduce using rule 22 (cuerpo -> comparacion .)
    IF              reduce using rule 22 (cuerpo -> comparacion .)
    PUTS            reduce using rule 22 (cuerpo -> comparacion .)
    FOR             reduce using rule 22 (cuerpo -> comparacion .)
    WHILE           reduce using rule 22 (cuerpo -> comparacion .)
    TRUE            reduce using rule 22 (cuerpo -> comparacion .)
    FALSE           reduce using rule 22 (cuerpo -> comparacion .)
    LPAR            reduce using rule 22 (cuerpo -> comparacion .)
    NUMBER          reduce using rule 22 (cuerpo -> comparacion .)
    STRING          reduce using rule 22 (cuerpo -> comparacion .)
    FLOAT           reduce using rule 22 (cuerpo -> comparacion .)
    MINUS           reduce using rule 22 (cuerpo -> comparacion .)
    END             reduce using rule 22 (cuerpo -> comparacion .)
    RETURN          reduce using rule 22 (cuerpo -> comparacion .)


state 70

    (23) cuerpo -> condicional .

    VARIABLE        reduce using rule 23 (cuerpo -> condicional .)
    IF              reduce using rule 23 (cuerpo -> condicional .)
    PUTS            reduce using rule 23 (cuerpo -> condicional .)
    FOR             reduce using rule 23 (cuerpo -> condicional .)
    WHILE           reduce using rule 23 (cuerpo -> condicional .)
    TRUE            reduce using rule 23 (cuerpo -> condicional .)
    FALSE           reduce using rule 23 (cuerpo -> condicional .)
    LPAR            reduce using rule 23 (cuerpo -> condicional .)
    NUMBER          reduce using rule 23 (cuerpo -> condicional .)
    STRING          reduce using rule 23 (cuerpo -> condicional .)
    FLOAT           reduce using rule 23 (cuerpo -> condicional .)
    MINUS           reduce using rule 23 (cuerpo -> condicional .)
    END             reduce using rule 23 (cuerpo -> condicional .)
    RETURN          reduce using rule 23 (cuerpo -> condicional .)


state 71

    (24) cuerpo -> impresion .

    VARIABLE        reduce using rule 24 (cuerpo -> impresion .)
    IF              reduce using rule 24 (cuerpo -> impresion .)
    PUTS            reduce using rule 24 (cuerpo -> impresion .)
    FOR             reduce using rule 24 (cuerpo -> impresion .)
    WHILE           reduce using rule 24 (cuerpo -> impresion .)
    TRUE            reduce using rule 24 (cuerpo -> impresion .)
    FALSE           reduce using rule 24 (cuerpo -> impresion .)
    LPAR            reduce using rule 24 (cuerpo -> impresion .)
    NUMBER          reduce using rule 24 (cuerpo -> impresion .)
    STRING          reduce using rule 24 (cuerpo -> impresion .)
    FLOAT           reduce using rule 24 (cuerpo -> impresion .)
    MINUS           reduce using rule 24 (cuerpo -> impresion .)
    END             reduce using rule 24 (cuerpo -> impresion .)
    RETURN          reduce using rule 24 (cuerpo -> impresion .)


state 72

    (25) cuerpo -> for .

    VARIABLE        reduce using rule 25 (cuerpo -> for .)
    IF              reduce using rule 25 (cuerpo -> for .)
    PUTS            reduce using rule 25 (cuerpo -> for .)
    FOR             reduce using rule 25 (cuerpo -> for .)
    WHILE           reduce using rule 25 (cuerpo -> for .)
    TRUE            reduce using rule 25 (cuerpo -> for .)
    FALSE           reduce using rule 25 (cuerpo -> for .)
    LPAR            reduce using rule 25 (cuerpo -> for .)
    NUMBER          reduce using rule 25 (cuerpo -> for .)
    STRING          reduce using rule 25 (cuerpo -> for .)
    FLOAT           reduce using rule 25 (cuerpo -> for .)
    MINUS           reduce using rule 25 (cuerpo -> for .)
    END             reduce using rule 25 (cuerpo -> for .)
    RETURN          reduce using rule 25 (cuerpo -> for .)


state 73

    (26) cuerpo -> while .

    VARIABLE        reduce using rule 26 (cuerpo -> while .)
    IF              reduce using rule 26 (cuerpo -> while .)
    PUTS            reduce using rule 26 (cuerpo -> while .)
    FOR             reduce using rule 26 (cuerpo -> while .)
    WHILE           reduce using rule 26 (cuerpo -> while .)
    TRUE            reduce using rule 26 (cuerpo -> while .)
    FALSE           reduce using rule 26 (cuerpo -> while .)
    LPAR            reduce using rule 26 (cuerpo -> while .)
    NUMBER          reduce using rule 26 (cuerpo -> while .)
    STRING          reduce using rule 26 (cuerpo -> while .)
    FLOAT           reduce using rule 26 (cuerpo -> while .)
    MINUS           reduce using rule 26 (cuerpo -> while .)
    END             reduce using rule 26 (cuerpo -> while .)
    RETURN          reduce using rule 26 (cuerpo -> while .)


state 74

    (27) cuerpo -> input .

    VARIABLE        reduce using rule 27 (cuerpo -> input .)
    IF              reduce using rule 27 (cuerpo -> input .)
    PUTS            reduce using rule 27 (cuerpo -> input .)
    FOR             reduce using rule 27 (cuerpo -> input .)
    WHILE           reduce using rule 27 (cuerpo -> input .)
    TRUE            reduce using rule 27 (cuerpo -> input .)
    FALSE           reduce using rule 27 (cuerpo -> input .)
    LPAR            reduce using rule 27 (cuerpo -> input .)
    NUMBER          reduce using rule 27 (cuerpo -> input .)
    STRING          reduce using rule 27 (cuerpo -> input .)
    FLOAT           reduce using rule 27 (cuerpo -> input .)
    MINUS           reduce using rule 27 (cuerpo -> input .)
    END             reduce using rule 27 (cuerpo -> input .)
    RETURN          reduce using rule 27 (cuerpo -> input .)


state 75

    (28) cuerpo -> callFuncion .

    VARIABLE        reduce using rule 28 (cuerpo -> callFuncion .)
    IF              reduce using rule 28 (cuerpo -> callFuncion .)
    PUTS            reduce using rule 28 (cuerpo -> callFuncion .)
    FOR             reduce using rule 28 (cuerpo -> callFuncion .)
    WHILE           reduce using rule 28 (cuerpo -> callFuncion .)
    TRUE            reduce using rule 28 (cuerpo -> callFuncion .)
    FALSE           reduce using rule 28 (cuerpo -> callFuncion .)
    LPAR            reduce using rule 28 (cuerpo -> callFuncion .)
    NUMBER          reduce using rule 28 (cuerpo -> callFuncion .)
    STRING          reduce using rule 28 (cuerpo -> callFuncion .)
    FLOAT           reduce using rule 28 (cuerpo -> callFuncion .)
    MINUS           reduce using rule 28 (cuerpo -> callFuncion .)
    END             reduce using rule 28 (cuerpo -> callFuncion .)
    RETURN          reduce using rule 28 (cuerpo -> callFuncion .)


state 76

    (29) cuerpo -> addValueHash .

    VARIABLE        reduce using rule 29 (cuerpo -> addValueHash .)
    IF              reduce using rule 29 (cuerpo -> addValueHash .)
    PUTS            reduce using rule 29 (cuerpo -> addValueHash .)
    FOR             reduce using rule 29 (cuerpo -> addValueHash .)
    WHILE           reduce using rule 29 (cuerpo -> addValueHash .)
    TRUE            reduce using rule 29 (cuerpo -> addValueHash .)
    FALSE           reduce using rule 29 (cuerpo -> addValueHash .)
    LPAR            reduce using rule 29 (cuerpo -> addValueHash .)
    NUMBER          reduce using rule 29 (cuerpo -> addValueHash .)
    STRING          reduce using rule 29 (cuerpo -> addValueHash .)
    FLOAT           reduce using rule 29 (cuerpo -> addValueHash .)
    MINUS           reduce using rule 29 (cuerpo -> addValueHash .)
    END             reduce using rule 29 (cuerpo -> addValueHash .)
    RETURN          reduce using rule 29 (cuerpo -> addValueHash .)


state 77

    (30) cuerpo -> modValueHash .

    VARIABLE        reduce using rule 30 (cuerpo -> modValueHash .)
    IF              reduce using rule 30 (cuerpo -> modValueHash .)
    PUTS            reduce using rule 30 (cuerpo -> modValueHash .)
    FOR             reduce using rule 30 (cuerpo -> modValueHash .)
    WHILE           reduce using rule 30 (cuerpo -> modValueHash .)
    TRUE            reduce using rule 30 (cuerpo -> modValueHash .)
    FALSE           reduce using rule 30 (cuerpo -> modValueHash .)
    LPAR            reduce using rule 30 (cuerpo -> modValueHash .)
    NUMBER          reduce using rule 30 (cuerpo -> modValueHash .)
    STRING          reduce using rule 30 (cuerpo -> modValueHash .)
    FLOAT           reduce using rule 30 (cuerpo -> modValueHash .)
    MINUS           reduce using rule 30 (cuerpo -> modValueHash .)
    END             reduce using rule 30 (cuerpo -> modValueHash .)
    RETURN          reduce using rule 30 (cuerpo -> modValueHash .)


state 78

    (31) cuerpo -> deleteValueHash .

    VARIABLE        reduce using rule 31 (cuerpo -> deleteValueHash .)
    IF              reduce using rule 31 (cuerpo -> deleteValueHash .)
    PUTS            reduce using rule 31 (cuerpo -> deleteValueHash .)
    FOR             reduce using rule 31 (cuerpo -> deleteValueHash .)
    WHILE           reduce using rule 31 (cuerpo -> deleteValueHash .)
    TRUE            reduce using rule 31 (cuerpo -> deleteValueHash .)
    FALSE           reduce using rule 31 (cuerpo -> deleteValueHash .)
    LPAR            reduce using rule 31 (cuerpo -> deleteValueHash .)
    NUMBER          reduce using rule 31 (cuerpo -> deleteValueHash .)
    STRING          reduce using rule 31 (cuerpo -> deleteValueHash .)
    FLOAT           reduce using rule 31 (cuerpo -> deleteValueHash .)
    MINUS           reduce using rule 31 (cuerpo -> deleteValueHash .)
    END             reduce using rule 31 (cuerpo -> deleteValueHash .)
    RETURN          reduce using rule 31 (cuerpo -> deleteValueHash .)


state 79

    (32) cuerpo -> insertArray .

    VARIABLE        reduce using rule 32 (cuerpo -> insertArray .)
    IF              reduce using rule 32 (cuerpo -> insertArray .)
    PUTS            reduce using rule 32 (cuerpo -> insertArray .)
    FOR             reduce using rule 32 (cuerpo -> insertArray .)
    WHILE           reduce using rule 32 (cuerpo -> insertArray .)
    TRUE            reduce using rule 32 (cuerpo -> insertArray .)
    FALSE           reduce using rule 32 (cuerpo -> insertArray .)
    LPAR            reduce using rule 32 (cuerpo -> insertArray .)
    NUMBER          reduce using rule 32 (cuerpo -> insertArray .)
    STRING          reduce using rule 32 (cuerpo -> insertArray .)
    FLOAT           reduce using rule 32 (cuerpo -> insertArray .)
    MINUS           reduce using rule 32 (cuerpo -> insertArray .)
    END             reduce using rule 32 (cuerpo -> insertArray .)
    RETURN          reduce using rule 32 (cuerpo -> insertArray .)


state 80

    (33) cuerpo -> deleteArray .

    VARIABLE        reduce using rule 33 (cuerpo -> deleteArray .)
    IF              reduce using rule 33 (cuerpo -> deleteArray .)
    PUTS            reduce using rule 33 (cuerpo -> deleteArray .)
    FOR             reduce using rule 33 (cuerpo -> deleteArray .)
    WHILE           reduce using rule 33 (cuerpo -> deleteArray .)
    TRUE            reduce using rule 33 (cuerpo -> deleteArray .)
    FALSE           reduce using rule 33 (cuerpo -> deleteArray .)
    LPAR            reduce using rule 33 (cuerpo -> deleteArray .)
    NUMBER          reduce using rule 33 (cuerpo -> deleteArray .)
    STRING          reduce using rule 33 (cuerpo -> deleteArray .)
    FLOAT           reduce using rule 33 (cuerpo -> deleteArray .)
    MINUS           reduce using rule 33 (cuerpo -> deleteArray .)
    END             reduce using rule 33 (cuerpo -> deleteArray .)
    RETURN          reduce using rule 33 (cuerpo -> deleteArray .)


state 81

    (34) cuerpo -> pushStack .

    VARIABLE        reduce using rule 34 (cuerpo -> pushStack .)
    IF              reduce using rule 34 (cuerpo -> pushStack .)
    PUTS            reduce using rule 34 (cuerpo -> pushStack .)
    FOR             reduce using rule 34 (cuerpo -> pushStack .)
    WHILE           reduce using rule 34 (cuerpo -> pushStack .)
    TRUE            reduce using rule 34 (cuerpo -> pushStack .)
    FALSE           reduce using rule 34 (cuerpo -> pushStack .)
    LPAR            reduce using rule 34 (cuerpo -> pushStack .)
    NUMBER          reduce using rule 34 (cuerpo -> pushStack .)
    STRING          reduce using rule 34 (cuerpo -> pushStack .)
    FLOAT           reduce using rule 34 (cuerpo -> pushStack .)
    MINUS           reduce using rule 34 (cuerpo -> pushStack .)
    END             reduce using rule 34 (cuerpo -> pushStack .)
    RETURN          reduce using rule 34 (cuerpo -> pushStack .)


state 82

    (35) cuerpo -> searchStack .

    VARIABLE        reduce using rule 35 (cuerpo -> searchStack .)
    IF              reduce using rule 35 (cuerpo -> searchStack .)
    PUTS            reduce using rule 35 (cuerpo -> searchStack .)
    FOR             reduce using rule 35 (cuerpo -> searchStack .)
    WHILE           reduce using rule 35 (cuerpo -> searchStack .)
    TRUE            reduce using rule 35 (cuerpo -> searchStack .)
    FALSE           reduce using rule 35 (cuerpo -> searchStack .)
    LPAR            reduce using rule 35 (cuerpo -> searchStack .)
    NUMBER          reduce using rule 35 (cuerpo -> searchStack .)
    STRING          reduce using rule 35 (cuerpo -> searchStack .)
    FLOAT           reduce using rule 35 (cuerpo -> searchStack .)
    MINUS           reduce using rule 35 (cuerpo -> searchStack .)
    END             reduce using rule 35 (cuerpo -> searchStack .)
    RETURN          reduce using rule 35 (cuerpo -> searchStack .)


state 83

    (36) cuerpo -> opMatematicas .

    VARIABLE        reduce using rule 36 (cuerpo -> opMatematicas .)
    IF              reduce using rule 36 (cuerpo -> opMatematicas .)
    PUTS            reduce using rule 36 (cuerpo -> opMatematicas .)
    FOR             reduce using rule 36 (cuerpo -> opMatematicas .)
    WHILE           reduce using rule 36 (cuerpo -> opMatematicas .)
    TRUE            reduce using rule 36 (cuerpo -> opMatematicas .)
    FALSE           reduce using rule 36 (cuerpo -> opMatematicas .)
    LPAR            reduce using rule 36 (cuerpo -> opMatematicas .)
    NUMBER          reduce using rule 36 (cuerpo -> opMatematicas .)
    STRING          reduce using rule 36 (cuerpo -> opMatematicas .)
    FLOAT           reduce using rule 36 (cuerpo -> opMatematicas .)
    MINUS           reduce using rule 36 (cuerpo -> opMatematicas .)
    END             reduce using rule 36 (cuerpo -> opMatematicas .)
    RETURN          reduce using rule 36 (cuerpo -> opMatematicas .)


state 84

    (37) asignacion -> VARIABLE . ASIGN expression
    (38) asignacion -> VARIABLE . ASIGN comparacion
    (39) asignacion -> VARIABLE . ASIGN callFuncion
    (40) asignacion -> VARIABLE . ASIGN diccionario
    (41) asignacion -> VARIABLE . ASIGN getValueHash
    (42) asignacion -> VARIABLE . ASIGN array
    (43) asignacion -> VARIABLE . ASIGN stack
    (44) asignacion -> VARIABLE . tipo_asignacion factor
    (45) asignacion -> VARIABLE . ASIGN opMatematicas
    (74) input -> VARIABLE . ASIGN GETS
    (139) callFuncion -> VARIABLE . LPAR RPAR
    (140) callFuncion -> VARIABLE . LPAR parametros RPAR
    (81) addValueHash -> VARIABLE . LCOR expression RCOR ASIGN expression
    (82) modValueHash -> VARIABLE . LCOR expression RCOR ASIGN expression
    (83) deleteValueHash -> VARIABLE . POINT DELETE LPAR expression RPAR
    (95) insertArray -> VARIABLE . POINT INSERT LPAR argumentosA RPAR
    (96) deleteArray -> VARIABLE . POINT DELETE_AT LPAR NUMBER RPAR
    (103) pushStack -> VARIABLE . POINT PUSH LPAR factor RPAR
    (102) searchStack -> VARIABLE . POINT SEARCH LPAR factor RPAR
    (109) suma -> VARIABLE . PLUS NUMBER
    (114) resta -> VARIABLE . MINUS NUMBER
    (57) factor -> VARIABLE .
    (46) tipo_asignacion -> . PLUS ASIGN
    (47) tipo_asignacion -> . MINUS ASIGN
    (48) tipo_asignacion -> . TIMES ASIGN
    (49) tipo_asignacion -> . DIVIDE ASIGN
    (50) tipo_asignacion -> . EXPONENTIATION ASIGN

  ! shift/reduce conflict for ASIGN resolved as shift
  ! shift/reduce conflict for LPAR resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    ASIGN           shift and go to state 54
    LPAR            shift and go to state 56
    LCOR            shift and go to state 57
    POINT           shift and go to state 146
    PLUS            shift and go to state 59
    MINUS           shift and go to state 60
    AND             reduce using rule 57 (factor -> VARIABLE .)
    OR              reduce using rule 57 (factor -> VARIABLE .)
    GREATER         reduce using rule 57 (factor -> VARIABLE .)
    GREATER_OR_EQUAL reduce using rule 57 (factor -> VARIABLE .)
    MINOR           reduce using rule 57 (factor -> VARIABLE .)
    MINOR_OR_EQUAL  reduce using rule 57 (factor -> VARIABLE .)
    NOT             reduce using rule 57 (factor -> VARIABLE .)
    VARIABLE        reduce using rule 57 (factor -> VARIABLE .)
    IF              reduce using rule 57 (factor -> VARIABLE .)
    PUTS            reduce using rule 57 (factor -> VARIABLE .)
    FOR             reduce using rule 57 (factor -> VARIABLE .)
    WHILE           reduce using rule 57 (factor -> VARIABLE .)
    TRUE            reduce using rule 57 (factor -> VARIABLE .)
    FALSE           reduce using rule 57 (factor -> VARIABLE .)
    NUMBER          reduce using rule 57 (factor -> VARIABLE .)
    STRING          reduce using rule 57 (factor -> VARIABLE .)
    FLOAT           reduce using rule 57 (factor -> VARIABLE .)
    END             reduce using rule 57 (factor -> VARIABLE .)
    RETURN          reduce using rule 57 (factor -> VARIABLE .)
    TIMES           shift and go to state 61
    DIVIDE          shift and go to state 62
    EXPONENTIATION  shift and go to state 63

  ! ASIGN           [ reduce using rule 57 (factor -> VARIABLE .) ]
  ! LPAR            [ reduce using rule 57 (factor -> VARIABLE .) ]
  ! MINUS           [ reduce using rule 57 (factor -> VARIABLE .) ]

    tipo_asignacion                shift and go to state 55

state 85

    (70) condicional -> IF comparacion . D_POINT repCuerpo END
    (71) condicional -> IF comparacion . D_POINT repCuerpo END cond_else

    D_POINT         shift and go to state 147


state 86

    (59) comparacion -> expression . comparador expression
    (60) comparacion -> expression . comparador expression AND comparacion
    (61) comparacion -> expression . comparador expression OR comparacion
    (62) comparacion -> expression . AND expression
    (63) comparacion -> expression . OR expression
    (64) comparador -> . GREATER
    (65) comparador -> . GREATER_OR_EQUAL
    (66) comparador -> . MINOR
    (67) comparador -> . MINOR_OR_EQUAL
    (68) comparador -> . ASIGN ASIGN
    (69) comparador -> . NOT ASIGN

    AND             shift and go to state 46
    OR              shift and go to state 47
    GREATER         shift and go to state 48
    GREATER_OR_EQUAL shift and go to state 49
    MINOR           shift and go to state 50
    MINOR_OR_EQUAL  shift and go to state 51
    ASIGN           shift and go to state 52
    NOT             shift and go to state 53

    comparador                     shift and go to state 45

state 87

    (54) factor -> NUMBER .

    AND             reduce using rule 54 (factor -> NUMBER .)
    OR              reduce using rule 54 (factor -> NUMBER .)
    GREATER         reduce using rule 54 (factor -> NUMBER .)
    GREATER_OR_EQUAL reduce using rule 54 (factor -> NUMBER .)
    MINOR           reduce using rule 54 (factor -> NUMBER .)
    MINOR_OR_EQUAL  reduce using rule 54 (factor -> NUMBER .)
    ASIGN           reduce using rule 54 (factor -> NUMBER .)
    NOT             reduce using rule 54 (factor -> NUMBER .)
    $end            reduce using rule 54 (factor -> NUMBER .)
    VARIABLE        reduce using rule 54 (factor -> NUMBER .)
    IF              reduce using rule 54 (factor -> NUMBER .)
    PUTS            reduce using rule 54 (factor -> NUMBER .)
    FOR             reduce using rule 54 (factor -> NUMBER .)
    WHILE           reduce using rule 54 (factor -> NUMBER .)
    TRUE            reduce using rule 54 (factor -> NUMBER .)
    FALSE           reduce using rule 54 (factor -> NUMBER .)
    LPAR            reduce using rule 54 (factor -> NUMBER .)
    NUMBER          reduce using rule 54 (factor -> NUMBER .)
    STRING          reduce using rule 54 (factor -> NUMBER .)
    FLOAT           reduce using rule 54 (factor -> NUMBER .)
    MINUS           reduce using rule 54 (factor -> NUMBER .)
    END             reduce using rule 54 (factor -> NUMBER .)
    RETURN          reduce using rule 54 (factor -> NUMBER .)
    D_POINT         reduce using rule 54 (factor -> NUMBER .)
    RPAR            reduce using rule 54 (factor -> NUMBER .)
    RCOR            reduce using rule 54 (factor -> NUMBER .)
    COMMA           reduce using rule 54 (factor -> NUMBER .)
    RKEY            reduce using rule 54 (factor -> NUMBER .)


state 88

    (56) factor -> FLOAT .

    AND             reduce using rule 56 (factor -> FLOAT .)
    OR              reduce using rule 56 (factor -> FLOAT .)
    GREATER         reduce using rule 56 (factor -> FLOAT .)
    GREATER_OR_EQUAL reduce using rule 56 (factor -> FLOAT .)
    MINOR           reduce using rule 56 (factor -> FLOAT .)
    MINOR_OR_EQUAL  reduce using rule 56 (factor -> FLOAT .)
    ASIGN           reduce using rule 56 (factor -> FLOAT .)
    NOT             reduce using rule 56 (factor -> FLOAT .)
    $end            reduce using rule 56 (factor -> FLOAT .)
    VARIABLE        reduce using rule 56 (factor -> FLOAT .)
    IF              reduce using rule 56 (factor -> FLOAT .)
    PUTS            reduce using rule 56 (factor -> FLOAT .)
    FOR             reduce using rule 56 (factor -> FLOAT .)
    WHILE           reduce using rule 56 (factor -> FLOAT .)
    TRUE            reduce using rule 56 (factor -> FLOAT .)
    FALSE           reduce using rule 56 (factor -> FLOAT .)
    LPAR            reduce using rule 56 (factor -> FLOAT .)
    NUMBER          reduce using rule 56 (factor -> FLOAT .)
    STRING          reduce using rule 56 (factor -> FLOAT .)
    FLOAT           reduce using rule 56 (factor -> FLOAT .)
    MINUS           reduce using rule 56 (factor -> FLOAT .)
    END             reduce using rule 56 (factor -> FLOAT .)
    RETURN          reduce using rule 56 (factor -> FLOAT .)
    D_POINT         reduce using rule 56 (factor -> FLOAT .)
    RPAR            reduce using rule 56 (factor -> FLOAT .)
    RCOR            reduce using rule 56 (factor -> FLOAT .)
    COMMA           reduce using rule 56 (factor -> FLOAT .)
    RKEY            reduce using rule 56 (factor -> FLOAT .)


state 89

    (57) factor -> VARIABLE .

    AND             reduce using rule 57 (factor -> VARIABLE .)
    OR              reduce using rule 57 (factor -> VARIABLE .)
    GREATER         reduce using rule 57 (factor -> VARIABLE .)
    GREATER_OR_EQUAL reduce using rule 57 (factor -> VARIABLE .)
    MINOR           reduce using rule 57 (factor -> VARIABLE .)
    MINOR_OR_EQUAL  reduce using rule 57 (factor -> VARIABLE .)
    ASIGN           reduce using rule 57 (factor -> VARIABLE .)
    NOT             reduce using rule 57 (factor -> VARIABLE .)
    $end            reduce using rule 57 (factor -> VARIABLE .)
    VARIABLE        reduce using rule 57 (factor -> VARIABLE .)
    IF              reduce using rule 57 (factor -> VARIABLE .)
    PUTS            reduce using rule 57 (factor -> VARIABLE .)
    FOR             reduce using rule 57 (factor -> VARIABLE .)
    WHILE           reduce using rule 57 (factor -> VARIABLE .)
    TRUE            reduce using rule 57 (factor -> VARIABLE .)
    FALSE           reduce using rule 57 (factor -> VARIABLE .)
    LPAR            reduce using rule 57 (factor -> VARIABLE .)
    NUMBER          reduce using rule 57 (factor -> VARIABLE .)
    STRING          reduce using rule 57 (factor -> VARIABLE .)
    FLOAT           reduce using rule 57 (factor -> VARIABLE .)
    MINUS           reduce using rule 57 (factor -> VARIABLE .)
    END             reduce using rule 57 (factor -> VARIABLE .)
    RETURN          reduce using rule 57 (factor -> VARIABLE .)
    D_POINT         reduce using rule 57 (factor -> VARIABLE .)
    RPAR            reduce using rule 57 (factor -> VARIABLE .)
    RCOR            reduce using rule 57 (factor -> VARIABLE .)
    COMMA           reduce using rule 57 (factor -> VARIABLE .)
    RKEY            reduce using rule 57 (factor -> VARIABLE .)


state 90

    (58) factor -> LPAR . expression RPAR
    (51) expression -> . term
    (52) expression -> . boleano
    (53) term -> . factor
    (75) boleano -> . TRUE
    (76) boleano -> . FALSE
    (54) factor -> . NUMBER
    (55) factor -> . STRING
    (56) factor -> . FLOAT
    (57) factor -> . VARIABLE
    (58) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    NUMBER          shift and go to state 87
    STRING          shift and go to state 42
    FLOAT           shift and go to state 88
    VARIABLE        shift and go to state 89
    LPAR            shift and go to state 90

    expression                     shift and go to state 94
    term                           shift and go to state 23
    boleano                        shift and go to state 24
    factor                         shift and go to state 22

state 91

    (86) while -> WHILE LPAR . comparacion RPAR repCuerpo END
    (87) while -> WHILE LPAR . comparacion RPAR repCuerpo END while
    (59) comparacion -> . expression comparador expression
    (60) comparacion -> . expression comparador expression AND comparacion
    (61) comparacion -> . expression comparador expression OR comparacion
    (62) comparacion -> . expression AND expression
    (63) comparacion -> . expression OR expression
    (51) expression -> . term
    (52) expression -> . boleano
    (53) term -> . factor
    (75) boleano -> . TRUE
    (76) boleano -> . FALSE
    (54) factor -> . NUMBER
    (55) factor -> . STRING
    (56) factor -> . FLOAT
    (57) factor -> . VARIABLE
    (58) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    NUMBER          shift and go to state 87
    STRING          shift and go to state 42
    FLOAT           shift and go to state 88
    VARIABLE        shift and go to state 89
    LPAR            shift and go to state 90

    comparacion                    shift and go to state 148
    expression                     shift and go to state 86
    term                           shift and go to state 23
    boleano                        shift and go to state 24
    factor                         shift and go to state 22

state 92

    (126) exponenciacion -> LPAR operadores . RPAR EXPONENTIATION operadores
    (110) suma -> operadores . PLUS operadores
    (111) suma -> operadores . PLUS opMatematicas
    (112) suma -> operadores . PLUS LPAR operadores RPAR
    (113) suma -> operadores . PLUS LPAR opMatematicas RPAR
    (115) resta -> operadores . MINUS operadores
    (116) resta -> operadores . MINUS opMatematicas
    (117) resta -> operadores . MINUS LPAR operadores RPAR
    (118) resta -> operadores . MINUS LPAR opMatematicas RPAR
    (119) multiplicacion -> operadores . TIMES operadores
    (120) multiplicacion -> operadores . TIMES LPAR operadores RPAR
    (121) multiplicacion -> operadores . TIMES LPAR opMatematicas RPAR
    (122) division -> operadores . DIVIDE operadores
    (123) division -> operadores . DIVIDE LPAR operadores RPAR
    (124) division -> operadores . DIVIDE LPAR opMatematicas RPAR
    (125) exponenciacion -> operadores . EXPONENTIATION operadores

    RPAR            shift and go to state 149
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    TIMES           shift and go to state 103
    DIVIDE          shift and go to state 104
    EXPONENTIATION  shift and go to state 105


state 93

    (127) exponenciacion -> LPAR opMatematicas . RPAR EXPONENTIATION operadores

    RPAR            shift and go to state 150


state 94

    (58) factor -> LPAR expression . RPAR

    RPAR            shift and go to state 151


state 95

    (129) operadores -> FLOAT .
    (56) factor -> FLOAT .

  ! reduce/reduce conflict for RPAR resolved using rule 56 (factor -> FLOAT .)
    PLUS            reduce using rule 129 (operadores -> FLOAT .)
    MINUS           reduce using rule 129 (operadores -> FLOAT .)
    TIMES           reduce using rule 129 (operadores -> FLOAT .)
    DIVIDE          reduce using rule 129 (operadores -> FLOAT .)
    EXPONENTIATION  reduce using rule 129 (operadores -> FLOAT .)
    RPAR            reduce using rule 56 (factor -> FLOAT .)

  ! RPAR            [ reduce using rule 129 (operadores -> FLOAT .) ]


state 96

    (130) enteros -> NUMBER .
    (54) factor -> NUMBER .

  ! reduce/reduce conflict for RPAR resolved using rule 54 (factor -> NUMBER .)
    PLUS            reduce using rule 130 (enteros -> NUMBER .)
    MINUS           reduce using rule 130 (enteros -> NUMBER .)
    TIMES           reduce using rule 130 (enteros -> NUMBER .)
    DIVIDE          reduce using rule 130 (enteros -> NUMBER .)
    EXPONENTIATION  reduce using rule 130 (enteros -> NUMBER .)
    RPAR            reduce using rule 54 (factor -> NUMBER .)

  ! RPAR            [ reduce using rule 130 (enteros -> NUMBER .) ]


state 97

    (109) suma -> VARIABLE . PLUS NUMBER
    (114) resta -> VARIABLE . MINUS NUMBER
    (57) factor -> VARIABLE .

    PLUS            shift and go to state 152
    MINUS           shift and go to state 153
    RPAR            reduce using rule 57 (factor -> VARIABLE .)


state 98

    (97) for -> FOR VARIABLE . IN NUMBER POINT POINT NUMBER DO repCuerpo END
    (98) for -> FOR VARIABLE . IN NUMBER POINT POINT NUMBER DO repCuerpo END for

    IN              shift and go to state 154


state 99

    (73) impresion -> PUTS factor .

    $end            reduce using rule 73 (impresion -> PUTS factor .)
    VARIABLE        reduce using rule 73 (impresion -> PUTS factor .)
    IF              reduce using rule 73 (impresion -> PUTS factor .)
    PUTS            reduce using rule 73 (impresion -> PUTS factor .)
    FOR             reduce using rule 73 (impresion -> PUTS factor .)
    WHILE           reduce using rule 73 (impresion -> PUTS factor .)
    TRUE            reduce using rule 73 (impresion -> PUTS factor .)
    FALSE           reduce using rule 73 (impresion -> PUTS factor .)
    LPAR            reduce using rule 73 (impresion -> PUTS factor .)
    NUMBER          reduce using rule 73 (impresion -> PUTS factor .)
    STRING          reduce using rule 73 (impresion -> PUTS factor .)
    FLOAT           reduce using rule 73 (impresion -> PUTS factor .)
    MINUS           reduce using rule 73 (impresion -> PUTS factor .)
    END             reduce using rule 73 (impresion -> PUTS factor .)
    RETURN          reduce using rule 73 (impresion -> PUTS factor .)


state 100

    (134) encabezado -> DEF VARIABLE . LPAR RPAR
    (135) encabezado -> DEF VARIABLE . LPAR parametros RPAR

    LPAR            shift and go to state 155


state 101

    (110) suma -> operadores PLUS . operadores
    (111) suma -> operadores PLUS . opMatematicas
    (112) suma -> operadores PLUS . LPAR operadores RPAR
    (113) suma -> operadores PLUS . LPAR opMatematicas RPAR
    (128) operadores -> . enteros
    (129) operadores -> . FLOAT
    (104) opMatematicas -> . suma
    (105) opMatematicas -> . resta
    (106) opMatematicas -> . multiplicacion
    (107) opMatematicas -> . division
    (108) opMatematicas -> . exponenciacion
    (130) enteros -> . NUMBER
    (131) enteros -> . MINUS NUMBER
    (109) suma -> . VARIABLE PLUS NUMBER
    (110) suma -> . operadores PLUS operadores
    (111) suma -> . operadores PLUS opMatematicas
    (112) suma -> . operadores PLUS LPAR operadores RPAR
    (113) suma -> . operadores PLUS LPAR opMatematicas RPAR
    (114) resta -> . VARIABLE MINUS NUMBER
    (115) resta -> . operadores MINUS operadores
    (116) resta -> . operadores MINUS opMatematicas
    (117) resta -> . operadores MINUS LPAR operadores RPAR
    (118) resta -> . operadores MINUS LPAR opMatematicas RPAR
    (119) multiplicacion -> . operadores TIMES operadores
    (120) multiplicacion -> . operadores TIMES LPAR operadores RPAR
    (121) multiplicacion -> . operadores TIMES LPAR opMatematicas RPAR
    (122) division -> . operadores DIVIDE operadores
    (123) division -> . operadores DIVIDE LPAR operadores RPAR
    (124) division -> . operadores DIVIDE LPAR opMatematicas RPAR
    (125) exponenciacion -> . operadores EXPONENTIATION operadores
    (126) exponenciacion -> . LPAR operadores RPAR EXPONENTIATION operadores
    (127) exponenciacion -> . LPAR opMatematicas RPAR EXPONENTIATION operadores

    LPAR            shift and go to state 158
    FLOAT           shift and go to state 159
    NUMBER          shift and go to state 160
    MINUS           shift and go to state 41
    VARIABLE        shift and go to state 161

    operadores                     shift and go to state 156
    opMatematicas                  shift and go to state 157
    enteros                        shift and go to state 44
    suma                           shift and go to state 32
    resta                          shift and go to state 33
    multiplicacion                 shift and go to state 34
    division                       shift and go to state 35
    exponenciacion                 shift and go to state 36

state 102

    (115) resta -> operadores MINUS . operadores
    (116) resta -> operadores MINUS . opMatematicas
    (117) resta -> operadores MINUS . LPAR operadores RPAR
    (118) resta -> operadores MINUS . LPAR opMatematicas RPAR
    (128) operadores -> . enteros
    (129) operadores -> . FLOAT
    (104) opMatematicas -> . suma
    (105) opMatematicas -> . resta
    (106) opMatematicas -> . multiplicacion
    (107) opMatematicas -> . division
    (108) opMatematicas -> . exponenciacion
    (130) enteros -> . NUMBER
    (131) enteros -> . MINUS NUMBER
    (109) suma -> . VARIABLE PLUS NUMBER
    (110) suma -> . operadores PLUS operadores
    (111) suma -> . operadores PLUS opMatematicas
    (112) suma -> . operadores PLUS LPAR operadores RPAR
    (113) suma -> . operadores PLUS LPAR opMatematicas RPAR
    (114) resta -> . VARIABLE MINUS NUMBER
    (115) resta -> . operadores MINUS operadores
    (116) resta -> . operadores MINUS opMatematicas
    (117) resta -> . operadores MINUS LPAR operadores RPAR
    (118) resta -> . operadores MINUS LPAR opMatematicas RPAR
    (119) multiplicacion -> . operadores TIMES operadores
    (120) multiplicacion -> . operadores TIMES LPAR operadores RPAR
    (121) multiplicacion -> . operadores TIMES LPAR opMatematicas RPAR
    (122) division -> . operadores DIVIDE operadores
    (123) division -> . operadores DIVIDE LPAR operadores RPAR
    (124) division -> . operadores DIVIDE LPAR opMatematicas RPAR
    (125) exponenciacion -> . operadores EXPONENTIATION operadores
    (126) exponenciacion -> . LPAR operadores RPAR EXPONENTIATION operadores
    (127) exponenciacion -> . LPAR opMatematicas RPAR EXPONENTIATION operadores

    LPAR            shift and go to state 164
    FLOAT           shift and go to state 159
    NUMBER          shift and go to state 160
    MINUS           shift and go to state 41
    VARIABLE        shift and go to state 161

    operadores                     shift and go to state 162
    opMatematicas                  shift and go to state 163
    enteros                        shift and go to state 44
    suma                           shift and go to state 32
    resta                          shift and go to state 33
    multiplicacion                 shift and go to state 34
    division                       shift and go to state 35
    exponenciacion                 shift and go to state 36

state 103

    (119) multiplicacion -> operadores TIMES . operadores
    (120) multiplicacion -> operadores TIMES . LPAR operadores RPAR
    (121) multiplicacion -> operadores TIMES . LPAR opMatematicas RPAR
    (128) operadores -> . enteros
    (129) operadores -> . FLOAT
    (130) enteros -> . NUMBER
    (131) enteros -> . MINUS NUMBER

    LPAR            shift and go to state 166
    FLOAT           shift and go to state 159
    NUMBER          shift and go to state 160
    MINUS           shift and go to state 41

    operadores                     shift and go to state 165
    enteros                        shift and go to state 44

state 104

    (122) division -> operadores DIVIDE . operadores
    (123) division -> operadores DIVIDE . LPAR operadores RPAR
    (124) division -> operadores DIVIDE . LPAR opMatematicas RPAR
    (128) operadores -> . enteros
    (129) operadores -> . FLOAT
    (130) enteros -> . NUMBER
    (131) enteros -> . MINUS NUMBER

    LPAR            shift and go to state 168
    FLOAT           shift and go to state 159
    NUMBER          shift and go to state 160
    MINUS           shift and go to state 41

    operadores                     shift and go to state 167
    enteros                        shift and go to state 44

state 105

    (125) exponenciacion -> operadores EXPONENTIATION . operadores
    (128) operadores -> . enteros
    (129) operadores -> . FLOAT
    (130) enteros -> . NUMBER
    (131) enteros -> . MINUS NUMBER

    FLOAT           shift and go to state 159
    NUMBER          shift and go to state 160
    MINUS           shift and go to state 41

    operadores                     shift and go to state 169
    enteros                        shift and go to state 44

state 106

    (131) enteros -> MINUS NUMBER .

    PLUS            reduce using rule 131 (enteros -> MINUS NUMBER .)
    MINUS           reduce using rule 131 (enteros -> MINUS NUMBER .)
    TIMES           reduce using rule 131 (enteros -> MINUS NUMBER .)
    DIVIDE          reduce using rule 131 (enteros -> MINUS NUMBER .)
    EXPONENTIATION  reduce using rule 131 (enteros -> MINUS NUMBER .)
    RPAR            reduce using rule 131 (enteros -> MINUS NUMBER .)
    $end            reduce using rule 131 (enteros -> MINUS NUMBER .)
    VARIABLE        reduce using rule 131 (enteros -> MINUS NUMBER .)
    IF              reduce using rule 131 (enteros -> MINUS NUMBER .)
    PUTS            reduce using rule 131 (enteros -> MINUS NUMBER .)
    FOR             reduce using rule 131 (enteros -> MINUS NUMBER .)
    WHILE           reduce using rule 131 (enteros -> MINUS NUMBER .)
    TRUE            reduce using rule 131 (enteros -> MINUS NUMBER .)
    FALSE           reduce using rule 131 (enteros -> MINUS NUMBER .)
    LPAR            reduce using rule 131 (enteros -> MINUS NUMBER .)
    NUMBER          reduce using rule 131 (enteros -> MINUS NUMBER .)
    STRING          reduce using rule 131 (enteros -> MINUS NUMBER .)
    FLOAT           reduce using rule 131 (enteros -> MINUS NUMBER .)
    END             reduce using rule 131 (enteros -> MINUS NUMBER .)
    RETURN          reduce using rule 131 (enteros -> MINUS NUMBER .)


state 107

    (59) comparacion -> expression comparador expression .
    (60) comparacion -> expression comparador expression . AND comparacion
    (61) comparacion -> expression comparador expression . OR comparacion

    $end            reduce using rule 59 (comparacion -> expression comparador expression .)
    VARIABLE        reduce using rule 59 (comparacion -> expression comparador expression .)
    IF              reduce using rule 59 (comparacion -> expression comparador expression .)
    PUTS            reduce using rule 59 (comparacion -> expression comparador expression .)
    FOR             reduce using rule 59 (comparacion -> expression comparador expression .)
    WHILE           reduce using rule 59 (comparacion -> expression comparador expression .)
    TRUE            reduce using rule 59 (comparacion -> expression comparador expression .)
    FALSE           reduce using rule 59 (comparacion -> expression comparador expression .)
    LPAR            reduce using rule 59 (comparacion -> expression comparador expression .)
    NUMBER          reduce using rule 59 (comparacion -> expression comparador expression .)
    STRING          reduce using rule 59 (comparacion -> expression comparador expression .)
    FLOAT           reduce using rule 59 (comparacion -> expression comparador expression .)
    MINUS           reduce using rule 59 (comparacion -> expression comparador expression .)
    END             reduce using rule 59 (comparacion -> expression comparador expression .)
    RETURN          reduce using rule 59 (comparacion -> expression comparador expression .)
    D_POINT         reduce using rule 59 (comparacion -> expression comparador expression .)
    RPAR            reduce using rule 59 (comparacion -> expression comparador expression .)
    AND             shift and go to state 170
    OR              shift and go to state 171


state 108

    (62) comparacion -> expression AND expression .

    $end            reduce using rule 62 (comparacion -> expression AND expression .)
    VARIABLE        reduce using rule 62 (comparacion -> expression AND expression .)
    IF              reduce using rule 62 (comparacion -> expression AND expression .)
    PUTS            reduce using rule 62 (comparacion -> expression AND expression .)
    FOR             reduce using rule 62 (comparacion -> expression AND expression .)
    WHILE           reduce using rule 62 (comparacion -> expression AND expression .)
    TRUE            reduce using rule 62 (comparacion -> expression AND expression .)
    FALSE           reduce using rule 62 (comparacion -> expression AND expression .)
    LPAR            reduce using rule 62 (comparacion -> expression AND expression .)
    NUMBER          reduce using rule 62 (comparacion -> expression AND expression .)
    STRING          reduce using rule 62 (comparacion -> expression AND expression .)
    FLOAT           reduce using rule 62 (comparacion -> expression AND expression .)
    MINUS           reduce using rule 62 (comparacion -> expression AND expression .)
    END             reduce using rule 62 (comparacion -> expression AND expression .)
    RETURN          reduce using rule 62 (comparacion -> expression AND expression .)
    D_POINT         reduce using rule 62 (comparacion -> expression AND expression .)
    RPAR            reduce using rule 62 (comparacion -> expression AND expression .)


state 109

    (63) comparacion -> expression OR expression .

    $end            reduce using rule 63 (comparacion -> expression OR expression .)
    VARIABLE        reduce using rule 63 (comparacion -> expression OR expression .)
    IF              reduce using rule 63 (comparacion -> expression OR expression .)
    PUTS            reduce using rule 63 (comparacion -> expression OR expression .)
    FOR             reduce using rule 63 (comparacion -> expression OR expression .)
    WHILE           reduce using rule 63 (comparacion -> expression OR expression .)
    TRUE            reduce using rule 63 (comparacion -> expression OR expression .)
    FALSE           reduce using rule 63 (comparacion -> expression OR expression .)
    LPAR            reduce using rule 63 (comparacion -> expression OR expression .)
    NUMBER          reduce using rule 63 (comparacion -> expression OR expression .)
    STRING          reduce using rule 63 (comparacion -> expression OR expression .)
    FLOAT           reduce using rule 63 (comparacion -> expression OR expression .)
    MINUS           reduce using rule 63 (comparacion -> expression OR expression .)
    END             reduce using rule 63 (comparacion -> expression OR expression .)
    RETURN          reduce using rule 63 (comparacion -> expression OR expression .)
    D_POINT         reduce using rule 63 (comparacion -> expression OR expression .)
    RPAR            reduce using rule 63 (comparacion -> expression OR expression .)


state 110

    (68) comparador -> ASIGN ASIGN .

    TRUE            reduce using rule 68 (comparador -> ASIGN ASIGN .)
    FALSE           reduce using rule 68 (comparador -> ASIGN ASIGN .)
    NUMBER          reduce using rule 68 (comparador -> ASIGN ASIGN .)
    STRING          reduce using rule 68 (comparador -> ASIGN ASIGN .)
    FLOAT           reduce using rule 68 (comparador -> ASIGN ASIGN .)
    VARIABLE        reduce using rule 68 (comparador -> ASIGN ASIGN .)
    LPAR            reduce using rule 68 (comparador -> ASIGN ASIGN .)


state 111

    (69) comparador -> NOT ASIGN .

    TRUE            reduce using rule 69 (comparador -> NOT ASIGN .)
    FALSE           reduce using rule 69 (comparador -> NOT ASIGN .)
    NUMBER          reduce using rule 69 (comparador -> NOT ASIGN .)
    STRING          reduce using rule 69 (comparador -> NOT ASIGN .)
    FLOAT           reduce using rule 69 (comparador -> NOT ASIGN .)
    VARIABLE        reduce using rule 69 (comparador -> NOT ASIGN .)
    LPAR            reduce using rule 69 (comparador -> NOT ASIGN .)


state 112

    (139) callFuncion -> VARIABLE . LPAR RPAR
    (140) callFuncion -> VARIABLE . LPAR parametros RPAR
    (80) getValueHash -> VARIABLE . LCOR expression RCOR
    (109) suma -> VARIABLE . PLUS NUMBER
    (114) resta -> VARIABLE . MINUS NUMBER
    (57) factor -> VARIABLE .

  ! shift/reduce conflict for LPAR resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
    LPAR            shift and go to state 56
    LCOR            shift and go to state 172
    PLUS            shift and go to state 152
    MINUS           shift and go to state 153
    AND             reduce using rule 57 (factor -> VARIABLE .)
    OR              reduce using rule 57 (factor -> VARIABLE .)
    GREATER         reduce using rule 57 (factor -> VARIABLE .)
    GREATER_OR_EQUAL reduce using rule 57 (factor -> VARIABLE .)
    MINOR           reduce using rule 57 (factor -> VARIABLE .)
    MINOR_OR_EQUAL  reduce using rule 57 (factor -> VARIABLE .)
    ASIGN           reduce using rule 57 (factor -> VARIABLE .)
    NOT             reduce using rule 57 (factor -> VARIABLE .)
    $end            reduce using rule 57 (factor -> VARIABLE .)
    VARIABLE        reduce using rule 57 (factor -> VARIABLE .)
    IF              reduce using rule 57 (factor -> VARIABLE .)
    PUTS            reduce using rule 57 (factor -> VARIABLE .)
    FOR             reduce using rule 57 (factor -> VARIABLE .)
    WHILE           reduce using rule 57 (factor -> VARIABLE .)
    TRUE            reduce using rule 57 (factor -> VARIABLE .)
    FALSE           reduce using rule 57 (factor -> VARIABLE .)
    NUMBER          reduce using rule 57 (factor -> VARIABLE .)
    STRING          reduce using rule 57 (factor -> VARIABLE .)
    FLOAT           reduce using rule 57 (factor -> VARIABLE .)
    END             reduce using rule 57 (factor -> VARIABLE .)
    RETURN          reduce using rule 57 (factor -> VARIABLE .)

  ! LPAR            [ reduce using rule 57 (factor -> VARIABLE .) ]
  ! MINUS           [ reduce using rule 57 (factor -> VARIABLE .) ]


state 113

    (37) asignacion -> VARIABLE ASIGN expression .
    (59) comparacion -> expression . comparador expression
    (60) comparacion -> expression . comparador expression AND comparacion
    (61) comparacion -> expression . comparador expression OR comparacion
    (62) comparacion -> expression . AND expression
    (63) comparacion -> expression . OR expression
    (64) comparador -> . GREATER
    (65) comparador -> . GREATER_OR_EQUAL
    (66) comparador -> . MINOR
    (67) comparador -> . MINOR_OR_EQUAL
    (68) comparador -> . ASIGN ASIGN
    (69) comparador -> . NOT ASIGN

    $end            reduce using rule 37 (asignacion -> VARIABLE ASIGN expression .)
    VARIABLE        reduce using rule 37 (asignacion -> VARIABLE ASIGN expression .)
    IF              reduce using rule 37 (asignacion -> VARIABLE ASIGN expression .)
    PUTS            reduce using rule 37 (asignacion -> VARIABLE ASIGN expression .)
    FOR             reduce using rule 37 (asignacion -> VARIABLE ASIGN expression .)
    WHILE           reduce using rule 37 (asignacion -> VARIABLE ASIGN expression .)
    TRUE            reduce using rule 37 (asignacion -> VARIABLE ASIGN expression .)
    FALSE           reduce using rule 37 (asignacion -> VARIABLE ASIGN expression .)
    LPAR            reduce using rule 37 (asignacion -> VARIABLE ASIGN expression .)
    NUMBER          reduce using rule 37 (asignacion -> VARIABLE ASIGN expression .)
    STRING          reduce using rule 37 (asignacion -> VARIABLE ASIGN expression .)
    FLOAT           reduce using rule 37 (asignacion -> VARIABLE ASIGN expression .)
    MINUS           reduce using rule 37 (asignacion -> VARIABLE ASIGN expression .)
    END             reduce using rule 37 (asignacion -> VARIABLE ASIGN expression .)
    RETURN          reduce using rule 37 (asignacion -> VARIABLE ASIGN expression .)
    AND             shift and go to state 46
    OR              shift and go to state 47
    GREATER         shift and go to state 48
    GREATER_OR_EQUAL shift and go to state 49
    MINOR           shift and go to state 50
    MINOR_OR_EQUAL  shift and go to state 51
    ASIGN           shift and go to state 52
    NOT             shift and go to state 53

    comparador                     shift and go to state 45

state 114

    (38) asignacion -> VARIABLE ASIGN comparacion .

    $end            reduce using rule 38 (asignacion -> VARIABLE ASIGN comparacion .)
    VARIABLE        reduce using rule 38 (asignacion -> VARIABLE ASIGN comparacion .)
    IF              reduce using rule 38 (asignacion -> VARIABLE ASIGN comparacion .)
    PUTS            reduce using rule 38 (asignacion -> VARIABLE ASIGN comparacion .)
    FOR             reduce using rule 38 (asignacion -> VARIABLE ASIGN comparacion .)
    WHILE           reduce using rule 38 (asignacion -> VARIABLE ASIGN comparacion .)
    TRUE            reduce using rule 38 (asignacion -> VARIABLE ASIGN comparacion .)
    FALSE           reduce using rule 38 (asignacion -> VARIABLE ASIGN comparacion .)
    LPAR            reduce using rule 38 (asignacion -> VARIABLE ASIGN comparacion .)
    NUMBER          reduce using rule 38 (asignacion -> VARIABLE ASIGN comparacion .)
    STRING          reduce using rule 38 (asignacion -> VARIABLE ASIGN comparacion .)
    FLOAT           reduce using rule 38 (asignacion -> VARIABLE ASIGN comparacion .)
    MINUS           reduce using rule 38 (asignacion -> VARIABLE ASIGN comparacion .)
    END             reduce using rule 38 (asignacion -> VARIABLE ASIGN comparacion .)
    RETURN          reduce using rule 38 (asignacion -> VARIABLE ASIGN comparacion .)


state 115

    (39) asignacion -> VARIABLE ASIGN callFuncion .

    $end            reduce using rule 39 (asignacion -> VARIABLE ASIGN callFuncion .)
    VARIABLE        reduce using rule 39 (asignacion -> VARIABLE ASIGN callFuncion .)
    IF              reduce using rule 39 (asignacion -> VARIABLE ASIGN callFuncion .)
    PUTS            reduce using rule 39 (asignacion -> VARIABLE ASIGN callFuncion .)
    FOR             reduce using rule 39 (asignacion -> VARIABLE ASIGN callFuncion .)
    WHILE           reduce using rule 39 (asignacion -> VARIABLE ASIGN callFuncion .)
    TRUE            reduce using rule 39 (asignacion -> VARIABLE ASIGN callFuncion .)
    FALSE           reduce using rule 39 (asignacion -> VARIABLE ASIGN callFuncion .)
    LPAR            reduce using rule 39 (asignacion -> VARIABLE ASIGN callFuncion .)
    NUMBER          reduce using rule 39 (asignacion -> VARIABLE ASIGN callFuncion .)
    STRING          reduce using rule 39 (asignacion -> VARIABLE ASIGN callFuncion .)
    FLOAT           reduce using rule 39 (asignacion -> VARIABLE ASIGN callFuncion .)
    MINUS           reduce using rule 39 (asignacion -> VARIABLE ASIGN callFuncion .)
    END             reduce using rule 39 (asignacion -> VARIABLE ASIGN callFuncion .)
    RETURN          reduce using rule 39 (asignacion -> VARIABLE ASIGN callFuncion .)


state 116

    (40) asignacion -> VARIABLE ASIGN diccionario .

    $end            reduce using rule 40 (asignacion -> VARIABLE ASIGN diccionario .)
    VARIABLE        reduce using rule 40 (asignacion -> VARIABLE ASIGN diccionario .)
    IF              reduce using rule 40 (asignacion -> VARIABLE ASIGN diccionario .)
    PUTS            reduce using rule 40 (asignacion -> VARIABLE ASIGN diccionario .)
    FOR             reduce using rule 40 (asignacion -> VARIABLE ASIGN diccionario .)
    WHILE           reduce using rule 40 (asignacion -> VARIABLE ASIGN diccionario .)
    TRUE            reduce using rule 40 (asignacion -> VARIABLE ASIGN diccionario .)
    FALSE           reduce using rule 40 (asignacion -> VARIABLE ASIGN diccionario .)
    LPAR            reduce using rule 40 (asignacion -> VARIABLE ASIGN diccionario .)
    NUMBER          reduce using rule 40 (asignacion -> VARIABLE ASIGN diccionario .)
    STRING          reduce using rule 40 (asignacion -> VARIABLE ASIGN diccionario .)
    FLOAT           reduce using rule 40 (asignacion -> VARIABLE ASIGN diccionario .)
    MINUS           reduce using rule 40 (asignacion -> VARIABLE ASIGN diccionario .)
    END             reduce using rule 40 (asignacion -> VARIABLE ASIGN diccionario .)
    RETURN          reduce using rule 40 (asignacion -> VARIABLE ASIGN diccionario .)


state 117

    (41) asignacion -> VARIABLE ASIGN getValueHash .

    $end            reduce using rule 41 (asignacion -> VARIABLE ASIGN getValueHash .)
    VARIABLE        reduce using rule 41 (asignacion -> VARIABLE ASIGN getValueHash .)
    IF              reduce using rule 41 (asignacion -> VARIABLE ASIGN getValueHash .)
    PUTS            reduce using rule 41 (asignacion -> VARIABLE ASIGN getValueHash .)
    FOR             reduce using rule 41 (asignacion -> VARIABLE ASIGN getValueHash .)
    WHILE           reduce using rule 41 (asignacion -> VARIABLE ASIGN getValueHash .)
    TRUE            reduce using rule 41 (asignacion -> VARIABLE ASIGN getValueHash .)
    FALSE           reduce using rule 41 (asignacion -> VARIABLE ASIGN getValueHash .)
    LPAR            reduce using rule 41 (asignacion -> VARIABLE ASIGN getValueHash .)
    NUMBER          reduce using rule 41 (asignacion -> VARIABLE ASIGN getValueHash .)
    STRING          reduce using rule 41 (asignacion -> VARIABLE ASIGN getValueHash .)
    FLOAT           reduce using rule 41 (asignacion -> VARIABLE ASIGN getValueHash .)
    MINUS           reduce using rule 41 (asignacion -> VARIABLE ASIGN getValueHash .)
    END             reduce using rule 41 (asignacion -> VARIABLE ASIGN getValueHash .)
    RETURN          reduce using rule 41 (asignacion -> VARIABLE ASIGN getValueHash .)


state 118

    (42) asignacion -> VARIABLE ASIGN array .

    $end            reduce using rule 42 (asignacion -> VARIABLE ASIGN array .)
    VARIABLE        reduce using rule 42 (asignacion -> VARIABLE ASIGN array .)
    IF              reduce using rule 42 (asignacion -> VARIABLE ASIGN array .)
    PUTS            reduce using rule 42 (asignacion -> VARIABLE ASIGN array .)
    FOR             reduce using rule 42 (asignacion -> VARIABLE ASIGN array .)
    WHILE           reduce using rule 42 (asignacion -> VARIABLE ASIGN array .)
    TRUE            reduce using rule 42 (asignacion -> VARIABLE ASIGN array .)
    FALSE           reduce using rule 42 (asignacion -> VARIABLE ASIGN array .)
    LPAR            reduce using rule 42 (asignacion -> VARIABLE ASIGN array .)
    NUMBER          reduce using rule 42 (asignacion -> VARIABLE ASIGN array .)
    STRING          reduce using rule 42 (asignacion -> VARIABLE ASIGN array .)
    FLOAT           reduce using rule 42 (asignacion -> VARIABLE ASIGN array .)
    MINUS           reduce using rule 42 (asignacion -> VARIABLE ASIGN array .)
    END             reduce using rule 42 (asignacion -> VARIABLE ASIGN array .)
    RETURN          reduce using rule 42 (asignacion -> VARIABLE ASIGN array .)


state 119

    (43) asignacion -> VARIABLE ASIGN stack .

    $end            reduce using rule 43 (asignacion -> VARIABLE ASIGN stack .)
    VARIABLE        reduce using rule 43 (asignacion -> VARIABLE ASIGN stack .)
    IF              reduce using rule 43 (asignacion -> VARIABLE ASIGN stack .)
    PUTS            reduce using rule 43 (asignacion -> VARIABLE ASIGN stack .)
    FOR             reduce using rule 43 (asignacion -> VARIABLE ASIGN stack .)
    WHILE           reduce using rule 43 (asignacion -> VARIABLE ASIGN stack .)
    TRUE            reduce using rule 43 (asignacion -> VARIABLE ASIGN stack .)
    FALSE           reduce using rule 43 (asignacion -> VARIABLE ASIGN stack .)
    LPAR            reduce using rule 43 (asignacion -> VARIABLE ASIGN stack .)
    NUMBER          reduce using rule 43 (asignacion -> VARIABLE ASIGN stack .)
    STRING          reduce using rule 43 (asignacion -> VARIABLE ASIGN stack .)
    FLOAT           reduce using rule 43 (asignacion -> VARIABLE ASIGN stack .)
    MINUS           reduce using rule 43 (asignacion -> VARIABLE ASIGN stack .)
    END             reduce using rule 43 (asignacion -> VARIABLE ASIGN stack .)
    RETURN          reduce using rule 43 (asignacion -> VARIABLE ASIGN stack .)


state 120

    (45) asignacion -> VARIABLE ASIGN opMatematicas .

    $end            reduce using rule 45 (asignacion -> VARIABLE ASIGN opMatematicas .)
    VARIABLE        reduce using rule 45 (asignacion -> VARIABLE ASIGN opMatematicas .)
    IF              reduce using rule 45 (asignacion -> VARIABLE ASIGN opMatematicas .)
    PUTS            reduce using rule 45 (asignacion -> VARIABLE ASIGN opMatematicas .)
    FOR             reduce using rule 45 (asignacion -> VARIABLE ASIGN opMatematicas .)
    WHILE           reduce using rule 45 (asignacion -> VARIABLE ASIGN opMatematicas .)
    TRUE            reduce using rule 45 (asignacion -> VARIABLE ASIGN opMatematicas .)
    FALSE           reduce using rule 45 (asignacion -> VARIABLE ASIGN opMatematicas .)
    LPAR            reduce using rule 45 (asignacion -> VARIABLE ASIGN opMatematicas .)
    NUMBER          reduce using rule 45 (asignacion -> VARIABLE ASIGN opMatematicas .)
    STRING          reduce using rule 45 (asignacion -> VARIABLE ASIGN opMatematicas .)
    FLOAT           reduce using rule 45 (asignacion -> VARIABLE ASIGN opMatematicas .)
    MINUS           reduce using rule 45 (asignacion -> VARIABLE ASIGN opMatematicas .)
    END             reduce using rule 45 (asignacion -> VARIABLE ASIGN opMatematicas .)
    RETURN          reduce using rule 45 (asignacion -> VARIABLE ASIGN opMatematicas .)


state 121

    (74) input -> VARIABLE ASIGN GETS .

    $end            reduce using rule 74 (input -> VARIABLE ASIGN GETS .)
    VARIABLE        reduce using rule 74 (input -> VARIABLE ASIGN GETS .)
    IF              reduce using rule 74 (input -> VARIABLE ASIGN GETS .)
    PUTS            reduce using rule 74 (input -> VARIABLE ASIGN GETS .)
    FOR             reduce using rule 74 (input -> VARIABLE ASIGN GETS .)
    WHILE           reduce using rule 74 (input -> VARIABLE ASIGN GETS .)
    TRUE            reduce using rule 74 (input -> VARIABLE ASIGN GETS .)
    FALSE           reduce using rule 74 (input -> VARIABLE ASIGN GETS .)
    LPAR            reduce using rule 74 (input -> VARIABLE ASIGN GETS .)
    NUMBER          reduce using rule 74 (input -> VARIABLE ASIGN GETS .)
    STRING          reduce using rule 74 (input -> VARIABLE ASIGN GETS .)
    FLOAT           reduce using rule 74 (input -> VARIABLE ASIGN GETS .)
    MINUS           reduce using rule 74 (input -> VARIABLE ASIGN GETS .)
    END             reduce using rule 74 (input -> VARIABLE ASIGN GETS .)
    RETURN          reduce using rule 74 (input -> VARIABLE ASIGN GETS .)


state 122

    (77) diccionario -> LKEY . cuerpoHash RKEY
    (78) cuerpoHash -> . expression ASIGN GREATER expression
    (79) cuerpoHash -> . expression ASIGN GREATER expression COMMA cuerpoHash
    (51) expression -> . term
    (52) expression -> . boleano
    (53) term -> . factor
    (75) boleano -> . TRUE
    (76) boleano -> . FALSE
    (54) factor -> . NUMBER
    (55) factor -> . STRING
    (56) factor -> . FLOAT
    (57) factor -> . VARIABLE
    (58) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    NUMBER          shift and go to state 87
    STRING          shift and go to state 42
    FLOAT           shift and go to state 88
    VARIABLE        shift and go to state 89
    LPAR            shift and go to state 90

    cuerpoHash                     shift and go to state 173
    expression                     shift and go to state 174
    term                           shift and go to state 23
    boleano                        shift and go to state 24
    factor                         shift and go to state 22

state 123

    (92) array -> LCOR . parametrosA RCOR
    (93) array -> LCOR . RCOR
    (100) stack -> LCOR . parametrosA RCOR
    (101) stack -> LCOR . vacio RCOR
    (90) parametrosA -> . factor
    (91) parametrosA -> . factor COMMA parametrosA
    (99) vacio -> . 
    (54) factor -> . NUMBER
    (55) factor -> . STRING
    (56) factor -> . FLOAT
    (57) factor -> . VARIABLE
    (58) factor -> . LPAR expression RPAR

    RCOR            shift and go to state 176
                    shift and go to state 179
    NUMBER          shift and go to state 87
    STRING          shift and go to state 42
    FLOAT           shift and go to state 88
    VARIABLE        shift and go to state 89
    LPAR            shift and go to state 90

    parametrosA                    shift and go to state 175
    vacio                          shift and go to state 177
    factor                         shift and go to state 178

state 124

    (44) asignacion -> VARIABLE tipo_asignacion factor .

    $end            reduce using rule 44 (asignacion -> VARIABLE tipo_asignacion factor .)
    VARIABLE        reduce using rule 44 (asignacion -> VARIABLE tipo_asignacion factor .)
    IF              reduce using rule 44 (asignacion -> VARIABLE tipo_asignacion factor .)
    PUTS            reduce using rule 44 (asignacion -> VARIABLE tipo_asignacion factor .)
    FOR             reduce using rule 44 (asignacion -> VARIABLE tipo_asignacion factor .)
    WHILE           reduce using rule 44 (asignacion -> VARIABLE tipo_asignacion factor .)
    TRUE            reduce using rule 44 (asignacion -> VARIABLE tipo_asignacion factor .)
    FALSE           reduce using rule 44 (asignacion -> VARIABLE tipo_asignacion factor .)
    LPAR            reduce using rule 44 (asignacion -> VARIABLE tipo_asignacion factor .)
    NUMBER          reduce using rule 44 (asignacion -> VARIABLE tipo_asignacion factor .)
    STRING          reduce using rule 44 (asignacion -> VARIABLE tipo_asignacion factor .)
    FLOAT           reduce using rule 44 (asignacion -> VARIABLE tipo_asignacion factor .)
    MINUS           reduce using rule 44 (asignacion -> VARIABLE tipo_asignacion factor .)
    END             reduce using rule 44 (asignacion -> VARIABLE tipo_asignacion factor .)
    RETURN          reduce using rule 44 (asignacion -> VARIABLE tipo_asignacion factor .)


state 125

    (132) parametros -> VARIABLE .
    (133) parametros -> VARIABLE . COMMA parametros

    RPAR            reduce using rule 132 (parametros -> VARIABLE .)
    COMMA           shift and go to state 180


state 126

    (139) callFuncion -> VARIABLE LPAR RPAR .

    $end            reduce using rule 139 (callFuncion -> VARIABLE LPAR RPAR .)
    VARIABLE        reduce using rule 139 (callFuncion -> VARIABLE LPAR RPAR .)
    IF              reduce using rule 139 (callFuncion -> VARIABLE LPAR RPAR .)
    PUTS            reduce using rule 139 (callFuncion -> VARIABLE LPAR RPAR .)
    FOR             reduce using rule 139 (callFuncion -> VARIABLE LPAR RPAR .)
    WHILE           reduce using rule 139 (callFuncion -> VARIABLE LPAR RPAR .)
    TRUE            reduce using rule 139 (callFuncion -> VARIABLE LPAR RPAR .)
    FALSE           reduce using rule 139 (callFuncion -> VARIABLE LPAR RPAR .)
    LPAR            reduce using rule 139 (callFuncion -> VARIABLE LPAR RPAR .)
    NUMBER          reduce using rule 139 (callFuncion -> VARIABLE LPAR RPAR .)
    STRING          reduce using rule 139 (callFuncion -> VARIABLE LPAR RPAR .)
    FLOAT           reduce using rule 139 (callFuncion -> VARIABLE LPAR RPAR .)
    MINUS           reduce using rule 139 (callFuncion -> VARIABLE LPAR RPAR .)
    END             reduce using rule 139 (callFuncion -> VARIABLE LPAR RPAR .)
    RETURN          reduce using rule 139 (callFuncion -> VARIABLE LPAR RPAR .)


state 127

    (140) callFuncion -> VARIABLE LPAR parametros . RPAR

    RPAR            shift and go to state 181


state 128

    (81) addValueHash -> VARIABLE LCOR expression . RCOR ASIGN expression
    (82) modValueHash -> VARIABLE LCOR expression . RCOR ASIGN expression

    RCOR            shift and go to state 182


state 129

    (84) metodoBoleano -> VARIABLE POINT VARIABLE . QUESTION LPAR expression RPAR
    (85) metodoBoleano -> VARIABLE POINT VARIABLE . QUESTION LPAR RPAR

    QUESTION        shift and go to state 183


state 130

    (83) deleteValueHash -> VARIABLE POINT DELETE . LPAR expression RPAR

    LPAR            shift and go to state 184


state 131

    (95) insertArray -> VARIABLE POINT INSERT . LPAR argumentosA RPAR

    LPAR            shift and go to state 185


state 132

    (96) deleteArray -> VARIABLE POINT DELETE_AT . LPAR NUMBER RPAR

    LPAR            shift and go to state 186


state 133

    (102) searchStack -> VARIABLE POINT SEARCH . LPAR factor RPAR

    LPAR            shift and go to state 187


state 134

    (103) pushStack -> VARIABLE POINT PUSH . LPAR factor RPAR

    LPAR            shift and go to state 188


state 135

    (109) suma -> VARIABLE PLUS NUMBER .

    $end            reduce using rule 109 (suma -> VARIABLE PLUS NUMBER .)
    VARIABLE        reduce using rule 109 (suma -> VARIABLE PLUS NUMBER .)
    IF              reduce using rule 109 (suma -> VARIABLE PLUS NUMBER .)
    PUTS            reduce using rule 109 (suma -> VARIABLE PLUS NUMBER .)
    FOR             reduce using rule 109 (suma -> VARIABLE PLUS NUMBER .)
    WHILE           reduce using rule 109 (suma -> VARIABLE PLUS NUMBER .)
    TRUE            reduce using rule 109 (suma -> VARIABLE PLUS NUMBER .)
    FALSE           reduce using rule 109 (suma -> VARIABLE PLUS NUMBER .)
    LPAR            reduce using rule 109 (suma -> VARIABLE PLUS NUMBER .)
    NUMBER          reduce using rule 109 (suma -> VARIABLE PLUS NUMBER .)
    STRING          reduce using rule 109 (suma -> VARIABLE PLUS NUMBER .)
    FLOAT           reduce using rule 109 (suma -> VARIABLE PLUS NUMBER .)
    MINUS           reduce using rule 109 (suma -> VARIABLE PLUS NUMBER .)
    END             reduce using rule 109 (suma -> VARIABLE PLUS NUMBER .)
    RETURN          reduce using rule 109 (suma -> VARIABLE PLUS NUMBER .)
    RPAR            reduce using rule 109 (suma -> VARIABLE PLUS NUMBER .)


state 136

    (46) tipo_asignacion -> PLUS ASIGN .

    NUMBER          reduce using rule 46 (tipo_asignacion -> PLUS ASIGN .)
    STRING          reduce using rule 46 (tipo_asignacion -> PLUS ASIGN .)
    FLOAT           reduce using rule 46 (tipo_asignacion -> PLUS ASIGN .)
    VARIABLE        reduce using rule 46 (tipo_asignacion -> PLUS ASIGN .)
    LPAR            reduce using rule 46 (tipo_asignacion -> PLUS ASIGN .)


state 137

    (114) resta -> VARIABLE MINUS NUMBER .

    $end            reduce using rule 114 (resta -> VARIABLE MINUS NUMBER .)
    VARIABLE        reduce using rule 114 (resta -> VARIABLE MINUS NUMBER .)
    IF              reduce using rule 114 (resta -> VARIABLE MINUS NUMBER .)
    PUTS            reduce using rule 114 (resta -> VARIABLE MINUS NUMBER .)
    FOR             reduce using rule 114 (resta -> VARIABLE MINUS NUMBER .)
    WHILE           reduce using rule 114 (resta -> VARIABLE MINUS NUMBER .)
    TRUE            reduce using rule 114 (resta -> VARIABLE MINUS NUMBER .)
    FALSE           reduce using rule 114 (resta -> VARIABLE MINUS NUMBER .)
    LPAR            reduce using rule 114 (resta -> VARIABLE MINUS NUMBER .)
    NUMBER          reduce using rule 114 (resta -> VARIABLE MINUS NUMBER .)
    STRING          reduce using rule 114 (resta -> VARIABLE MINUS NUMBER .)
    FLOAT           reduce using rule 114 (resta -> VARIABLE MINUS NUMBER .)
    MINUS           reduce using rule 114 (resta -> VARIABLE MINUS NUMBER .)
    END             reduce using rule 114 (resta -> VARIABLE MINUS NUMBER .)
    RETURN          reduce using rule 114 (resta -> VARIABLE MINUS NUMBER .)
    RPAR            reduce using rule 114 (resta -> VARIABLE MINUS NUMBER .)


state 138

    (47) tipo_asignacion -> MINUS ASIGN .

    NUMBER          reduce using rule 47 (tipo_asignacion -> MINUS ASIGN .)
    STRING          reduce using rule 47 (tipo_asignacion -> MINUS ASIGN .)
    FLOAT           reduce using rule 47 (tipo_asignacion -> MINUS ASIGN .)
    VARIABLE        reduce using rule 47 (tipo_asignacion -> MINUS ASIGN .)
    LPAR            reduce using rule 47 (tipo_asignacion -> MINUS ASIGN .)


state 139

    (48) tipo_asignacion -> TIMES ASIGN .

    NUMBER          reduce using rule 48 (tipo_asignacion -> TIMES ASIGN .)
    STRING          reduce using rule 48 (tipo_asignacion -> TIMES ASIGN .)
    FLOAT           reduce using rule 48 (tipo_asignacion -> TIMES ASIGN .)
    VARIABLE        reduce using rule 48 (tipo_asignacion -> TIMES ASIGN .)
    LPAR            reduce using rule 48 (tipo_asignacion -> TIMES ASIGN .)


state 140

    (49) tipo_asignacion -> DIVIDE ASIGN .

    NUMBER          reduce using rule 49 (tipo_asignacion -> DIVIDE ASIGN .)
    STRING          reduce using rule 49 (tipo_asignacion -> DIVIDE ASIGN .)
    FLOAT           reduce using rule 49 (tipo_asignacion -> DIVIDE ASIGN .)
    VARIABLE        reduce using rule 49 (tipo_asignacion -> DIVIDE ASIGN .)
    LPAR            reduce using rule 49 (tipo_asignacion -> DIVIDE ASIGN .)


state 141

    (50) tipo_asignacion -> EXPONENTIATION ASIGN .

    NUMBER          reduce using rule 50 (tipo_asignacion -> EXPONENTIATION ASIGN .)
    STRING          reduce using rule 50 (tipo_asignacion -> EXPONENTIATION ASIGN .)
    FLOAT           reduce using rule 50 (tipo_asignacion -> EXPONENTIATION ASIGN .)
    VARIABLE        reduce using rule 50 (tipo_asignacion -> EXPONENTIATION ASIGN .)
    LPAR            reduce using rule 50 (tipo_asignacion -> EXPONENTIATION ASIGN .)


state 142

    (136) funciones -> encabezado repCuerpo END .

    $end            reduce using rule 136 (funciones -> encabezado repCuerpo END .)


state 143

    (138) funciones -> encabezado repCuerpo RETURN . expression END
    (51) expression -> . term
    (52) expression -> . boleano
    (53) term -> . factor
    (75) boleano -> . TRUE
    (76) boleano -> . FALSE
    (54) factor -> . NUMBER
    (55) factor -> . STRING
    (56) factor -> . FLOAT
    (57) factor -> . VARIABLE
    (58) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    NUMBER          shift and go to state 87
    STRING          shift and go to state 42
    FLOAT           shift and go to state 88
    VARIABLE        shift and go to state 89
    LPAR            shift and go to state 90

    expression                     shift and go to state 189
    term                           shift and go to state 23
    boleano                        shift and go to state 24
    factor                         shift and go to state 22

state 144

    (137) funciones -> encabezado RETURN expression . END

    END             shift and go to state 190


state 145

    (89) repCuerpo -> cuerpo repCuerpo .

    END             reduce using rule 89 (repCuerpo -> cuerpo repCuerpo .)
    RETURN          reduce using rule 89 (repCuerpo -> cuerpo repCuerpo .)


state 146

    (83) deleteValueHash -> VARIABLE POINT . DELETE LPAR expression RPAR
    (95) insertArray -> VARIABLE POINT . INSERT LPAR argumentosA RPAR
    (96) deleteArray -> VARIABLE POINT . DELETE_AT LPAR NUMBER RPAR
    (103) pushStack -> VARIABLE POINT . PUSH LPAR factor RPAR
    (102) searchStack -> VARIABLE POINT . SEARCH LPAR factor RPAR

    DELETE          shift and go to state 130
    INSERT          shift and go to state 131
    DELETE_AT       shift and go to state 132
    PUSH            shift and go to state 134
    SEARCH          shift and go to state 133


state 147

    (70) condicional -> IF comparacion D_POINT . repCuerpo END
    (71) condicional -> IF comparacion D_POINT . repCuerpo END cond_else
    (88) repCuerpo -> . cuerpo
    (89) repCuerpo -> . cuerpo repCuerpo
    (20) cuerpo -> . asignacion
    (21) cuerpo -> . expression
    (22) cuerpo -> . comparacion
    (23) cuerpo -> . condicional
    (24) cuerpo -> . impresion
    (25) cuerpo -> . for
    (26) cuerpo -> . while
    (27) cuerpo -> . input
    (28) cuerpo -> . callFuncion
    (29) cuerpo -> . addValueHash
    (30) cuerpo -> . modValueHash
    (31) cuerpo -> . deleteValueHash
    (32) cuerpo -> . insertArray
    (33) cuerpo -> . deleteArray
    (34) cuerpo -> . pushStack
    (35) cuerpo -> . searchStack
    (36) cuerpo -> . opMatematicas
    (37) asignacion -> . VARIABLE ASIGN expression
    (38) asignacion -> . VARIABLE ASIGN comparacion
    (39) asignacion -> . VARIABLE ASIGN callFuncion
    (40) asignacion -> . VARIABLE ASIGN diccionario
    (41) asignacion -> . VARIABLE ASIGN getValueHash
    (42) asignacion -> . VARIABLE ASIGN array
    (43) asignacion -> . VARIABLE ASIGN stack
    (44) asignacion -> . VARIABLE tipo_asignacion factor
    (45) asignacion -> . VARIABLE ASIGN opMatematicas
    (51) expression -> . term
    (52) expression -> . boleano
    (59) comparacion -> . expression comparador expression
    (60) comparacion -> . expression comparador expression AND comparacion
    (61) comparacion -> . expression comparador expression OR comparacion
    (62) comparacion -> . expression AND expression
    (63) comparacion -> . expression OR expression
    (70) condicional -> . IF comparacion D_POINT repCuerpo END
    (71) condicional -> . IF comparacion D_POINT repCuerpo END cond_else
    (73) impresion -> . PUTS factor
    (97) for -> . FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END
    (98) for -> . FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for
    (86) while -> . WHILE LPAR comparacion RPAR repCuerpo END
    (87) while -> . WHILE LPAR comparacion RPAR repCuerpo END while
    (74) input -> . VARIABLE ASIGN GETS
    (139) callFuncion -> . VARIABLE LPAR RPAR
    (140) callFuncion -> . VARIABLE LPAR parametros RPAR
    (81) addValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (82) modValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (83) deleteValueHash -> . VARIABLE POINT DELETE LPAR expression RPAR
    (95) insertArray -> . VARIABLE POINT INSERT LPAR argumentosA RPAR
    (96) deleteArray -> . VARIABLE POINT DELETE_AT LPAR NUMBER RPAR
    (103) pushStack -> . VARIABLE POINT PUSH LPAR factor RPAR
    (102) searchStack -> . VARIABLE POINT SEARCH LPAR factor RPAR
    (104) opMatematicas -> . suma
    (105) opMatematicas -> . resta
    (106) opMatematicas -> . multiplicacion
    (107) opMatematicas -> . division
    (108) opMatematicas -> . exponenciacion
    (53) term -> . factor
    (75) boleano -> . TRUE
    (76) boleano -> . FALSE
    (109) suma -> . VARIABLE PLUS NUMBER
    (110) suma -> . operadores PLUS operadores
    (111) suma -> . operadores PLUS opMatematicas
    (112) suma -> . operadores PLUS LPAR operadores RPAR
    (113) suma -> . operadores PLUS LPAR opMatematicas RPAR
    (114) resta -> . VARIABLE MINUS NUMBER
    (115) resta -> . operadores MINUS operadores
    (116) resta -> . operadores MINUS opMatematicas
    (117) resta -> . operadores MINUS LPAR operadores RPAR
    (118) resta -> . operadores MINUS LPAR opMatematicas RPAR
    (119) multiplicacion -> . operadores TIMES operadores
    (120) multiplicacion -> . operadores TIMES LPAR operadores RPAR
    (121) multiplicacion -> . operadores TIMES LPAR opMatematicas RPAR
    (122) division -> . operadores DIVIDE operadores
    (123) division -> . operadores DIVIDE LPAR operadores RPAR
    (124) division -> . operadores DIVIDE LPAR opMatematicas RPAR
    (125) exponenciacion -> . operadores EXPONENTIATION operadores
    (126) exponenciacion -> . LPAR operadores RPAR EXPONENTIATION operadores
    (127) exponenciacion -> . LPAR opMatematicas RPAR EXPONENTIATION operadores
    (54) factor -> . NUMBER
    (55) factor -> . STRING
    (56) factor -> . FLOAT
    (57) factor -> . VARIABLE
    (58) factor -> . LPAR expression RPAR
    (128) operadores -> . enteros
    (129) operadores -> . FLOAT
    (130) enteros -> . NUMBER
    (131) enteros -> . MINUS NUMBER

    VARIABLE        shift and go to state 84
    IF              shift and go to state 26
    PUTS            shift and go to state 31
    FOR             shift and go to state 29
    WHILE           shift and go to state 27
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    LPAR            shift and go to state 28
    NUMBER          shift and go to state 30
    STRING          shift and go to state 42
    FLOAT           shift and go to state 43
    MINUS           shift and go to state 41

    comparacion                    shift and go to state 69
    repCuerpo                      shift and go to state 191
    cuerpo                         shift and go to state 67
    asignacion                     shift and go to state 68
    expression                     shift and go to state 66
    condicional                    shift and go to state 70
    impresion                      shift and go to state 71
    for                            shift and go to state 72
    while                          shift and go to state 73
    input                          shift and go to state 74
    callFuncion                    shift and go to state 75
    addValueHash                   shift and go to state 76
    modValueHash                   shift and go to state 77
    deleteValueHash                shift and go to state 78
    insertArray                    shift and go to state 79
    deleteArray                    shift and go to state 80
    pushStack                      shift and go to state 81
    searchStack                    shift and go to state 82
    opMatematicas                  shift and go to state 83
    factor                         shift and go to state 22
    term                           shift and go to state 23
    boleano                        shift and go to state 24
    suma                           shift and go to state 32
    resta                          shift and go to state 33
    multiplicacion                 shift and go to state 34
    division                       shift and go to state 35
    exponenciacion                 shift and go to state 36
    operadores                     shift and go to state 40
    enteros                        shift and go to state 44

state 148

    (86) while -> WHILE LPAR comparacion . RPAR repCuerpo END
    (87) while -> WHILE LPAR comparacion . RPAR repCuerpo END while

    RPAR            shift and go to state 192


state 149

    (126) exponenciacion -> LPAR operadores RPAR . EXPONENTIATION operadores

    EXPONENTIATION  shift and go to state 193


state 150

    (127) exponenciacion -> LPAR opMatematicas RPAR . EXPONENTIATION operadores

    EXPONENTIATION  shift and go to state 194


state 151

    (58) factor -> LPAR expression RPAR .

    AND             reduce using rule 58 (factor -> LPAR expression RPAR .)
    OR              reduce using rule 58 (factor -> LPAR expression RPAR .)
    GREATER         reduce using rule 58 (factor -> LPAR expression RPAR .)
    GREATER_OR_EQUAL reduce using rule 58 (factor -> LPAR expression RPAR .)
    MINOR           reduce using rule 58 (factor -> LPAR expression RPAR .)
    MINOR_OR_EQUAL  reduce using rule 58 (factor -> LPAR expression RPAR .)
    ASIGN           reduce using rule 58 (factor -> LPAR expression RPAR .)
    NOT             reduce using rule 58 (factor -> LPAR expression RPAR .)
    $end            reduce using rule 58 (factor -> LPAR expression RPAR .)
    VARIABLE        reduce using rule 58 (factor -> LPAR expression RPAR .)
    IF              reduce using rule 58 (factor -> LPAR expression RPAR .)
    PUTS            reduce using rule 58 (factor -> LPAR expression RPAR .)
    FOR             reduce using rule 58 (factor -> LPAR expression RPAR .)
    WHILE           reduce using rule 58 (factor -> LPAR expression RPAR .)
    TRUE            reduce using rule 58 (factor -> LPAR expression RPAR .)
    FALSE           reduce using rule 58 (factor -> LPAR expression RPAR .)
    LPAR            reduce using rule 58 (factor -> LPAR expression RPAR .)
    NUMBER          reduce using rule 58 (factor -> LPAR expression RPAR .)
    STRING          reduce using rule 58 (factor -> LPAR expression RPAR .)
    FLOAT           reduce using rule 58 (factor -> LPAR expression RPAR .)
    MINUS           reduce using rule 58 (factor -> LPAR expression RPAR .)
    END             reduce using rule 58 (factor -> LPAR expression RPAR .)
    RETURN          reduce using rule 58 (factor -> LPAR expression RPAR .)
    RPAR            reduce using rule 58 (factor -> LPAR expression RPAR .)
    D_POINT         reduce using rule 58 (factor -> LPAR expression RPAR .)
    RCOR            reduce using rule 58 (factor -> LPAR expression RPAR .)
    COMMA           reduce using rule 58 (factor -> LPAR expression RPAR .)
    RKEY            reduce using rule 58 (factor -> LPAR expression RPAR .)


state 152

    (109) suma -> VARIABLE PLUS . NUMBER

    NUMBER          shift and go to state 135


state 153

    (114) resta -> VARIABLE MINUS . NUMBER

    NUMBER          shift and go to state 137


state 154

    (97) for -> FOR VARIABLE IN . NUMBER POINT POINT NUMBER DO repCuerpo END
    (98) for -> FOR VARIABLE IN . NUMBER POINT POINT NUMBER DO repCuerpo END for

    NUMBER          shift and go to state 195


state 155

    (134) encabezado -> DEF VARIABLE LPAR . RPAR
    (135) encabezado -> DEF VARIABLE LPAR . parametros RPAR
    (132) parametros -> . VARIABLE
    (133) parametros -> . VARIABLE COMMA parametros

    RPAR            shift and go to state 196
    VARIABLE        shift and go to state 125

    parametros                     shift and go to state 197

state 156

    (110) suma -> operadores PLUS operadores .
    (110) suma -> operadores . PLUS operadores
    (111) suma -> operadores . PLUS opMatematicas
    (112) suma -> operadores . PLUS LPAR operadores RPAR
    (113) suma -> operadores . PLUS LPAR opMatematicas RPAR
    (115) resta -> operadores . MINUS operadores
    (116) resta -> operadores . MINUS opMatematicas
    (117) resta -> operadores . MINUS LPAR operadores RPAR
    (118) resta -> operadores . MINUS LPAR opMatematicas RPAR
    (119) multiplicacion -> operadores . TIMES operadores
    (120) multiplicacion -> operadores . TIMES LPAR operadores RPAR
    (121) multiplicacion -> operadores . TIMES LPAR opMatematicas RPAR
    (122) division -> operadores . DIVIDE operadores
    (123) division -> operadores . DIVIDE LPAR operadores RPAR
    (124) division -> operadores . DIVIDE LPAR opMatematicas RPAR
    (125) exponenciacion -> operadores . EXPONENTIATION operadores

  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 110 (suma -> operadores PLUS operadores .)
    VARIABLE        reduce using rule 110 (suma -> operadores PLUS operadores .)
    IF              reduce using rule 110 (suma -> operadores PLUS operadores .)
    PUTS            reduce using rule 110 (suma -> operadores PLUS operadores .)
    FOR             reduce using rule 110 (suma -> operadores PLUS operadores .)
    WHILE           reduce using rule 110 (suma -> operadores PLUS operadores .)
    TRUE            reduce using rule 110 (suma -> operadores PLUS operadores .)
    FALSE           reduce using rule 110 (suma -> operadores PLUS operadores .)
    LPAR            reduce using rule 110 (suma -> operadores PLUS operadores .)
    NUMBER          reduce using rule 110 (suma -> operadores PLUS operadores .)
    STRING          reduce using rule 110 (suma -> operadores PLUS operadores .)
    FLOAT           reduce using rule 110 (suma -> operadores PLUS operadores .)
    END             reduce using rule 110 (suma -> operadores PLUS operadores .)
    RETURN          reduce using rule 110 (suma -> operadores PLUS operadores .)
    RPAR            reduce using rule 110 (suma -> operadores PLUS operadores .)
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    TIMES           shift and go to state 103
    DIVIDE          shift and go to state 104
    EXPONENTIATION  shift and go to state 105

  ! MINUS           [ reduce using rule 110 (suma -> operadores PLUS operadores .) ]


state 157

    (111) suma -> operadores PLUS opMatematicas .

    $end            reduce using rule 111 (suma -> operadores PLUS opMatematicas .)
    VARIABLE        reduce using rule 111 (suma -> operadores PLUS opMatematicas .)
    IF              reduce using rule 111 (suma -> operadores PLUS opMatematicas .)
    PUTS            reduce using rule 111 (suma -> operadores PLUS opMatematicas .)
    FOR             reduce using rule 111 (suma -> operadores PLUS opMatematicas .)
    WHILE           reduce using rule 111 (suma -> operadores PLUS opMatematicas .)
    TRUE            reduce using rule 111 (suma -> operadores PLUS opMatematicas .)
    FALSE           reduce using rule 111 (suma -> operadores PLUS opMatematicas .)
    LPAR            reduce using rule 111 (suma -> operadores PLUS opMatematicas .)
    NUMBER          reduce using rule 111 (suma -> operadores PLUS opMatematicas .)
    STRING          reduce using rule 111 (suma -> operadores PLUS opMatematicas .)
    FLOAT           reduce using rule 111 (suma -> operadores PLUS opMatematicas .)
    MINUS           reduce using rule 111 (suma -> operadores PLUS opMatematicas .)
    END             reduce using rule 111 (suma -> operadores PLUS opMatematicas .)
    RETURN          reduce using rule 111 (suma -> operadores PLUS opMatematicas .)
    RPAR            reduce using rule 111 (suma -> operadores PLUS opMatematicas .)


state 158

    (112) suma -> operadores PLUS LPAR . operadores RPAR
    (113) suma -> operadores PLUS LPAR . opMatematicas RPAR
    (126) exponenciacion -> LPAR . operadores RPAR EXPONENTIATION operadores
    (127) exponenciacion -> LPAR . opMatematicas RPAR EXPONENTIATION operadores
    (128) operadores -> . enteros
    (129) operadores -> . FLOAT
    (104) opMatematicas -> . suma
    (105) opMatematicas -> . resta
    (106) opMatematicas -> . multiplicacion
    (107) opMatematicas -> . division
    (108) opMatematicas -> . exponenciacion
    (130) enteros -> . NUMBER
    (131) enteros -> . MINUS NUMBER
    (109) suma -> . VARIABLE PLUS NUMBER
    (110) suma -> . operadores PLUS operadores
    (111) suma -> . operadores PLUS opMatematicas
    (112) suma -> . operadores PLUS LPAR operadores RPAR
    (113) suma -> . operadores PLUS LPAR opMatematicas RPAR
    (114) resta -> . VARIABLE MINUS NUMBER
    (115) resta -> . operadores MINUS operadores
    (116) resta -> . operadores MINUS opMatematicas
    (117) resta -> . operadores MINUS LPAR operadores RPAR
    (118) resta -> . operadores MINUS LPAR opMatematicas RPAR
    (119) multiplicacion -> . operadores TIMES operadores
    (120) multiplicacion -> . operadores TIMES LPAR operadores RPAR
    (121) multiplicacion -> . operadores TIMES LPAR opMatematicas RPAR
    (122) division -> . operadores DIVIDE operadores
    (123) division -> . operadores DIVIDE LPAR operadores RPAR
    (124) division -> . operadores DIVIDE LPAR opMatematicas RPAR
    (125) exponenciacion -> . operadores EXPONENTIATION operadores
    (126) exponenciacion -> . LPAR operadores RPAR EXPONENTIATION operadores
    (127) exponenciacion -> . LPAR opMatematicas RPAR EXPONENTIATION operadores

    FLOAT           shift and go to state 159
    NUMBER          shift and go to state 160
    MINUS           shift and go to state 41
    VARIABLE        shift and go to state 161
    LPAR            shift and go to state 199

    operadores                     shift and go to state 198
    opMatematicas                  shift and go to state 200
    enteros                        shift and go to state 44
    suma                           shift and go to state 32
    resta                          shift and go to state 33
    multiplicacion                 shift and go to state 34
    division                       shift and go to state 35
    exponenciacion                 shift and go to state 36

state 159

    (129) operadores -> FLOAT .

    PLUS            reduce using rule 129 (operadores -> FLOAT .)
    MINUS           reduce using rule 129 (operadores -> FLOAT .)
    TIMES           reduce using rule 129 (operadores -> FLOAT .)
    DIVIDE          reduce using rule 129 (operadores -> FLOAT .)
    EXPONENTIATION  reduce using rule 129 (operadores -> FLOAT .)
    $end            reduce using rule 129 (operadores -> FLOAT .)
    VARIABLE        reduce using rule 129 (operadores -> FLOAT .)
    IF              reduce using rule 129 (operadores -> FLOAT .)
    PUTS            reduce using rule 129 (operadores -> FLOAT .)
    FOR             reduce using rule 129 (operadores -> FLOAT .)
    WHILE           reduce using rule 129 (operadores -> FLOAT .)
    TRUE            reduce using rule 129 (operadores -> FLOAT .)
    FALSE           reduce using rule 129 (operadores -> FLOAT .)
    LPAR            reduce using rule 129 (operadores -> FLOAT .)
    NUMBER          reduce using rule 129 (operadores -> FLOAT .)
    STRING          reduce using rule 129 (operadores -> FLOAT .)
    FLOAT           reduce using rule 129 (operadores -> FLOAT .)
    END             reduce using rule 129 (operadores -> FLOAT .)
    RETURN          reduce using rule 129 (operadores -> FLOAT .)
    RPAR            reduce using rule 129 (operadores -> FLOAT .)


state 160

    (130) enteros -> NUMBER .

    PLUS            reduce using rule 130 (enteros -> NUMBER .)
    MINUS           reduce using rule 130 (enteros -> NUMBER .)
    TIMES           reduce using rule 130 (enteros -> NUMBER .)
    DIVIDE          reduce using rule 130 (enteros -> NUMBER .)
    EXPONENTIATION  reduce using rule 130 (enteros -> NUMBER .)
    $end            reduce using rule 130 (enteros -> NUMBER .)
    VARIABLE        reduce using rule 130 (enteros -> NUMBER .)
    IF              reduce using rule 130 (enteros -> NUMBER .)
    PUTS            reduce using rule 130 (enteros -> NUMBER .)
    FOR             reduce using rule 130 (enteros -> NUMBER .)
    WHILE           reduce using rule 130 (enteros -> NUMBER .)
    TRUE            reduce using rule 130 (enteros -> NUMBER .)
    FALSE           reduce using rule 130 (enteros -> NUMBER .)
    LPAR            reduce using rule 130 (enteros -> NUMBER .)
    NUMBER          reduce using rule 130 (enteros -> NUMBER .)
    STRING          reduce using rule 130 (enteros -> NUMBER .)
    FLOAT           reduce using rule 130 (enteros -> NUMBER .)
    END             reduce using rule 130 (enteros -> NUMBER .)
    RETURN          reduce using rule 130 (enteros -> NUMBER .)
    RPAR            reduce using rule 130 (enteros -> NUMBER .)


state 161

    (109) suma -> VARIABLE . PLUS NUMBER
    (114) resta -> VARIABLE . MINUS NUMBER

    PLUS            shift and go to state 152
    MINUS           shift and go to state 153


state 162

    (115) resta -> operadores MINUS operadores .
    (110) suma -> operadores . PLUS operadores
    (111) suma -> operadores . PLUS opMatematicas
    (112) suma -> operadores . PLUS LPAR operadores RPAR
    (113) suma -> operadores . PLUS LPAR opMatematicas RPAR
    (115) resta -> operadores . MINUS operadores
    (116) resta -> operadores . MINUS opMatematicas
    (117) resta -> operadores . MINUS LPAR operadores RPAR
    (118) resta -> operadores . MINUS LPAR opMatematicas RPAR
    (119) multiplicacion -> operadores . TIMES operadores
    (120) multiplicacion -> operadores . TIMES LPAR operadores RPAR
    (121) multiplicacion -> operadores . TIMES LPAR opMatematicas RPAR
    (122) division -> operadores . DIVIDE operadores
    (123) division -> operadores . DIVIDE LPAR operadores RPAR
    (124) division -> operadores . DIVIDE LPAR opMatematicas RPAR
    (125) exponenciacion -> operadores . EXPONENTIATION operadores

  ! shift/reduce conflict for MINUS resolved as shift
    $end            reduce using rule 115 (resta -> operadores MINUS operadores .)
    VARIABLE        reduce using rule 115 (resta -> operadores MINUS operadores .)
    IF              reduce using rule 115 (resta -> operadores MINUS operadores .)
    PUTS            reduce using rule 115 (resta -> operadores MINUS operadores .)
    FOR             reduce using rule 115 (resta -> operadores MINUS operadores .)
    WHILE           reduce using rule 115 (resta -> operadores MINUS operadores .)
    TRUE            reduce using rule 115 (resta -> operadores MINUS operadores .)
    FALSE           reduce using rule 115 (resta -> operadores MINUS operadores .)
    LPAR            reduce using rule 115 (resta -> operadores MINUS operadores .)
    NUMBER          reduce using rule 115 (resta -> operadores MINUS operadores .)
    STRING          reduce using rule 115 (resta -> operadores MINUS operadores .)
    FLOAT           reduce using rule 115 (resta -> operadores MINUS operadores .)
    END             reduce using rule 115 (resta -> operadores MINUS operadores .)
    RETURN          reduce using rule 115 (resta -> operadores MINUS operadores .)
    RPAR            reduce using rule 115 (resta -> operadores MINUS operadores .)
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    TIMES           shift and go to state 103
    DIVIDE          shift and go to state 104
    EXPONENTIATION  shift and go to state 105

  ! MINUS           [ reduce using rule 115 (resta -> operadores MINUS operadores .) ]


state 163

    (116) resta -> operadores MINUS opMatematicas .

    $end            reduce using rule 116 (resta -> operadores MINUS opMatematicas .)
    VARIABLE        reduce using rule 116 (resta -> operadores MINUS opMatematicas .)
    IF              reduce using rule 116 (resta -> operadores MINUS opMatematicas .)
    PUTS            reduce using rule 116 (resta -> operadores MINUS opMatematicas .)
    FOR             reduce using rule 116 (resta -> operadores MINUS opMatematicas .)
    WHILE           reduce using rule 116 (resta -> operadores MINUS opMatematicas .)
    TRUE            reduce using rule 116 (resta -> operadores MINUS opMatematicas .)
    FALSE           reduce using rule 116 (resta -> operadores MINUS opMatematicas .)
    LPAR            reduce using rule 116 (resta -> operadores MINUS opMatematicas .)
    NUMBER          reduce using rule 116 (resta -> operadores MINUS opMatematicas .)
    STRING          reduce using rule 116 (resta -> operadores MINUS opMatematicas .)
    FLOAT           reduce using rule 116 (resta -> operadores MINUS opMatematicas .)
    MINUS           reduce using rule 116 (resta -> operadores MINUS opMatematicas .)
    END             reduce using rule 116 (resta -> operadores MINUS opMatematicas .)
    RETURN          reduce using rule 116 (resta -> operadores MINUS opMatematicas .)
    RPAR            reduce using rule 116 (resta -> operadores MINUS opMatematicas .)


state 164

    (117) resta -> operadores MINUS LPAR . operadores RPAR
    (118) resta -> operadores MINUS LPAR . opMatematicas RPAR
    (126) exponenciacion -> LPAR . operadores RPAR EXPONENTIATION operadores
    (127) exponenciacion -> LPAR . opMatematicas RPAR EXPONENTIATION operadores
    (128) operadores -> . enteros
    (129) operadores -> . FLOAT
    (104) opMatematicas -> . suma
    (105) opMatematicas -> . resta
    (106) opMatematicas -> . multiplicacion
    (107) opMatematicas -> . division
    (108) opMatematicas -> . exponenciacion
    (130) enteros -> . NUMBER
    (131) enteros -> . MINUS NUMBER
    (109) suma -> . VARIABLE PLUS NUMBER
    (110) suma -> . operadores PLUS operadores
    (111) suma -> . operadores PLUS opMatematicas
    (112) suma -> . operadores PLUS LPAR operadores RPAR
    (113) suma -> . operadores PLUS LPAR opMatematicas RPAR
    (114) resta -> . VARIABLE MINUS NUMBER
    (115) resta -> . operadores MINUS operadores
    (116) resta -> . operadores MINUS opMatematicas
    (117) resta -> . operadores MINUS LPAR operadores RPAR
    (118) resta -> . operadores MINUS LPAR opMatematicas RPAR
    (119) multiplicacion -> . operadores TIMES operadores
    (120) multiplicacion -> . operadores TIMES LPAR operadores RPAR
    (121) multiplicacion -> . operadores TIMES LPAR opMatematicas RPAR
    (122) division -> . operadores DIVIDE operadores
    (123) division -> . operadores DIVIDE LPAR operadores RPAR
    (124) division -> . operadores DIVIDE LPAR opMatematicas RPAR
    (125) exponenciacion -> . operadores EXPONENTIATION operadores
    (126) exponenciacion -> . LPAR operadores RPAR EXPONENTIATION operadores
    (127) exponenciacion -> . LPAR opMatematicas RPAR EXPONENTIATION operadores

    FLOAT           shift and go to state 159
    NUMBER          shift and go to state 160
    MINUS           shift and go to state 41
    VARIABLE        shift and go to state 161
    LPAR            shift and go to state 199

    operadores                     shift and go to state 201
    opMatematicas                  shift and go to state 202
    enteros                        shift and go to state 44
    suma                           shift and go to state 32
    resta                          shift and go to state 33
    multiplicacion                 shift and go to state 34
    division                       shift and go to state 35
    exponenciacion                 shift and go to state 36

state 165

    (119) multiplicacion -> operadores TIMES operadores .

    $end            reduce using rule 119 (multiplicacion -> operadores TIMES operadores .)
    VARIABLE        reduce using rule 119 (multiplicacion -> operadores TIMES operadores .)
    IF              reduce using rule 119 (multiplicacion -> operadores TIMES operadores .)
    PUTS            reduce using rule 119 (multiplicacion -> operadores TIMES operadores .)
    FOR             reduce using rule 119 (multiplicacion -> operadores TIMES operadores .)
    WHILE           reduce using rule 119 (multiplicacion -> operadores TIMES operadores .)
    TRUE            reduce using rule 119 (multiplicacion -> operadores TIMES operadores .)
    FALSE           reduce using rule 119 (multiplicacion -> operadores TIMES operadores .)
    LPAR            reduce using rule 119 (multiplicacion -> operadores TIMES operadores .)
    NUMBER          reduce using rule 119 (multiplicacion -> operadores TIMES operadores .)
    STRING          reduce using rule 119 (multiplicacion -> operadores TIMES operadores .)
    FLOAT           reduce using rule 119 (multiplicacion -> operadores TIMES operadores .)
    MINUS           reduce using rule 119 (multiplicacion -> operadores TIMES operadores .)
    END             reduce using rule 119 (multiplicacion -> operadores TIMES operadores .)
    RETURN          reduce using rule 119 (multiplicacion -> operadores TIMES operadores .)
    RPAR            reduce using rule 119 (multiplicacion -> operadores TIMES operadores .)


state 166

    (120) multiplicacion -> operadores TIMES LPAR . operadores RPAR
    (121) multiplicacion -> operadores TIMES LPAR . opMatematicas RPAR
    (128) operadores -> . enteros
    (129) operadores -> . FLOAT
    (104) opMatematicas -> . suma
    (105) opMatematicas -> . resta
    (106) opMatematicas -> . multiplicacion
    (107) opMatematicas -> . division
    (108) opMatematicas -> . exponenciacion
    (130) enteros -> . NUMBER
    (131) enteros -> . MINUS NUMBER
    (109) suma -> . VARIABLE PLUS NUMBER
    (110) suma -> . operadores PLUS operadores
    (111) suma -> . operadores PLUS opMatematicas
    (112) suma -> . operadores PLUS LPAR operadores RPAR
    (113) suma -> . operadores PLUS LPAR opMatematicas RPAR
    (114) resta -> . VARIABLE MINUS NUMBER
    (115) resta -> . operadores MINUS operadores
    (116) resta -> . operadores MINUS opMatematicas
    (117) resta -> . operadores MINUS LPAR operadores RPAR
    (118) resta -> . operadores MINUS LPAR opMatematicas RPAR
    (119) multiplicacion -> . operadores TIMES operadores
    (120) multiplicacion -> . operadores TIMES LPAR operadores RPAR
    (121) multiplicacion -> . operadores TIMES LPAR opMatematicas RPAR
    (122) division -> . operadores DIVIDE operadores
    (123) division -> . operadores DIVIDE LPAR operadores RPAR
    (124) division -> . operadores DIVIDE LPAR opMatematicas RPAR
    (125) exponenciacion -> . operadores EXPONENTIATION operadores
    (126) exponenciacion -> . LPAR operadores RPAR EXPONENTIATION operadores
    (127) exponenciacion -> . LPAR opMatematicas RPAR EXPONENTIATION operadores

    FLOAT           shift and go to state 159
    NUMBER          shift and go to state 160
    MINUS           shift and go to state 41
    VARIABLE        shift and go to state 161
    LPAR            shift and go to state 199

    operadores                     shift and go to state 203
    opMatematicas                  shift and go to state 204
    enteros                        shift and go to state 44
    suma                           shift and go to state 32
    resta                          shift and go to state 33
    multiplicacion                 shift and go to state 34
    division                       shift and go to state 35
    exponenciacion                 shift and go to state 36

state 167

    (122) division -> operadores DIVIDE operadores .

    $end            reduce using rule 122 (division -> operadores DIVIDE operadores .)
    VARIABLE        reduce using rule 122 (division -> operadores DIVIDE operadores .)
    IF              reduce using rule 122 (division -> operadores DIVIDE operadores .)
    PUTS            reduce using rule 122 (division -> operadores DIVIDE operadores .)
    FOR             reduce using rule 122 (division -> operadores DIVIDE operadores .)
    WHILE           reduce using rule 122 (division -> operadores DIVIDE operadores .)
    TRUE            reduce using rule 122 (division -> operadores DIVIDE operadores .)
    FALSE           reduce using rule 122 (division -> operadores DIVIDE operadores .)
    LPAR            reduce using rule 122 (division -> operadores DIVIDE operadores .)
    NUMBER          reduce using rule 122 (division -> operadores DIVIDE operadores .)
    STRING          reduce using rule 122 (division -> operadores DIVIDE operadores .)
    FLOAT           reduce using rule 122 (division -> operadores DIVIDE operadores .)
    MINUS           reduce using rule 122 (division -> operadores DIVIDE operadores .)
    END             reduce using rule 122 (division -> operadores DIVIDE operadores .)
    RETURN          reduce using rule 122 (division -> operadores DIVIDE operadores .)
    RPAR            reduce using rule 122 (division -> operadores DIVIDE operadores .)


state 168

    (123) division -> operadores DIVIDE LPAR . operadores RPAR
    (124) division -> operadores DIVIDE LPAR . opMatematicas RPAR
    (128) operadores -> . enteros
    (129) operadores -> . FLOAT
    (104) opMatematicas -> . suma
    (105) opMatematicas -> . resta
    (106) opMatematicas -> . multiplicacion
    (107) opMatematicas -> . division
    (108) opMatematicas -> . exponenciacion
    (130) enteros -> . NUMBER
    (131) enteros -> . MINUS NUMBER
    (109) suma -> . VARIABLE PLUS NUMBER
    (110) suma -> . operadores PLUS operadores
    (111) suma -> . operadores PLUS opMatematicas
    (112) suma -> . operadores PLUS LPAR operadores RPAR
    (113) suma -> . operadores PLUS LPAR opMatematicas RPAR
    (114) resta -> . VARIABLE MINUS NUMBER
    (115) resta -> . operadores MINUS operadores
    (116) resta -> . operadores MINUS opMatematicas
    (117) resta -> . operadores MINUS LPAR operadores RPAR
    (118) resta -> . operadores MINUS LPAR opMatematicas RPAR
    (119) multiplicacion -> . operadores TIMES operadores
    (120) multiplicacion -> . operadores TIMES LPAR operadores RPAR
    (121) multiplicacion -> . operadores TIMES LPAR opMatematicas RPAR
    (122) division -> . operadores DIVIDE operadores
    (123) division -> . operadores DIVIDE LPAR operadores RPAR
    (124) division -> . operadores DIVIDE LPAR opMatematicas RPAR
    (125) exponenciacion -> . operadores EXPONENTIATION operadores
    (126) exponenciacion -> . LPAR operadores RPAR EXPONENTIATION operadores
    (127) exponenciacion -> . LPAR opMatematicas RPAR EXPONENTIATION operadores

    FLOAT           shift and go to state 159
    NUMBER          shift and go to state 160
    MINUS           shift and go to state 41
    VARIABLE        shift and go to state 161
    LPAR            shift and go to state 199

    operadores                     shift and go to state 205
    opMatematicas                  shift and go to state 206
    enteros                        shift and go to state 44
    suma                           shift and go to state 32
    resta                          shift and go to state 33
    multiplicacion                 shift and go to state 34
    division                       shift and go to state 35
    exponenciacion                 shift and go to state 36

state 169

    (125) exponenciacion -> operadores EXPONENTIATION operadores .

    $end            reduce using rule 125 (exponenciacion -> operadores EXPONENTIATION operadores .)
    VARIABLE        reduce using rule 125 (exponenciacion -> operadores EXPONENTIATION operadores .)
    IF              reduce using rule 125 (exponenciacion -> operadores EXPONENTIATION operadores .)
    PUTS            reduce using rule 125 (exponenciacion -> operadores EXPONENTIATION operadores .)
    FOR             reduce using rule 125 (exponenciacion -> operadores EXPONENTIATION operadores .)
    WHILE           reduce using rule 125 (exponenciacion -> operadores EXPONENTIATION operadores .)
    TRUE            reduce using rule 125 (exponenciacion -> operadores EXPONENTIATION operadores .)
    FALSE           reduce using rule 125 (exponenciacion -> operadores EXPONENTIATION operadores .)
    LPAR            reduce using rule 125 (exponenciacion -> operadores EXPONENTIATION operadores .)
    NUMBER          reduce using rule 125 (exponenciacion -> operadores EXPONENTIATION operadores .)
    STRING          reduce using rule 125 (exponenciacion -> operadores EXPONENTIATION operadores .)
    FLOAT           reduce using rule 125 (exponenciacion -> operadores EXPONENTIATION operadores .)
    MINUS           reduce using rule 125 (exponenciacion -> operadores EXPONENTIATION operadores .)
    END             reduce using rule 125 (exponenciacion -> operadores EXPONENTIATION operadores .)
    RETURN          reduce using rule 125 (exponenciacion -> operadores EXPONENTIATION operadores .)
    RPAR            reduce using rule 125 (exponenciacion -> operadores EXPONENTIATION operadores .)


state 170

    (60) comparacion -> expression comparador expression AND . comparacion
    (59) comparacion -> . expression comparador expression
    (60) comparacion -> . expression comparador expression AND comparacion
    (61) comparacion -> . expression comparador expression OR comparacion
    (62) comparacion -> . expression AND expression
    (63) comparacion -> . expression OR expression
    (51) expression -> . term
    (52) expression -> . boleano
    (53) term -> . factor
    (75) boleano -> . TRUE
    (76) boleano -> . FALSE
    (54) factor -> . NUMBER
    (55) factor -> . STRING
    (56) factor -> . FLOAT
    (57) factor -> . VARIABLE
    (58) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    NUMBER          shift and go to state 87
    STRING          shift and go to state 42
    FLOAT           shift and go to state 88
    VARIABLE        shift and go to state 89
    LPAR            shift and go to state 90

    expression                     shift and go to state 86
    comparacion                    shift and go to state 207
    term                           shift and go to state 23
    boleano                        shift and go to state 24
    factor                         shift and go to state 22

state 171

    (61) comparacion -> expression comparador expression OR . comparacion
    (59) comparacion -> . expression comparador expression
    (60) comparacion -> . expression comparador expression AND comparacion
    (61) comparacion -> . expression comparador expression OR comparacion
    (62) comparacion -> . expression AND expression
    (63) comparacion -> . expression OR expression
    (51) expression -> . term
    (52) expression -> . boleano
    (53) term -> . factor
    (75) boleano -> . TRUE
    (76) boleano -> . FALSE
    (54) factor -> . NUMBER
    (55) factor -> . STRING
    (56) factor -> . FLOAT
    (57) factor -> . VARIABLE
    (58) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    NUMBER          shift and go to state 87
    STRING          shift and go to state 42
    FLOAT           shift and go to state 88
    VARIABLE        shift and go to state 89
    LPAR            shift and go to state 90

    expression                     shift and go to state 86
    comparacion                    shift and go to state 208
    term                           shift and go to state 23
    boleano                        shift and go to state 24
    factor                         shift and go to state 22

state 172

    (80) getValueHash -> VARIABLE LCOR . expression RCOR
    (51) expression -> . term
    (52) expression -> . boleano
    (53) term -> . factor
    (75) boleano -> . TRUE
    (76) boleano -> . FALSE
    (54) factor -> . NUMBER
    (55) factor -> . STRING
    (56) factor -> . FLOAT
    (57) factor -> . VARIABLE
    (58) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    NUMBER          shift and go to state 87
    STRING          shift and go to state 42
    FLOAT           shift and go to state 88
    VARIABLE        shift and go to state 89
    LPAR            shift and go to state 90

    expression                     shift and go to state 209
    term                           shift and go to state 23
    boleano                        shift and go to state 24
    factor                         shift and go to state 22

state 173

    (77) diccionario -> LKEY cuerpoHash . RKEY

    RKEY            shift and go to state 210


state 174

    (78) cuerpoHash -> expression . ASIGN GREATER expression
    (79) cuerpoHash -> expression . ASIGN GREATER expression COMMA cuerpoHash

    ASIGN           shift and go to state 211


state 175

    (92) array -> LCOR parametrosA . RCOR
    (100) stack -> LCOR parametrosA . RCOR

    RCOR            shift and go to state 212


state 176

    (93) array -> LCOR RCOR .

    $end            reduce using rule 93 (array -> LCOR RCOR .)
    VARIABLE        reduce using rule 93 (array -> LCOR RCOR .)
    IF              reduce using rule 93 (array -> LCOR RCOR .)
    PUTS            reduce using rule 93 (array -> LCOR RCOR .)
    FOR             reduce using rule 93 (array -> LCOR RCOR .)
    WHILE           reduce using rule 93 (array -> LCOR RCOR .)
    TRUE            reduce using rule 93 (array -> LCOR RCOR .)
    FALSE           reduce using rule 93 (array -> LCOR RCOR .)
    LPAR            reduce using rule 93 (array -> LCOR RCOR .)
    NUMBER          reduce using rule 93 (array -> LCOR RCOR .)
    STRING          reduce using rule 93 (array -> LCOR RCOR .)
    FLOAT           reduce using rule 93 (array -> LCOR RCOR .)
    MINUS           reduce using rule 93 (array -> LCOR RCOR .)
    END             reduce using rule 93 (array -> LCOR RCOR .)
    RETURN          reduce using rule 93 (array -> LCOR RCOR .)


state 177

    (101) stack -> LCOR vacio . RCOR

    RCOR            shift and go to state 213


state 178

    (90) parametrosA -> factor .
    (91) parametrosA -> factor . COMMA parametrosA

    RCOR            reduce using rule 90 (parametrosA -> factor .)
    COMMA           shift and go to state 214


state 179

    (99) vacio ->  .

    RCOR            reduce using rule 99 (vacio ->  .)


state 180

    (133) parametros -> VARIABLE COMMA . parametros
    (132) parametros -> . VARIABLE
    (133) parametros -> . VARIABLE COMMA parametros

    VARIABLE        shift and go to state 125

    parametros                     shift and go to state 215

state 181

    (140) callFuncion -> VARIABLE LPAR parametros RPAR .

    $end            reduce using rule 140 (callFuncion -> VARIABLE LPAR parametros RPAR .)
    VARIABLE        reduce using rule 140 (callFuncion -> VARIABLE LPAR parametros RPAR .)
    IF              reduce using rule 140 (callFuncion -> VARIABLE LPAR parametros RPAR .)
    PUTS            reduce using rule 140 (callFuncion -> VARIABLE LPAR parametros RPAR .)
    FOR             reduce using rule 140 (callFuncion -> VARIABLE LPAR parametros RPAR .)
    WHILE           reduce using rule 140 (callFuncion -> VARIABLE LPAR parametros RPAR .)
    TRUE            reduce using rule 140 (callFuncion -> VARIABLE LPAR parametros RPAR .)
    FALSE           reduce using rule 140 (callFuncion -> VARIABLE LPAR parametros RPAR .)
    LPAR            reduce using rule 140 (callFuncion -> VARIABLE LPAR parametros RPAR .)
    NUMBER          reduce using rule 140 (callFuncion -> VARIABLE LPAR parametros RPAR .)
    STRING          reduce using rule 140 (callFuncion -> VARIABLE LPAR parametros RPAR .)
    FLOAT           reduce using rule 140 (callFuncion -> VARIABLE LPAR parametros RPAR .)
    MINUS           reduce using rule 140 (callFuncion -> VARIABLE LPAR parametros RPAR .)
    END             reduce using rule 140 (callFuncion -> VARIABLE LPAR parametros RPAR .)
    RETURN          reduce using rule 140 (callFuncion -> VARIABLE LPAR parametros RPAR .)


state 182

    (81) addValueHash -> VARIABLE LCOR expression RCOR . ASIGN expression
    (82) modValueHash -> VARIABLE LCOR expression RCOR . ASIGN expression

    ASIGN           shift and go to state 216


state 183

    (84) metodoBoleano -> VARIABLE POINT VARIABLE QUESTION . LPAR expression RPAR
    (85) metodoBoleano -> VARIABLE POINT VARIABLE QUESTION . LPAR RPAR

    LPAR            shift and go to state 217


state 184

    (83) deleteValueHash -> VARIABLE POINT DELETE LPAR . expression RPAR
    (51) expression -> . term
    (52) expression -> . boleano
    (53) term -> . factor
    (75) boleano -> . TRUE
    (76) boleano -> . FALSE
    (54) factor -> . NUMBER
    (55) factor -> . STRING
    (56) factor -> . FLOAT
    (57) factor -> . VARIABLE
    (58) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    NUMBER          shift and go to state 87
    STRING          shift and go to state 42
    FLOAT           shift and go to state 88
    VARIABLE        shift and go to state 89
    LPAR            shift and go to state 90

    expression                     shift and go to state 218
    term                           shift and go to state 23
    boleano                        shift and go to state 24
    factor                         shift and go to state 22

state 185

    (95) insertArray -> VARIABLE POINT INSERT LPAR . argumentosA RPAR
    (94) argumentosA -> . NUMBER COMMA factor

    NUMBER          shift and go to state 220

    argumentosA                    shift and go to state 219

state 186

    (96) deleteArray -> VARIABLE POINT DELETE_AT LPAR . NUMBER RPAR

    NUMBER          shift and go to state 221


state 187

    (102) searchStack -> VARIABLE POINT SEARCH LPAR . factor RPAR
    (54) factor -> . NUMBER
    (55) factor -> . STRING
    (56) factor -> . FLOAT
    (57) factor -> . VARIABLE
    (58) factor -> . LPAR expression RPAR

    NUMBER          shift and go to state 87
    STRING          shift and go to state 42
    FLOAT           shift and go to state 88
    VARIABLE        shift and go to state 89
    LPAR            shift and go to state 90

    factor                         shift and go to state 222

state 188

    (103) pushStack -> VARIABLE POINT PUSH LPAR . factor RPAR
    (54) factor -> . NUMBER
    (55) factor -> . STRING
    (56) factor -> . FLOAT
    (57) factor -> . VARIABLE
    (58) factor -> . LPAR expression RPAR

    NUMBER          shift and go to state 87
    STRING          shift and go to state 42
    FLOAT           shift and go to state 88
    VARIABLE        shift and go to state 89
    LPAR            shift and go to state 90

    factor                         shift and go to state 223

state 189

    (138) funciones -> encabezado repCuerpo RETURN expression . END

    END             shift and go to state 224


state 190

    (137) funciones -> encabezado RETURN expression END .

    $end            reduce using rule 137 (funciones -> encabezado RETURN expression END .)


state 191

    (70) condicional -> IF comparacion D_POINT repCuerpo . END
    (71) condicional -> IF comparacion D_POINT repCuerpo . END cond_else

    END             shift and go to state 225


state 192

    (86) while -> WHILE LPAR comparacion RPAR . repCuerpo END
    (87) while -> WHILE LPAR comparacion RPAR . repCuerpo END while
    (88) repCuerpo -> . cuerpo
    (89) repCuerpo -> . cuerpo repCuerpo
    (20) cuerpo -> . asignacion
    (21) cuerpo -> . expression
    (22) cuerpo -> . comparacion
    (23) cuerpo -> . condicional
    (24) cuerpo -> . impresion
    (25) cuerpo -> . for
    (26) cuerpo -> . while
    (27) cuerpo -> . input
    (28) cuerpo -> . callFuncion
    (29) cuerpo -> . addValueHash
    (30) cuerpo -> . modValueHash
    (31) cuerpo -> . deleteValueHash
    (32) cuerpo -> . insertArray
    (33) cuerpo -> . deleteArray
    (34) cuerpo -> . pushStack
    (35) cuerpo -> . searchStack
    (36) cuerpo -> . opMatematicas
    (37) asignacion -> . VARIABLE ASIGN expression
    (38) asignacion -> . VARIABLE ASIGN comparacion
    (39) asignacion -> . VARIABLE ASIGN callFuncion
    (40) asignacion -> . VARIABLE ASIGN diccionario
    (41) asignacion -> . VARIABLE ASIGN getValueHash
    (42) asignacion -> . VARIABLE ASIGN array
    (43) asignacion -> . VARIABLE ASIGN stack
    (44) asignacion -> . VARIABLE tipo_asignacion factor
    (45) asignacion -> . VARIABLE ASIGN opMatematicas
    (51) expression -> . term
    (52) expression -> . boleano
    (59) comparacion -> . expression comparador expression
    (60) comparacion -> . expression comparador expression AND comparacion
    (61) comparacion -> . expression comparador expression OR comparacion
    (62) comparacion -> . expression AND expression
    (63) comparacion -> . expression OR expression
    (70) condicional -> . IF comparacion D_POINT repCuerpo END
    (71) condicional -> . IF comparacion D_POINT repCuerpo END cond_else
    (73) impresion -> . PUTS factor
    (97) for -> . FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END
    (98) for -> . FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for
    (86) while -> . WHILE LPAR comparacion RPAR repCuerpo END
    (87) while -> . WHILE LPAR comparacion RPAR repCuerpo END while
    (74) input -> . VARIABLE ASIGN GETS
    (139) callFuncion -> . VARIABLE LPAR RPAR
    (140) callFuncion -> . VARIABLE LPAR parametros RPAR
    (81) addValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (82) modValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (83) deleteValueHash -> . VARIABLE POINT DELETE LPAR expression RPAR
    (95) insertArray -> . VARIABLE POINT INSERT LPAR argumentosA RPAR
    (96) deleteArray -> . VARIABLE POINT DELETE_AT LPAR NUMBER RPAR
    (103) pushStack -> . VARIABLE POINT PUSH LPAR factor RPAR
    (102) searchStack -> . VARIABLE POINT SEARCH LPAR factor RPAR
    (104) opMatematicas -> . suma
    (105) opMatematicas -> . resta
    (106) opMatematicas -> . multiplicacion
    (107) opMatematicas -> . division
    (108) opMatematicas -> . exponenciacion
    (53) term -> . factor
    (75) boleano -> . TRUE
    (76) boleano -> . FALSE
    (109) suma -> . VARIABLE PLUS NUMBER
    (110) suma -> . operadores PLUS operadores
    (111) suma -> . operadores PLUS opMatematicas
    (112) suma -> . operadores PLUS LPAR operadores RPAR
    (113) suma -> . operadores PLUS LPAR opMatematicas RPAR
    (114) resta -> . VARIABLE MINUS NUMBER
    (115) resta -> . operadores MINUS operadores
    (116) resta -> . operadores MINUS opMatematicas
    (117) resta -> . operadores MINUS LPAR operadores RPAR
    (118) resta -> . operadores MINUS LPAR opMatematicas RPAR
    (119) multiplicacion -> . operadores TIMES operadores
    (120) multiplicacion -> . operadores TIMES LPAR operadores RPAR
    (121) multiplicacion -> . operadores TIMES LPAR opMatematicas RPAR
    (122) division -> . operadores DIVIDE operadores
    (123) division -> . operadores DIVIDE LPAR operadores RPAR
    (124) division -> . operadores DIVIDE LPAR opMatematicas RPAR
    (125) exponenciacion -> . operadores EXPONENTIATION operadores
    (126) exponenciacion -> . LPAR operadores RPAR EXPONENTIATION operadores
    (127) exponenciacion -> . LPAR opMatematicas RPAR EXPONENTIATION operadores
    (54) factor -> . NUMBER
    (55) factor -> . STRING
    (56) factor -> . FLOAT
    (57) factor -> . VARIABLE
    (58) factor -> . LPAR expression RPAR
    (128) operadores -> . enteros
    (129) operadores -> . FLOAT
    (130) enteros -> . NUMBER
    (131) enteros -> . MINUS NUMBER

    VARIABLE        shift and go to state 84
    IF              shift and go to state 26
    PUTS            shift and go to state 31
    FOR             shift and go to state 29
    WHILE           shift and go to state 27
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    LPAR            shift and go to state 28
    NUMBER          shift and go to state 30
    STRING          shift and go to state 42
    FLOAT           shift and go to state 43
    MINUS           shift and go to state 41

    comparacion                    shift and go to state 69
    repCuerpo                      shift and go to state 226
    while                          shift and go to state 73
    cuerpo                         shift and go to state 67
    asignacion                     shift and go to state 68
    expression                     shift and go to state 66
    condicional                    shift and go to state 70
    impresion                      shift and go to state 71
    for                            shift and go to state 72
    input                          shift and go to state 74
    callFuncion                    shift and go to state 75
    addValueHash                   shift and go to state 76
    modValueHash                   shift and go to state 77
    deleteValueHash                shift and go to state 78
    insertArray                    shift and go to state 79
    deleteArray                    shift and go to state 80
    pushStack                      shift and go to state 81
    searchStack                    shift and go to state 82
    opMatematicas                  shift and go to state 83
    factor                         shift and go to state 22
    term                           shift and go to state 23
    boleano                        shift and go to state 24
    suma                           shift and go to state 32
    resta                          shift and go to state 33
    multiplicacion                 shift and go to state 34
    division                       shift and go to state 35
    exponenciacion                 shift and go to state 36
    operadores                     shift and go to state 40
    enteros                        shift and go to state 44

state 193

    (126) exponenciacion -> LPAR operadores RPAR EXPONENTIATION . operadores
    (128) operadores -> . enteros
    (129) operadores -> . FLOAT
    (130) enteros -> . NUMBER
    (131) enteros -> . MINUS NUMBER

    FLOAT           shift and go to state 159
    NUMBER          shift and go to state 160
    MINUS           shift and go to state 41

    operadores                     shift and go to state 227
    enteros                        shift and go to state 44

state 194

    (127) exponenciacion -> LPAR opMatematicas RPAR EXPONENTIATION . operadores
    (128) operadores -> . enteros
    (129) operadores -> . FLOAT
    (130) enteros -> . NUMBER
    (131) enteros -> . MINUS NUMBER

    FLOAT           shift and go to state 159
    NUMBER          shift and go to state 160
    MINUS           shift and go to state 41

    operadores                     shift and go to state 228
    enteros                        shift and go to state 44

state 195

    (97) for -> FOR VARIABLE IN NUMBER . POINT POINT NUMBER DO repCuerpo END
    (98) for -> FOR VARIABLE IN NUMBER . POINT POINT NUMBER DO repCuerpo END for

    POINT           shift and go to state 229


state 196

    (134) encabezado -> DEF VARIABLE LPAR RPAR .

    RETURN          reduce using rule 134 (encabezado -> DEF VARIABLE LPAR RPAR .)
    VARIABLE        reduce using rule 134 (encabezado -> DEF VARIABLE LPAR RPAR .)
    IF              reduce using rule 134 (encabezado -> DEF VARIABLE LPAR RPAR .)
    PUTS            reduce using rule 134 (encabezado -> DEF VARIABLE LPAR RPAR .)
    FOR             reduce using rule 134 (encabezado -> DEF VARIABLE LPAR RPAR .)
    WHILE           reduce using rule 134 (encabezado -> DEF VARIABLE LPAR RPAR .)
    TRUE            reduce using rule 134 (encabezado -> DEF VARIABLE LPAR RPAR .)
    FALSE           reduce using rule 134 (encabezado -> DEF VARIABLE LPAR RPAR .)
    LPAR            reduce using rule 134 (encabezado -> DEF VARIABLE LPAR RPAR .)
    NUMBER          reduce using rule 134 (encabezado -> DEF VARIABLE LPAR RPAR .)
    STRING          reduce using rule 134 (encabezado -> DEF VARIABLE LPAR RPAR .)
    FLOAT           reduce using rule 134 (encabezado -> DEF VARIABLE LPAR RPAR .)
    MINUS           reduce using rule 134 (encabezado -> DEF VARIABLE LPAR RPAR .)


state 197

    (135) encabezado -> DEF VARIABLE LPAR parametros . RPAR

    RPAR            shift and go to state 230


state 198

    (112) suma -> operadores PLUS LPAR operadores . RPAR
    (126) exponenciacion -> LPAR operadores . RPAR EXPONENTIATION operadores
    (110) suma -> operadores . PLUS operadores
    (111) suma -> operadores . PLUS opMatematicas
    (112) suma -> operadores . PLUS LPAR operadores RPAR
    (113) suma -> operadores . PLUS LPAR opMatematicas RPAR
    (115) resta -> operadores . MINUS operadores
    (116) resta -> operadores . MINUS opMatematicas
    (117) resta -> operadores . MINUS LPAR operadores RPAR
    (118) resta -> operadores . MINUS LPAR opMatematicas RPAR
    (119) multiplicacion -> operadores . TIMES operadores
    (120) multiplicacion -> operadores . TIMES LPAR operadores RPAR
    (121) multiplicacion -> operadores . TIMES LPAR opMatematicas RPAR
    (122) division -> operadores . DIVIDE operadores
    (123) division -> operadores . DIVIDE LPAR operadores RPAR
    (124) division -> operadores . DIVIDE LPAR opMatematicas RPAR
    (125) exponenciacion -> operadores . EXPONENTIATION operadores

    RPAR            shift and go to state 231
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    TIMES           shift and go to state 103
    DIVIDE          shift and go to state 104
    EXPONENTIATION  shift and go to state 105


state 199

    (126) exponenciacion -> LPAR . operadores RPAR EXPONENTIATION operadores
    (127) exponenciacion -> LPAR . opMatematicas RPAR EXPONENTIATION operadores
    (128) operadores -> . enteros
    (129) operadores -> . FLOAT
    (104) opMatematicas -> . suma
    (105) opMatematicas -> . resta
    (106) opMatematicas -> . multiplicacion
    (107) opMatematicas -> . division
    (108) opMatematicas -> . exponenciacion
    (130) enteros -> . NUMBER
    (131) enteros -> . MINUS NUMBER
    (109) suma -> . VARIABLE PLUS NUMBER
    (110) suma -> . operadores PLUS operadores
    (111) suma -> . operadores PLUS opMatematicas
    (112) suma -> . operadores PLUS LPAR operadores RPAR
    (113) suma -> . operadores PLUS LPAR opMatematicas RPAR
    (114) resta -> . VARIABLE MINUS NUMBER
    (115) resta -> . operadores MINUS operadores
    (116) resta -> . operadores MINUS opMatematicas
    (117) resta -> . operadores MINUS LPAR operadores RPAR
    (118) resta -> . operadores MINUS LPAR opMatematicas RPAR
    (119) multiplicacion -> . operadores TIMES operadores
    (120) multiplicacion -> . operadores TIMES LPAR operadores RPAR
    (121) multiplicacion -> . operadores TIMES LPAR opMatematicas RPAR
    (122) division -> . operadores DIVIDE operadores
    (123) division -> . operadores DIVIDE LPAR operadores RPAR
    (124) division -> . operadores DIVIDE LPAR opMatematicas RPAR
    (125) exponenciacion -> . operadores EXPONENTIATION operadores
    (126) exponenciacion -> . LPAR operadores RPAR EXPONENTIATION operadores
    (127) exponenciacion -> . LPAR opMatematicas RPAR EXPONENTIATION operadores

    FLOAT           shift and go to state 159
    NUMBER          shift and go to state 160
    MINUS           shift and go to state 41
    VARIABLE        shift and go to state 161
    LPAR            shift and go to state 199

    operadores                     shift and go to state 92
    opMatematicas                  shift and go to state 93
    enteros                        shift and go to state 44
    suma                           shift and go to state 32
    resta                          shift and go to state 33
    multiplicacion                 shift and go to state 34
    division                       shift and go to state 35
    exponenciacion                 shift and go to state 36

state 200

    (113) suma -> operadores PLUS LPAR opMatematicas . RPAR
    (127) exponenciacion -> LPAR opMatematicas . RPAR EXPONENTIATION operadores

    RPAR            shift and go to state 232


state 201

    (117) resta -> operadores MINUS LPAR operadores . RPAR
    (126) exponenciacion -> LPAR operadores . RPAR EXPONENTIATION operadores
    (110) suma -> operadores . PLUS operadores
    (111) suma -> operadores . PLUS opMatematicas
    (112) suma -> operadores . PLUS LPAR operadores RPAR
    (113) suma -> operadores . PLUS LPAR opMatematicas RPAR
    (115) resta -> operadores . MINUS operadores
    (116) resta -> operadores . MINUS opMatematicas
    (117) resta -> operadores . MINUS LPAR operadores RPAR
    (118) resta -> operadores . MINUS LPAR opMatematicas RPAR
    (119) multiplicacion -> operadores . TIMES operadores
    (120) multiplicacion -> operadores . TIMES LPAR operadores RPAR
    (121) multiplicacion -> operadores . TIMES LPAR opMatematicas RPAR
    (122) division -> operadores . DIVIDE operadores
    (123) division -> operadores . DIVIDE LPAR operadores RPAR
    (124) division -> operadores . DIVIDE LPAR opMatematicas RPAR
    (125) exponenciacion -> operadores . EXPONENTIATION operadores

    RPAR            shift and go to state 233
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    TIMES           shift and go to state 103
    DIVIDE          shift and go to state 104
    EXPONENTIATION  shift and go to state 105


state 202

    (118) resta -> operadores MINUS LPAR opMatematicas . RPAR
    (127) exponenciacion -> LPAR opMatematicas . RPAR EXPONENTIATION operadores

    RPAR            shift and go to state 234


state 203

    (120) multiplicacion -> operadores TIMES LPAR operadores . RPAR
    (110) suma -> operadores . PLUS operadores
    (111) suma -> operadores . PLUS opMatematicas
    (112) suma -> operadores . PLUS LPAR operadores RPAR
    (113) suma -> operadores . PLUS LPAR opMatematicas RPAR
    (115) resta -> operadores . MINUS operadores
    (116) resta -> operadores . MINUS opMatematicas
    (117) resta -> operadores . MINUS LPAR operadores RPAR
    (118) resta -> operadores . MINUS LPAR opMatematicas RPAR
    (119) multiplicacion -> operadores . TIMES operadores
    (120) multiplicacion -> operadores . TIMES LPAR operadores RPAR
    (121) multiplicacion -> operadores . TIMES LPAR opMatematicas RPAR
    (122) division -> operadores . DIVIDE operadores
    (123) division -> operadores . DIVIDE LPAR operadores RPAR
    (124) division -> operadores . DIVIDE LPAR opMatematicas RPAR
    (125) exponenciacion -> operadores . EXPONENTIATION operadores

    RPAR            shift and go to state 235
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    TIMES           shift and go to state 103
    DIVIDE          shift and go to state 104
    EXPONENTIATION  shift and go to state 105


state 204

    (121) multiplicacion -> operadores TIMES LPAR opMatematicas . RPAR

    RPAR            shift and go to state 236


state 205

    (123) division -> operadores DIVIDE LPAR operadores . RPAR
    (110) suma -> operadores . PLUS operadores
    (111) suma -> operadores . PLUS opMatematicas
    (112) suma -> operadores . PLUS LPAR operadores RPAR
    (113) suma -> operadores . PLUS LPAR opMatematicas RPAR
    (115) resta -> operadores . MINUS operadores
    (116) resta -> operadores . MINUS opMatematicas
    (117) resta -> operadores . MINUS LPAR operadores RPAR
    (118) resta -> operadores . MINUS LPAR opMatematicas RPAR
    (119) multiplicacion -> operadores . TIMES operadores
    (120) multiplicacion -> operadores . TIMES LPAR operadores RPAR
    (121) multiplicacion -> operadores . TIMES LPAR opMatematicas RPAR
    (122) division -> operadores . DIVIDE operadores
    (123) division -> operadores . DIVIDE LPAR operadores RPAR
    (124) division -> operadores . DIVIDE LPAR opMatematicas RPAR
    (125) exponenciacion -> operadores . EXPONENTIATION operadores

    RPAR            shift and go to state 237
    PLUS            shift and go to state 101
    MINUS           shift and go to state 102
    TIMES           shift and go to state 103
    DIVIDE          shift and go to state 104
    EXPONENTIATION  shift and go to state 105


state 206

    (124) division -> operadores DIVIDE LPAR opMatematicas . RPAR

    RPAR            shift and go to state 238


state 207

    (60) comparacion -> expression comparador expression AND comparacion .

    $end            reduce using rule 60 (comparacion -> expression comparador expression AND comparacion .)
    VARIABLE        reduce using rule 60 (comparacion -> expression comparador expression AND comparacion .)
    IF              reduce using rule 60 (comparacion -> expression comparador expression AND comparacion .)
    PUTS            reduce using rule 60 (comparacion -> expression comparador expression AND comparacion .)
    FOR             reduce using rule 60 (comparacion -> expression comparador expression AND comparacion .)
    WHILE           reduce using rule 60 (comparacion -> expression comparador expression AND comparacion .)
    TRUE            reduce using rule 60 (comparacion -> expression comparador expression AND comparacion .)
    FALSE           reduce using rule 60 (comparacion -> expression comparador expression AND comparacion .)
    LPAR            reduce using rule 60 (comparacion -> expression comparador expression AND comparacion .)
    NUMBER          reduce using rule 60 (comparacion -> expression comparador expression AND comparacion .)
    STRING          reduce using rule 60 (comparacion -> expression comparador expression AND comparacion .)
    FLOAT           reduce using rule 60 (comparacion -> expression comparador expression AND comparacion .)
    MINUS           reduce using rule 60 (comparacion -> expression comparador expression AND comparacion .)
    END             reduce using rule 60 (comparacion -> expression comparador expression AND comparacion .)
    RETURN          reduce using rule 60 (comparacion -> expression comparador expression AND comparacion .)
    D_POINT         reduce using rule 60 (comparacion -> expression comparador expression AND comparacion .)
    RPAR            reduce using rule 60 (comparacion -> expression comparador expression AND comparacion .)


state 208

    (61) comparacion -> expression comparador expression OR comparacion .

    $end            reduce using rule 61 (comparacion -> expression comparador expression OR comparacion .)
    VARIABLE        reduce using rule 61 (comparacion -> expression comparador expression OR comparacion .)
    IF              reduce using rule 61 (comparacion -> expression comparador expression OR comparacion .)
    PUTS            reduce using rule 61 (comparacion -> expression comparador expression OR comparacion .)
    FOR             reduce using rule 61 (comparacion -> expression comparador expression OR comparacion .)
    WHILE           reduce using rule 61 (comparacion -> expression comparador expression OR comparacion .)
    TRUE            reduce using rule 61 (comparacion -> expression comparador expression OR comparacion .)
    FALSE           reduce using rule 61 (comparacion -> expression comparador expression OR comparacion .)
    LPAR            reduce using rule 61 (comparacion -> expression comparador expression OR comparacion .)
    NUMBER          reduce using rule 61 (comparacion -> expression comparador expression OR comparacion .)
    STRING          reduce using rule 61 (comparacion -> expression comparador expression OR comparacion .)
    FLOAT           reduce using rule 61 (comparacion -> expression comparador expression OR comparacion .)
    MINUS           reduce using rule 61 (comparacion -> expression comparador expression OR comparacion .)
    END             reduce using rule 61 (comparacion -> expression comparador expression OR comparacion .)
    RETURN          reduce using rule 61 (comparacion -> expression comparador expression OR comparacion .)
    D_POINT         reduce using rule 61 (comparacion -> expression comparador expression OR comparacion .)
    RPAR            reduce using rule 61 (comparacion -> expression comparador expression OR comparacion .)


state 209

    (80) getValueHash -> VARIABLE LCOR expression . RCOR

    RCOR            shift and go to state 239


state 210

    (77) diccionario -> LKEY cuerpoHash RKEY .

    $end            reduce using rule 77 (diccionario -> LKEY cuerpoHash RKEY .)
    VARIABLE        reduce using rule 77 (diccionario -> LKEY cuerpoHash RKEY .)
    IF              reduce using rule 77 (diccionario -> LKEY cuerpoHash RKEY .)
    PUTS            reduce using rule 77 (diccionario -> LKEY cuerpoHash RKEY .)
    FOR             reduce using rule 77 (diccionario -> LKEY cuerpoHash RKEY .)
    WHILE           reduce using rule 77 (diccionario -> LKEY cuerpoHash RKEY .)
    TRUE            reduce using rule 77 (diccionario -> LKEY cuerpoHash RKEY .)
    FALSE           reduce using rule 77 (diccionario -> LKEY cuerpoHash RKEY .)
    LPAR            reduce using rule 77 (diccionario -> LKEY cuerpoHash RKEY .)
    NUMBER          reduce using rule 77 (diccionario -> LKEY cuerpoHash RKEY .)
    STRING          reduce using rule 77 (diccionario -> LKEY cuerpoHash RKEY .)
    FLOAT           reduce using rule 77 (diccionario -> LKEY cuerpoHash RKEY .)
    MINUS           reduce using rule 77 (diccionario -> LKEY cuerpoHash RKEY .)
    END             reduce using rule 77 (diccionario -> LKEY cuerpoHash RKEY .)
    RETURN          reduce using rule 77 (diccionario -> LKEY cuerpoHash RKEY .)


state 211

    (78) cuerpoHash -> expression ASIGN . GREATER expression
    (79) cuerpoHash -> expression ASIGN . GREATER expression COMMA cuerpoHash

    GREATER         shift and go to state 240


state 212

    (92) array -> LCOR parametrosA RCOR .
    (100) stack -> LCOR parametrosA RCOR .

  ! reduce/reduce conflict for $end resolved using rule 92 (array -> LCOR parametrosA RCOR .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 92 (array -> LCOR parametrosA RCOR .)
  ! reduce/reduce conflict for IF resolved using rule 92 (array -> LCOR parametrosA RCOR .)
  ! reduce/reduce conflict for PUTS resolved using rule 92 (array -> LCOR parametrosA RCOR .)
  ! reduce/reduce conflict for FOR resolved using rule 92 (array -> LCOR parametrosA RCOR .)
  ! reduce/reduce conflict for WHILE resolved using rule 92 (array -> LCOR parametrosA RCOR .)
  ! reduce/reduce conflict for TRUE resolved using rule 92 (array -> LCOR parametrosA RCOR .)
  ! reduce/reduce conflict for FALSE resolved using rule 92 (array -> LCOR parametrosA RCOR .)
  ! reduce/reduce conflict for LPAR resolved using rule 92 (array -> LCOR parametrosA RCOR .)
  ! reduce/reduce conflict for NUMBER resolved using rule 92 (array -> LCOR parametrosA RCOR .)
  ! reduce/reduce conflict for STRING resolved using rule 92 (array -> LCOR parametrosA RCOR .)
  ! reduce/reduce conflict for FLOAT resolved using rule 92 (array -> LCOR parametrosA RCOR .)
  ! reduce/reduce conflict for MINUS resolved using rule 92 (array -> LCOR parametrosA RCOR .)
  ! reduce/reduce conflict for END resolved using rule 92 (array -> LCOR parametrosA RCOR .)
  ! reduce/reduce conflict for RETURN resolved using rule 92 (array -> LCOR parametrosA RCOR .)
    $end            reduce using rule 92 (array -> LCOR parametrosA RCOR .)
    VARIABLE        reduce using rule 92 (array -> LCOR parametrosA RCOR .)
    IF              reduce using rule 92 (array -> LCOR parametrosA RCOR .)
    PUTS            reduce using rule 92 (array -> LCOR parametrosA RCOR .)
    FOR             reduce using rule 92 (array -> LCOR parametrosA RCOR .)
    WHILE           reduce using rule 92 (array -> LCOR parametrosA RCOR .)
    TRUE            reduce using rule 92 (array -> LCOR parametrosA RCOR .)
    FALSE           reduce using rule 92 (array -> LCOR parametrosA RCOR .)
    LPAR            reduce using rule 92 (array -> LCOR parametrosA RCOR .)
    NUMBER          reduce using rule 92 (array -> LCOR parametrosA RCOR .)
    STRING          reduce using rule 92 (array -> LCOR parametrosA RCOR .)
    FLOAT           reduce using rule 92 (array -> LCOR parametrosA RCOR .)
    MINUS           reduce using rule 92 (array -> LCOR parametrosA RCOR .)
    END             reduce using rule 92 (array -> LCOR parametrosA RCOR .)
    RETURN          reduce using rule 92 (array -> LCOR parametrosA RCOR .)

  ! $end            [ reduce using rule 100 (stack -> LCOR parametrosA RCOR .) ]
  ! VARIABLE        [ reduce using rule 100 (stack -> LCOR parametrosA RCOR .) ]
  ! IF              [ reduce using rule 100 (stack -> LCOR parametrosA RCOR .) ]
  ! PUTS            [ reduce using rule 100 (stack -> LCOR parametrosA RCOR .) ]
  ! FOR             [ reduce using rule 100 (stack -> LCOR parametrosA RCOR .) ]
  ! WHILE           [ reduce using rule 100 (stack -> LCOR parametrosA RCOR .) ]
  ! TRUE            [ reduce using rule 100 (stack -> LCOR parametrosA RCOR .) ]
  ! FALSE           [ reduce using rule 100 (stack -> LCOR parametrosA RCOR .) ]
  ! LPAR            [ reduce using rule 100 (stack -> LCOR parametrosA RCOR .) ]
  ! NUMBER          [ reduce using rule 100 (stack -> LCOR parametrosA RCOR .) ]
  ! STRING          [ reduce using rule 100 (stack -> LCOR parametrosA RCOR .) ]
  ! FLOAT           [ reduce using rule 100 (stack -> LCOR parametrosA RCOR .) ]
  ! MINUS           [ reduce using rule 100 (stack -> LCOR parametrosA RCOR .) ]
  ! END             [ reduce using rule 100 (stack -> LCOR parametrosA RCOR .) ]
  ! RETURN          [ reduce using rule 100 (stack -> LCOR parametrosA RCOR .) ]


state 213

    (101) stack -> LCOR vacio RCOR .

    $end            reduce using rule 101 (stack -> LCOR vacio RCOR .)
    VARIABLE        reduce using rule 101 (stack -> LCOR vacio RCOR .)
    IF              reduce using rule 101 (stack -> LCOR vacio RCOR .)
    PUTS            reduce using rule 101 (stack -> LCOR vacio RCOR .)
    FOR             reduce using rule 101 (stack -> LCOR vacio RCOR .)
    WHILE           reduce using rule 101 (stack -> LCOR vacio RCOR .)
    TRUE            reduce using rule 101 (stack -> LCOR vacio RCOR .)
    FALSE           reduce using rule 101 (stack -> LCOR vacio RCOR .)
    LPAR            reduce using rule 101 (stack -> LCOR vacio RCOR .)
    NUMBER          reduce using rule 101 (stack -> LCOR vacio RCOR .)
    STRING          reduce using rule 101 (stack -> LCOR vacio RCOR .)
    FLOAT           reduce using rule 101 (stack -> LCOR vacio RCOR .)
    MINUS           reduce using rule 101 (stack -> LCOR vacio RCOR .)
    END             reduce using rule 101 (stack -> LCOR vacio RCOR .)
    RETURN          reduce using rule 101 (stack -> LCOR vacio RCOR .)


state 214

    (91) parametrosA -> factor COMMA . parametrosA
    (90) parametrosA -> . factor
    (91) parametrosA -> . factor COMMA parametrosA
    (54) factor -> . NUMBER
    (55) factor -> . STRING
    (56) factor -> . FLOAT
    (57) factor -> . VARIABLE
    (58) factor -> . LPAR expression RPAR

    NUMBER          shift and go to state 87
    STRING          shift and go to state 42
    FLOAT           shift and go to state 88
    VARIABLE        shift and go to state 89
    LPAR            shift and go to state 90

    factor                         shift and go to state 178
    parametrosA                    shift and go to state 241

state 215

    (133) parametros -> VARIABLE COMMA parametros .

    RPAR            reduce using rule 133 (parametros -> VARIABLE COMMA parametros .)


state 216

    (81) addValueHash -> VARIABLE LCOR expression RCOR ASIGN . expression
    (82) modValueHash -> VARIABLE LCOR expression RCOR ASIGN . expression
    (51) expression -> . term
    (52) expression -> . boleano
    (53) term -> . factor
    (75) boleano -> . TRUE
    (76) boleano -> . FALSE
    (54) factor -> . NUMBER
    (55) factor -> . STRING
    (56) factor -> . FLOAT
    (57) factor -> . VARIABLE
    (58) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    NUMBER          shift and go to state 87
    STRING          shift and go to state 42
    FLOAT           shift and go to state 88
    VARIABLE        shift and go to state 89
    LPAR            shift and go to state 90

    expression                     shift and go to state 242
    term                           shift and go to state 23
    boleano                        shift and go to state 24
    factor                         shift and go to state 22

state 217

    (84) metodoBoleano -> VARIABLE POINT VARIABLE QUESTION LPAR . expression RPAR
    (85) metodoBoleano -> VARIABLE POINT VARIABLE QUESTION LPAR . RPAR
    (51) expression -> . term
    (52) expression -> . boleano
    (53) term -> . factor
    (75) boleano -> . TRUE
    (76) boleano -> . FALSE
    (54) factor -> . NUMBER
    (55) factor -> . STRING
    (56) factor -> . FLOAT
    (57) factor -> . VARIABLE
    (58) factor -> . LPAR expression RPAR

    RPAR            shift and go to state 244
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    NUMBER          shift and go to state 87
    STRING          shift and go to state 42
    FLOAT           shift and go to state 88
    VARIABLE        shift and go to state 89
    LPAR            shift and go to state 90

    expression                     shift and go to state 243
    term                           shift and go to state 23
    boleano                        shift and go to state 24
    factor                         shift and go to state 22

state 218

    (83) deleteValueHash -> VARIABLE POINT DELETE LPAR expression . RPAR

    RPAR            shift and go to state 245


state 219

    (95) insertArray -> VARIABLE POINT INSERT LPAR argumentosA . RPAR

    RPAR            shift and go to state 246


state 220

    (94) argumentosA -> NUMBER . COMMA factor

    COMMA           shift and go to state 247


state 221

    (96) deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER . RPAR

    RPAR            shift and go to state 248


state 222

    (102) searchStack -> VARIABLE POINT SEARCH LPAR factor . RPAR

    RPAR            shift and go to state 249


state 223

    (103) pushStack -> VARIABLE POINT PUSH LPAR factor . RPAR

    RPAR            shift and go to state 250


state 224

    (138) funciones -> encabezado repCuerpo RETURN expression END .

    $end            reduce using rule 138 (funciones -> encabezado repCuerpo RETURN expression END .)


state 225

    (70) condicional -> IF comparacion D_POINT repCuerpo END .
    (71) condicional -> IF comparacion D_POINT repCuerpo END . cond_else
    (72) cond_else -> . ELSE D_POINT repCuerpo END

    $end            reduce using rule 70 (condicional -> IF comparacion D_POINT repCuerpo END .)
    VARIABLE        reduce using rule 70 (condicional -> IF comparacion D_POINT repCuerpo END .)
    IF              reduce using rule 70 (condicional -> IF comparacion D_POINT repCuerpo END .)
    PUTS            reduce using rule 70 (condicional -> IF comparacion D_POINT repCuerpo END .)
    FOR             reduce using rule 70 (condicional -> IF comparacion D_POINT repCuerpo END .)
    WHILE           reduce using rule 70 (condicional -> IF comparacion D_POINT repCuerpo END .)
    TRUE            reduce using rule 70 (condicional -> IF comparacion D_POINT repCuerpo END .)
    FALSE           reduce using rule 70 (condicional -> IF comparacion D_POINT repCuerpo END .)
    LPAR            reduce using rule 70 (condicional -> IF comparacion D_POINT repCuerpo END .)
    NUMBER          reduce using rule 70 (condicional -> IF comparacion D_POINT repCuerpo END .)
    STRING          reduce using rule 70 (condicional -> IF comparacion D_POINT repCuerpo END .)
    FLOAT           reduce using rule 70 (condicional -> IF comparacion D_POINT repCuerpo END .)
    MINUS           reduce using rule 70 (condicional -> IF comparacion D_POINT repCuerpo END .)
    END             reduce using rule 70 (condicional -> IF comparacion D_POINT repCuerpo END .)
    RETURN          reduce using rule 70 (condicional -> IF comparacion D_POINT repCuerpo END .)
    ELSE            shift and go to state 252

    cond_else                      shift and go to state 251

state 226

    (86) while -> WHILE LPAR comparacion RPAR repCuerpo . END
    (87) while -> WHILE LPAR comparacion RPAR repCuerpo . END while

    END             shift and go to state 253


state 227

    (126) exponenciacion -> LPAR operadores RPAR EXPONENTIATION operadores .

    $end            reduce using rule 126 (exponenciacion -> LPAR operadores RPAR EXPONENTIATION operadores .)
    VARIABLE        reduce using rule 126 (exponenciacion -> LPAR operadores RPAR EXPONENTIATION operadores .)
    IF              reduce using rule 126 (exponenciacion -> LPAR operadores RPAR EXPONENTIATION operadores .)
    PUTS            reduce using rule 126 (exponenciacion -> LPAR operadores RPAR EXPONENTIATION operadores .)
    FOR             reduce using rule 126 (exponenciacion -> LPAR operadores RPAR EXPONENTIATION operadores .)
    WHILE           reduce using rule 126 (exponenciacion -> LPAR operadores RPAR EXPONENTIATION operadores .)
    TRUE            reduce using rule 126 (exponenciacion -> LPAR operadores RPAR EXPONENTIATION operadores .)
    FALSE           reduce using rule 126 (exponenciacion -> LPAR operadores RPAR EXPONENTIATION operadores .)
    LPAR            reduce using rule 126 (exponenciacion -> LPAR operadores RPAR EXPONENTIATION operadores .)
    NUMBER          reduce using rule 126 (exponenciacion -> LPAR operadores RPAR EXPONENTIATION operadores .)
    STRING          reduce using rule 126 (exponenciacion -> LPAR operadores RPAR EXPONENTIATION operadores .)
    FLOAT           reduce using rule 126 (exponenciacion -> LPAR operadores RPAR EXPONENTIATION operadores .)
    MINUS           reduce using rule 126 (exponenciacion -> LPAR operadores RPAR EXPONENTIATION operadores .)
    END             reduce using rule 126 (exponenciacion -> LPAR operadores RPAR EXPONENTIATION operadores .)
    RETURN          reduce using rule 126 (exponenciacion -> LPAR operadores RPAR EXPONENTIATION operadores .)
    RPAR            reduce using rule 126 (exponenciacion -> LPAR operadores RPAR EXPONENTIATION operadores .)


state 228

    (127) exponenciacion -> LPAR opMatematicas RPAR EXPONENTIATION operadores .

    $end            reduce using rule 127 (exponenciacion -> LPAR opMatematicas RPAR EXPONENTIATION operadores .)
    VARIABLE        reduce using rule 127 (exponenciacion -> LPAR opMatematicas RPAR EXPONENTIATION operadores .)
    IF              reduce using rule 127 (exponenciacion -> LPAR opMatematicas RPAR EXPONENTIATION operadores .)
    PUTS            reduce using rule 127 (exponenciacion -> LPAR opMatematicas RPAR EXPONENTIATION operadores .)
    FOR             reduce using rule 127 (exponenciacion -> LPAR opMatematicas RPAR EXPONENTIATION operadores .)
    WHILE           reduce using rule 127 (exponenciacion -> LPAR opMatematicas RPAR EXPONENTIATION operadores .)
    TRUE            reduce using rule 127 (exponenciacion -> LPAR opMatematicas RPAR EXPONENTIATION operadores .)
    FALSE           reduce using rule 127 (exponenciacion -> LPAR opMatematicas RPAR EXPONENTIATION operadores .)
    LPAR            reduce using rule 127 (exponenciacion -> LPAR opMatematicas RPAR EXPONENTIATION operadores .)
    NUMBER          reduce using rule 127 (exponenciacion -> LPAR opMatematicas RPAR EXPONENTIATION operadores .)
    STRING          reduce using rule 127 (exponenciacion -> LPAR opMatematicas RPAR EXPONENTIATION operadores .)
    FLOAT           reduce using rule 127 (exponenciacion -> LPAR opMatematicas RPAR EXPONENTIATION operadores .)
    MINUS           reduce using rule 127 (exponenciacion -> LPAR opMatematicas RPAR EXPONENTIATION operadores .)
    END             reduce using rule 127 (exponenciacion -> LPAR opMatematicas RPAR EXPONENTIATION operadores .)
    RETURN          reduce using rule 127 (exponenciacion -> LPAR opMatematicas RPAR EXPONENTIATION operadores .)
    RPAR            reduce using rule 127 (exponenciacion -> LPAR opMatematicas RPAR EXPONENTIATION operadores .)


state 229

    (97) for -> FOR VARIABLE IN NUMBER POINT . POINT NUMBER DO repCuerpo END
    (98) for -> FOR VARIABLE IN NUMBER POINT . POINT NUMBER DO repCuerpo END for

    POINT           shift and go to state 254


state 230

    (135) encabezado -> DEF VARIABLE LPAR parametros RPAR .

    RETURN          reduce using rule 135 (encabezado -> DEF VARIABLE LPAR parametros RPAR .)
    VARIABLE        reduce using rule 135 (encabezado -> DEF VARIABLE LPAR parametros RPAR .)
    IF              reduce using rule 135 (encabezado -> DEF VARIABLE LPAR parametros RPAR .)
    PUTS            reduce using rule 135 (encabezado -> DEF VARIABLE LPAR parametros RPAR .)
    FOR             reduce using rule 135 (encabezado -> DEF VARIABLE LPAR parametros RPAR .)
    WHILE           reduce using rule 135 (encabezado -> DEF VARIABLE LPAR parametros RPAR .)
    TRUE            reduce using rule 135 (encabezado -> DEF VARIABLE LPAR parametros RPAR .)
    FALSE           reduce using rule 135 (encabezado -> DEF VARIABLE LPAR parametros RPAR .)
    LPAR            reduce using rule 135 (encabezado -> DEF VARIABLE LPAR parametros RPAR .)
    NUMBER          reduce using rule 135 (encabezado -> DEF VARIABLE LPAR parametros RPAR .)
    STRING          reduce using rule 135 (encabezado -> DEF VARIABLE LPAR parametros RPAR .)
    FLOAT           reduce using rule 135 (encabezado -> DEF VARIABLE LPAR parametros RPAR .)
    MINUS           reduce using rule 135 (encabezado -> DEF VARIABLE LPAR parametros RPAR .)


state 231

    (112) suma -> operadores PLUS LPAR operadores RPAR .
    (126) exponenciacion -> LPAR operadores RPAR . EXPONENTIATION operadores

    $end            reduce using rule 112 (suma -> operadores PLUS LPAR operadores RPAR .)
    VARIABLE        reduce using rule 112 (suma -> operadores PLUS LPAR operadores RPAR .)
    IF              reduce using rule 112 (suma -> operadores PLUS LPAR operadores RPAR .)
    PUTS            reduce using rule 112 (suma -> operadores PLUS LPAR operadores RPAR .)
    FOR             reduce using rule 112 (suma -> operadores PLUS LPAR operadores RPAR .)
    WHILE           reduce using rule 112 (suma -> operadores PLUS LPAR operadores RPAR .)
    TRUE            reduce using rule 112 (suma -> operadores PLUS LPAR operadores RPAR .)
    FALSE           reduce using rule 112 (suma -> operadores PLUS LPAR operadores RPAR .)
    LPAR            reduce using rule 112 (suma -> operadores PLUS LPAR operadores RPAR .)
    NUMBER          reduce using rule 112 (suma -> operadores PLUS LPAR operadores RPAR .)
    STRING          reduce using rule 112 (suma -> operadores PLUS LPAR operadores RPAR .)
    FLOAT           reduce using rule 112 (suma -> operadores PLUS LPAR operadores RPAR .)
    MINUS           reduce using rule 112 (suma -> operadores PLUS LPAR operadores RPAR .)
    END             reduce using rule 112 (suma -> operadores PLUS LPAR operadores RPAR .)
    RETURN          reduce using rule 112 (suma -> operadores PLUS LPAR operadores RPAR .)
    RPAR            reduce using rule 112 (suma -> operadores PLUS LPAR operadores RPAR .)
    EXPONENTIATION  shift and go to state 193


state 232

    (113) suma -> operadores PLUS LPAR opMatematicas RPAR .
    (127) exponenciacion -> LPAR opMatematicas RPAR . EXPONENTIATION operadores

    $end            reduce using rule 113 (suma -> operadores PLUS LPAR opMatematicas RPAR .)
    VARIABLE        reduce using rule 113 (suma -> operadores PLUS LPAR opMatematicas RPAR .)
    IF              reduce using rule 113 (suma -> operadores PLUS LPAR opMatematicas RPAR .)
    PUTS            reduce using rule 113 (suma -> operadores PLUS LPAR opMatematicas RPAR .)
    FOR             reduce using rule 113 (suma -> operadores PLUS LPAR opMatematicas RPAR .)
    WHILE           reduce using rule 113 (suma -> operadores PLUS LPAR opMatematicas RPAR .)
    TRUE            reduce using rule 113 (suma -> operadores PLUS LPAR opMatematicas RPAR .)
    FALSE           reduce using rule 113 (suma -> operadores PLUS LPAR opMatematicas RPAR .)
    LPAR            reduce using rule 113 (suma -> operadores PLUS LPAR opMatematicas RPAR .)
    NUMBER          reduce using rule 113 (suma -> operadores PLUS LPAR opMatematicas RPAR .)
    STRING          reduce using rule 113 (suma -> operadores PLUS LPAR opMatematicas RPAR .)
    FLOAT           reduce using rule 113 (suma -> operadores PLUS LPAR opMatematicas RPAR .)
    MINUS           reduce using rule 113 (suma -> operadores PLUS LPAR opMatematicas RPAR .)
    END             reduce using rule 113 (suma -> operadores PLUS LPAR opMatematicas RPAR .)
    RETURN          reduce using rule 113 (suma -> operadores PLUS LPAR opMatematicas RPAR .)
    RPAR            reduce using rule 113 (suma -> operadores PLUS LPAR opMatematicas RPAR .)
    EXPONENTIATION  shift and go to state 194


state 233

    (117) resta -> operadores MINUS LPAR operadores RPAR .
    (126) exponenciacion -> LPAR operadores RPAR . EXPONENTIATION operadores

    $end            reduce using rule 117 (resta -> operadores MINUS LPAR operadores RPAR .)
    VARIABLE        reduce using rule 117 (resta -> operadores MINUS LPAR operadores RPAR .)
    IF              reduce using rule 117 (resta -> operadores MINUS LPAR operadores RPAR .)
    PUTS            reduce using rule 117 (resta -> operadores MINUS LPAR operadores RPAR .)
    FOR             reduce using rule 117 (resta -> operadores MINUS LPAR operadores RPAR .)
    WHILE           reduce using rule 117 (resta -> operadores MINUS LPAR operadores RPAR .)
    TRUE            reduce using rule 117 (resta -> operadores MINUS LPAR operadores RPAR .)
    FALSE           reduce using rule 117 (resta -> operadores MINUS LPAR operadores RPAR .)
    LPAR            reduce using rule 117 (resta -> operadores MINUS LPAR operadores RPAR .)
    NUMBER          reduce using rule 117 (resta -> operadores MINUS LPAR operadores RPAR .)
    STRING          reduce using rule 117 (resta -> operadores MINUS LPAR operadores RPAR .)
    FLOAT           reduce using rule 117 (resta -> operadores MINUS LPAR operadores RPAR .)
    MINUS           reduce using rule 117 (resta -> operadores MINUS LPAR operadores RPAR .)
    END             reduce using rule 117 (resta -> operadores MINUS LPAR operadores RPAR .)
    RETURN          reduce using rule 117 (resta -> operadores MINUS LPAR operadores RPAR .)
    RPAR            reduce using rule 117 (resta -> operadores MINUS LPAR operadores RPAR .)
    EXPONENTIATION  shift and go to state 193


state 234

    (118) resta -> operadores MINUS LPAR opMatematicas RPAR .
    (127) exponenciacion -> LPAR opMatematicas RPAR . EXPONENTIATION operadores

    $end            reduce using rule 118 (resta -> operadores MINUS LPAR opMatematicas RPAR .)
    VARIABLE        reduce using rule 118 (resta -> operadores MINUS LPAR opMatematicas RPAR .)
    IF              reduce using rule 118 (resta -> operadores MINUS LPAR opMatematicas RPAR .)
    PUTS            reduce using rule 118 (resta -> operadores MINUS LPAR opMatematicas RPAR .)
    FOR             reduce using rule 118 (resta -> operadores MINUS LPAR opMatematicas RPAR .)
    WHILE           reduce using rule 118 (resta -> operadores MINUS LPAR opMatematicas RPAR .)
    TRUE            reduce using rule 118 (resta -> operadores MINUS LPAR opMatematicas RPAR .)
    FALSE           reduce using rule 118 (resta -> operadores MINUS LPAR opMatematicas RPAR .)
    LPAR            reduce using rule 118 (resta -> operadores MINUS LPAR opMatematicas RPAR .)
    NUMBER          reduce using rule 118 (resta -> operadores MINUS LPAR opMatematicas RPAR .)
    STRING          reduce using rule 118 (resta -> operadores MINUS LPAR opMatematicas RPAR .)
    FLOAT           reduce using rule 118 (resta -> operadores MINUS LPAR opMatematicas RPAR .)
    MINUS           reduce using rule 118 (resta -> operadores MINUS LPAR opMatematicas RPAR .)
    END             reduce using rule 118 (resta -> operadores MINUS LPAR opMatematicas RPAR .)
    RETURN          reduce using rule 118 (resta -> operadores MINUS LPAR opMatematicas RPAR .)
    RPAR            reduce using rule 118 (resta -> operadores MINUS LPAR opMatematicas RPAR .)
    EXPONENTIATION  shift and go to state 194


state 235

    (120) multiplicacion -> operadores TIMES LPAR operadores RPAR .

    $end            reduce using rule 120 (multiplicacion -> operadores TIMES LPAR operadores RPAR .)
    VARIABLE        reduce using rule 120 (multiplicacion -> operadores TIMES LPAR operadores RPAR .)
    IF              reduce using rule 120 (multiplicacion -> operadores TIMES LPAR operadores RPAR .)
    PUTS            reduce using rule 120 (multiplicacion -> operadores TIMES LPAR operadores RPAR .)
    FOR             reduce using rule 120 (multiplicacion -> operadores TIMES LPAR operadores RPAR .)
    WHILE           reduce using rule 120 (multiplicacion -> operadores TIMES LPAR operadores RPAR .)
    TRUE            reduce using rule 120 (multiplicacion -> operadores TIMES LPAR operadores RPAR .)
    FALSE           reduce using rule 120 (multiplicacion -> operadores TIMES LPAR operadores RPAR .)
    LPAR            reduce using rule 120 (multiplicacion -> operadores TIMES LPAR operadores RPAR .)
    NUMBER          reduce using rule 120 (multiplicacion -> operadores TIMES LPAR operadores RPAR .)
    STRING          reduce using rule 120 (multiplicacion -> operadores TIMES LPAR operadores RPAR .)
    FLOAT           reduce using rule 120 (multiplicacion -> operadores TIMES LPAR operadores RPAR .)
    MINUS           reduce using rule 120 (multiplicacion -> operadores TIMES LPAR operadores RPAR .)
    END             reduce using rule 120 (multiplicacion -> operadores TIMES LPAR operadores RPAR .)
    RETURN          reduce using rule 120 (multiplicacion -> operadores TIMES LPAR operadores RPAR .)
    RPAR            reduce using rule 120 (multiplicacion -> operadores TIMES LPAR operadores RPAR .)


state 236

    (121) multiplicacion -> operadores TIMES LPAR opMatematicas RPAR .

    $end            reduce using rule 121 (multiplicacion -> operadores TIMES LPAR opMatematicas RPAR .)
    VARIABLE        reduce using rule 121 (multiplicacion -> operadores TIMES LPAR opMatematicas RPAR .)
    IF              reduce using rule 121 (multiplicacion -> operadores TIMES LPAR opMatematicas RPAR .)
    PUTS            reduce using rule 121 (multiplicacion -> operadores TIMES LPAR opMatematicas RPAR .)
    FOR             reduce using rule 121 (multiplicacion -> operadores TIMES LPAR opMatematicas RPAR .)
    WHILE           reduce using rule 121 (multiplicacion -> operadores TIMES LPAR opMatematicas RPAR .)
    TRUE            reduce using rule 121 (multiplicacion -> operadores TIMES LPAR opMatematicas RPAR .)
    FALSE           reduce using rule 121 (multiplicacion -> operadores TIMES LPAR opMatematicas RPAR .)
    LPAR            reduce using rule 121 (multiplicacion -> operadores TIMES LPAR opMatematicas RPAR .)
    NUMBER          reduce using rule 121 (multiplicacion -> operadores TIMES LPAR opMatematicas RPAR .)
    STRING          reduce using rule 121 (multiplicacion -> operadores TIMES LPAR opMatematicas RPAR .)
    FLOAT           reduce using rule 121 (multiplicacion -> operadores TIMES LPAR opMatematicas RPAR .)
    MINUS           reduce using rule 121 (multiplicacion -> operadores TIMES LPAR opMatematicas RPAR .)
    END             reduce using rule 121 (multiplicacion -> operadores TIMES LPAR opMatematicas RPAR .)
    RETURN          reduce using rule 121 (multiplicacion -> operadores TIMES LPAR opMatematicas RPAR .)
    RPAR            reduce using rule 121 (multiplicacion -> operadores TIMES LPAR opMatematicas RPAR .)


state 237

    (123) division -> operadores DIVIDE LPAR operadores RPAR .

    $end            reduce using rule 123 (division -> operadores DIVIDE LPAR operadores RPAR .)
    VARIABLE        reduce using rule 123 (division -> operadores DIVIDE LPAR operadores RPAR .)
    IF              reduce using rule 123 (division -> operadores DIVIDE LPAR operadores RPAR .)
    PUTS            reduce using rule 123 (division -> operadores DIVIDE LPAR operadores RPAR .)
    FOR             reduce using rule 123 (division -> operadores DIVIDE LPAR operadores RPAR .)
    WHILE           reduce using rule 123 (division -> operadores DIVIDE LPAR operadores RPAR .)
    TRUE            reduce using rule 123 (division -> operadores DIVIDE LPAR operadores RPAR .)
    FALSE           reduce using rule 123 (division -> operadores DIVIDE LPAR operadores RPAR .)
    LPAR            reduce using rule 123 (division -> operadores DIVIDE LPAR operadores RPAR .)
    NUMBER          reduce using rule 123 (division -> operadores DIVIDE LPAR operadores RPAR .)
    STRING          reduce using rule 123 (division -> operadores DIVIDE LPAR operadores RPAR .)
    FLOAT           reduce using rule 123 (division -> operadores DIVIDE LPAR operadores RPAR .)
    MINUS           reduce using rule 123 (division -> operadores DIVIDE LPAR operadores RPAR .)
    END             reduce using rule 123 (division -> operadores DIVIDE LPAR operadores RPAR .)
    RETURN          reduce using rule 123 (division -> operadores DIVIDE LPAR operadores RPAR .)
    RPAR            reduce using rule 123 (division -> operadores DIVIDE LPAR operadores RPAR .)


state 238

    (124) division -> operadores DIVIDE LPAR opMatematicas RPAR .

    $end            reduce using rule 124 (division -> operadores DIVIDE LPAR opMatematicas RPAR .)
    VARIABLE        reduce using rule 124 (division -> operadores DIVIDE LPAR opMatematicas RPAR .)
    IF              reduce using rule 124 (division -> operadores DIVIDE LPAR opMatematicas RPAR .)
    PUTS            reduce using rule 124 (division -> operadores DIVIDE LPAR opMatematicas RPAR .)
    FOR             reduce using rule 124 (division -> operadores DIVIDE LPAR opMatematicas RPAR .)
    WHILE           reduce using rule 124 (division -> operadores DIVIDE LPAR opMatematicas RPAR .)
    TRUE            reduce using rule 124 (division -> operadores DIVIDE LPAR opMatematicas RPAR .)
    FALSE           reduce using rule 124 (division -> operadores DIVIDE LPAR opMatematicas RPAR .)
    LPAR            reduce using rule 124 (division -> operadores DIVIDE LPAR opMatematicas RPAR .)
    NUMBER          reduce using rule 124 (division -> operadores DIVIDE LPAR opMatematicas RPAR .)
    STRING          reduce using rule 124 (division -> operadores DIVIDE LPAR opMatematicas RPAR .)
    FLOAT           reduce using rule 124 (division -> operadores DIVIDE LPAR opMatematicas RPAR .)
    MINUS           reduce using rule 124 (division -> operadores DIVIDE LPAR opMatematicas RPAR .)
    END             reduce using rule 124 (division -> operadores DIVIDE LPAR opMatematicas RPAR .)
    RETURN          reduce using rule 124 (division -> operadores DIVIDE LPAR opMatematicas RPAR .)
    RPAR            reduce using rule 124 (division -> operadores DIVIDE LPAR opMatematicas RPAR .)


state 239

    (80) getValueHash -> VARIABLE LCOR expression RCOR .

    $end            reduce using rule 80 (getValueHash -> VARIABLE LCOR expression RCOR .)
    VARIABLE        reduce using rule 80 (getValueHash -> VARIABLE LCOR expression RCOR .)
    IF              reduce using rule 80 (getValueHash -> VARIABLE LCOR expression RCOR .)
    PUTS            reduce using rule 80 (getValueHash -> VARIABLE LCOR expression RCOR .)
    FOR             reduce using rule 80 (getValueHash -> VARIABLE LCOR expression RCOR .)
    WHILE           reduce using rule 80 (getValueHash -> VARIABLE LCOR expression RCOR .)
    TRUE            reduce using rule 80 (getValueHash -> VARIABLE LCOR expression RCOR .)
    FALSE           reduce using rule 80 (getValueHash -> VARIABLE LCOR expression RCOR .)
    LPAR            reduce using rule 80 (getValueHash -> VARIABLE LCOR expression RCOR .)
    NUMBER          reduce using rule 80 (getValueHash -> VARIABLE LCOR expression RCOR .)
    STRING          reduce using rule 80 (getValueHash -> VARIABLE LCOR expression RCOR .)
    FLOAT           reduce using rule 80 (getValueHash -> VARIABLE LCOR expression RCOR .)
    MINUS           reduce using rule 80 (getValueHash -> VARIABLE LCOR expression RCOR .)
    END             reduce using rule 80 (getValueHash -> VARIABLE LCOR expression RCOR .)
    RETURN          reduce using rule 80 (getValueHash -> VARIABLE LCOR expression RCOR .)


state 240

    (78) cuerpoHash -> expression ASIGN GREATER . expression
    (79) cuerpoHash -> expression ASIGN GREATER . expression COMMA cuerpoHash
    (51) expression -> . term
    (52) expression -> . boleano
    (53) term -> . factor
    (75) boleano -> . TRUE
    (76) boleano -> . FALSE
    (54) factor -> . NUMBER
    (55) factor -> . STRING
    (56) factor -> . FLOAT
    (57) factor -> . VARIABLE
    (58) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    NUMBER          shift and go to state 87
    STRING          shift and go to state 42
    FLOAT           shift and go to state 88
    VARIABLE        shift and go to state 89
    LPAR            shift and go to state 90

    expression                     shift and go to state 255
    term                           shift and go to state 23
    boleano                        shift and go to state 24
    factor                         shift and go to state 22

state 241

    (91) parametrosA -> factor COMMA parametrosA .

    RCOR            reduce using rule 91 (parametrosA -> factor COMMA parametrosA .)


state 242

    (81) addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .
    (82) modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .

  ! reduce/reduce conflict for $end resolved using rule 81 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 81 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
  ! reduce/reduce conflict for IF resolved using rule 81 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
  ! reduce/reduce conflict for PUTS resolved using rule 81 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
  ! reduce/reduce conflict for FOR resolved using rule 81 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 81 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
  ! reduce/reduce conflict for TRUE resolved using rule 81 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
  ! reduce/reduce conflict for FALSE resolved using rule 81 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
  ! reduce/reduce conflict for LPAR resolved using rule 81 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
  ! reduce/reduce conflict for NUMBER resolved using rule 81 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
  ! reduce/reduce conflict for STRING resolved using rule 81 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
  ! reduce/reduce conflict for FLOAT resolved using rule 81 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
  ! reduce/reduce conflict for MINUS resolved using rule 81 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
  ! reduce/reduce conflict for END resolved using rule 81 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
  ! reduce/reduce conflict for RETURN resolved using rule 81 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
    $end            reduce using rule 81 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
    VARIABLE        reduce using rule 81 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
    IF              reduce using rule 81 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
    PUTS            reduce using rule 81 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
    FOR             reduce using rule 81 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
    WHILE           reduce using rule 81 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
    TRUE            reduce using rule 81 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
    FALSE           reduce using rule 81 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
    LPAR            reduce using rule 81 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
    NUMBER          reduce using rule 81 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
    STRING          reduce using rule 81 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
    FLOAT           reduce using rule 81 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
    MINUS           reduce using rule 81 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
    END             reduce using rule 81 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
    RETURN          reduce using rule 81 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)

  ! $end            [ reduce using rule 82 (modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .) ]
  ! VARIABLE        [ reduce using rule 82 (modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .) ]
  ! IF              [ reduce using rule 82 (modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .) ]
  ! PUTS            [ reduce using rule 82 (modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .) ]
  ! FOR             [ reduce using rule 82 (modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .) ]
  ! WHILE           [ reduce using rule 82 (modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .) ]
  ! TRUE            [ reduce using rule 82 (modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .) ]
  ! FALSE           [ reduce using rule 82 (modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .) ]
  ! LPAR            [ reduce using rule 82 (modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .) ]
  ! NUMBER          [ reduce using rule 82 (modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .) ]
  ! STRING          [ reduce using rule 82 (modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .) ]
  ! FLOAT           [ reduce using rule 82 (modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .) ]
  ! MINUS           [ reduce using rule 82 (modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .) ]
  ! END             [ reduce using rule 82 (modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .) ]
  ! RETURN          [ reduce using rule 82 (modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .) ]


state 243

    (84) metodoBoleano -> VARIABLE POINT VARIABLE QUESTION LPAR expression . RPAR

    RPAR            shift and go to state 256


state 244

    (85) metodoBoleano -> VARIABLE POINT VARIABLE QUESTION LPAR RPAR .

    $end            reduce using rule 85 (metodoBoleano -> VARIABLE POINT VARIABLE QUESTION LPAR RPAR .)


state 245

    (83) deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR .

    $end            reduce using rule 83 (deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR .)
    VARIABLE        reduce using rule 83 (deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR .)
    IF              reduce using rule 83 (deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR .)
    PUTS            reduce using rule 83 (deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR .)
    FOR             reduce using rule 83 (deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR .)
    WHILE           reduce using rule 83 (deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR .)
    TRUE            reduce using rule 83 (deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR .)
    FALSE           reduce using rule 83 (deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR .)
    LPAR            reduce using rule 83 (deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR .)
    NUMBER          reduce using rule 83 (deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR .)
    STRING          reduce using rule 83 (deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR .)
    FLOAT           reduce using rule 83 (deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR .)
    MINUS           reduce using rule 83 (deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR .)
    END             reduce using rule 83 (deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR .)
    RETURN          reduce using rule 83 (deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR .)


state 246

    (95) insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR .

    $end            reduce using rule 95 (insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR .)
    VARIABLE        reduce using rule 95 (insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR .)
    IF              reduce using rule 95 (insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR .)
    PUTS            reduce using rule 95 (insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR .)
    FOR             reduce using rule 95 (insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR .)
    WHILE           reduce using rule 95 (insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR .)
    TRUE            reduce using rule 95 (insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR .)
    FALSE           reduce using rule 95 (insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR .)
    LPAR            reduce using rule 95 (insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR .)
    NUMBER          reduce using rule 95 (insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR .)
    STRING          reduce using rule 95 (insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR .)
    FLOAT           reduce using rule 95 (insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR .)
    MINUS           reduce using rule 95 (insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR .)
    END             reduce using rule 95 (insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR .)
    RETURN          reduce using rule 95 (insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR .)


state 247

    (94) argumentosA -> NUMBER COMMA . factor
    (54) factor -> . NUMBER
    (55) factor -> . STRING
    (56) factor -> . FLOAT
    (57) factor -> . VARIABLE
    (58) factor -> . LPAR expression RPAR

    NUMBER          shift and go to state 87
    STRING          shift and go to state 42
    FLOAT           shift and go to state 88
    VARIABLE        shift and go to state 89
    LPAR            shift and go to state 90

    factor                         shift and go to state 257

state 248

    (96) deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR .

    $end            reduce using rule 96 (deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR .)
    VARIABLE        reduce using rule 96 (deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR .)
    IF              reduce using rule 96 (deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR .)
    PUTS            reduce using rule 96 (deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR .)
    FOR             reduce using rule 96 (deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR .)
    WHILE           reduce using rule 96 (deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR .)
    TRUE            reduce using rule 96 (deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR .)
    FALSE           reduce using rule 96 (deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR .)
    LPAR            reduce using rule 96 (deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR .)
    NUMBER          reduce using rule 96 (deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR .)
    STRING          reduce using rule 96 (deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR .)
    FLOAT           reduce using rule 96 (deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR .)
    MINUS           reduce using rule 96 (deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR .)
    END             reduce using rule 96 (deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR .)
    RETURN          reduce using rule 96 (deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR .)


state 249

    (102) searchStack -> VARIABLE POINT SEARCH LPAR factor RPAR .

    $end            reduce using rule 102 (searchStack -> VARIABLE POINT SEARCH LPAR factor RPAR .)
    VARIABLE        reduce using rule 102 (searchStack -> VARIABLE POINT SEARCH LPAR factor RPAR .)
    IF              reduce using rule 102 (searchStack -> VARIABLE POINT SEARCH LPAR factor RPAR .)
    PUTS            reduce using rule 102 (searchStack -> VARIABLE POINT SEARCH LPAR factor RPAR .)
    FOR             reduce using rule 102 (searchStack -> VARIABLE POINT SEARCH LPAR factor RPAR .)
    WHILE           reduce using rule 102 (searchStack -> VARIABLE POINT SEARCH LPAR factor RPAR .)
    TRUE            reduce using rule 102 (searchStack -> VARIABLE POINT SEARCH LPAR factor RPAR .)
    FALSE           reduce using rule 102 (searchStack -> VARIABLE POINT SEARCH LPAR factor RPAR .)
    LPAR            reduce using rule 102 (searchStack -> VARIABLE POINT SEARCH LPAR factor RPAR .)
    NUMBER          reduce using rule 102 (searchStack -> VARIABLE POINT SEARCH LPAR factor RPAR .)
    STRING          reduce using rule 102 (searchStack -> VARIABLE POINT SEARCH LPAR factor RPAR .)
    FLOAT           reduce using rule 102 (searchStack -> VARIABLE POINT SEARCH LPAR factor RPAR .)
    MINUS           reduce using rule 102 (searchStack -> VARIABLE POINT SEARCH LPAR factor RPAR .)
    END             reduce using rule 102 (searchStack -> VARIABLE POINT SEARCH LPAR factor RPAR .)
    RETURN          reduce using rule 102 (searchStack -> VARIABLE POINT SEARCH LPAR factor RPAR .)


state 250

    (103) pushStack -> VARIABLE POINT PUSH LPAR factor RPAR .

    $end            reduce using rule 103 (pushStack -> VARIABLE POINT PUSH LPAR factor RPAR .)
    VARIABLE        reduce using rule 103 (pushStack -> VARIABLE POINT PUSH LPAR factor RPAR .)
    IF              reduce using rule 103 (pushStack -> VARIABLE POINT PUSH LPAR factor RPAR .)
    PUTS            reduce using rule 103 (pushStack -> VARIABLE POINT PUSH LPAR factor RPAR .)
    FOR             reduce using rule 103 (pushStack -> VARIABLE POINT PUSH LPAR factor RPAR .)
    WHILE           reduce using rule 103 (pushStack -> VARIABLE POINT PUSH LPAR factor RPAR .)
    TRUE            reduce using rule 103 (pushStack -> VARIABLE POINT PUSH LPAR factor RPAR .)
    FALSE           reduce using rule 103 (pushStack -> VARIABLE POINT PUSH LPAR factor RPAR .)
    LPAR            reduce using rule 103 (pushStack -> VARIABLE POINT PUSH LPAR factor RPAR .)
    NUMBER          reduce using rule 103 (pushStack -> VARIABLE POINT PUSH LPAR factor RPAR .)
    STRING          reduce using rule 103 (pushStack -> VARIABLE POINT PUSH LPAR factor RPAR .)
    FLOAT           reduce using rule 103 (pushStack -> VARIABLE POINT PUSH LPAR factor RPAR .)
    MINUS           reduce using rule 103 (pushStack -> VARIABLE POINT PUSH LPAR factor RPAR .)
    END             reduce using rule 103 (pushStack -> VARIABLE POINT PUSH LPAR factor RPAR .)
    RETURN          reduce using rule 103 (pushStack -> VARIABLE POINT PUSH LPAR factor RPAR .)


state 251

    (71) condicional -> IF comparacion D_POINT repCuerpo END cond_else .

    $end            reduce using rule 71 (condicional -> IF comparacion D_POINT repCuerpo END cond_else .)
    VARIABLE        reduce using rule 71 (condicional -> IF comparacion D_POINT repCuerpo END cond_else .)
    IF              reduce using rule 71 (condicional -> IF comparacion D_POINT repCuerpo END cond_else .)
    PUTS            reduce using rule 71 (condicional -> IF comparacion D_POINT repCuerpo END cond_else .)
    FOR             reduce using rule 71 (condicional -> IF comparacion D_POINT repCuerpo END cond_else .)
    WHILE           reduce using rule 71 (condicional -> IF comparacion D_POINT repCuerpo END cond_else .)
    TRUE            reduce using rule 71 (condicional -> IF comparacion D_POINT repCuerpo END cond_else .)
    FALSE           reduce using rule 71 (condicional -> IF comparacion D_POINT repCuerpo END cond_else .)
    LPAR            reduce using rule 71 (condicional -> IF comparacion D_POINT repCuerpo END cond_else .)
    NUMBER          reduce using rule 71 (condicional -> IF comparacion D_POINT repCuerpo END cond_else .)
    STRING          reduce using rule 71 (condicional -> IF comparacion D_POINT repCuerpo END cond_else .)
    FLOAT           reduce using rule 71 (condicional -> IF comparacion D_POINT repCuerpo END cond_else .)
    MINUS           reduce using rule 71 (condicional -> IF comparacion D_POINT repCuerpo END cond_else .)
    END             reduce using rule 71 (condicional -> IF comparacion D_POINT repCuerpo END cond_else .)
    RETURN          reduce using rule 71 (condicional -> IF comparacion D_POINT repCuerpo END cond_else .)


state 252

    (72) cond_else -> ELSE . D_POINT repCuerpo END

    D_POINT         shift and go to state 258


state 253

    (86) while -> WHILE LPAR comparacion RPAR repCuerpo END .
    (87) while -> WHILE LPAR comparacion RPAR repCuerpo END . while
    (86) while -> . WHILE LPAR comparacion RPAR repCuerpo END
    (87) while -> . WHILE LPAR comparacion RPAR repCuerpo END while

  ! shift/reduce conflict for WHILE resolved as shift
    $end            reduce using rule 86 (while -> WHILE LPAR comparacion RPAR repCuerpo END .)
    VARIABLE        reduce using rule 86 (while -> WHILE LPAR comparacion RPAR repCuerpo END .)
    IF              reduce using rule 86 (while -> WHILE LPAR comparacion RPAR repCuerpo END .)
    PUTS            reduce using rule 86 (while -> WHILE LPAR comparacion RPAR repCuerpo END .)
    FOR             reduce using rule 86 (while -> WHILE LPAR comparacion RPAR repCuerpo END .)
    TRUE            reduce using rule 86 (while -> WHILE LPAR comparacion RPAR repCuerpo END .)
    FALSE           reduce using rule 86 (while -> WHILE LPAR comparacion RPAR repCuerpo END .)
    LPAR            reduce using rule 86 (while -> WHILE LPAR comparacion RPAR repCuerpo END .)
    NUMBER          reduce using rule 86 (while -> WHILE LPAR comparacion RPAR repCuerpo END .)
    STRING          reduce using rule 86 (while -> WHILE LPAR comparacion RPAR repCuerpo END .)
    FLOAT           reduce using rule 86 (while -> WHILE LPAR comparacion RPAR repCuerpo END .)
    MINUS           reduce using rule 86 (while -> WHILE LPAR comparacion RPAR repCuerpo END .)
    END             reduce using rule 86 (while -> WHILE LPAR comparacion RPAR repCuerpo END .)
    RETURN          reduce using rule 86 (while -> WHILE LPAR comparacion RPAR repCuerpo END .)
    WHILE           shift and go to state 27

  ! WHILE           [ reduce using rule 86 (while -> WHILE LPAR comparacion RPAR repCuerpo END .) ]

    while                          shift and go to state 259

state 254

    (97) for -> FOR VARIABLE IN NUMBER POINT POINT . NUMBER DO repCuerpo END
    (98) for -> FOR VARIABLE IN NUMBER POINT POINT . NUMBER DO repCuerpo END for

    NUMBER          shift and go to state 260


state 255

    (78) cuerpoHash -> expression ASIGN GREATER expression .
    (79) cuerpoHash -> expression ASIGN GREATER expression . COMMA cuerpoHash

    RKEY            reduce using rule 78 (cuerpoHash -> expression ASIGN GREATER expression .)
    COMMA           shift and go to state 261


state 256

    (84) metodoBoleano -> VARIABLE POINT VARIABLE QUESTION LPAR expression RPAR .

    $end            reduce using rule 84 (metodoBoleano -> VARIABLE POINT VARIABLE QUESTION LPAR expression RPAR .)


state 257

    (94) argumentosA -> NUMBER COMMA factor .

    RPAR            reduce using rule 94 (argumentosA -> NUMBER COMMA factor .)


state 258

    (72) cond_else -> ELSE D_POINT . repCuerpo END
    (88) repCuerpo -> . cuerpo
    (89) repCuerpo -> . cuerpo repCuerpo
    (20) cuerpo -> . asignacion
    (21) cuerpo -> . expression
    (22) cuerpo -> . comparacion
    (23) cuerpo -> . condicional
    (24) cuerpo -> . impresion
    (25) cuerpo -> . for
    (26) cuerpo -> . while
    (27) cuerpo -> . input
    (28) cuerpo -> . callFuncion
    (29) cuerpo -> . addValueHash
    (30) cuerpo -> . modValueHash
    (31) cuerpo -> . deleteValueHash
    (32) cuerpo -> . insertArray
    (33) cuerpo -> . deleteArray
    (34) cuerpo -> . pushStack
    (35) cuerpo -> . searchStack
    (36) cuerpo -> . opMatematicas
    (37) asignacion -> . VARIABLE ASIGN expression
    (38) asignacion -> . VARIABLE ASIGN comparacion
    (39) asignacion -> . VARIABLE ASIGN callFuncion
    (40) asignacion -> . VARIABLE ASIGN diccionario
    (41) asignacion -> . VARIABLE ASIGN getValueHash
    (42) asignacion -> . VARIABLE ASIGN array
    (43) asignacion -> . VARIABLE ASIGN stack
    (44) asignacion -> . VARIABLE tipo_asignacion factor
    (45) asignacion -> . VARIABLE ASIGN opMatematicas
    (51) expression -> . term
    (52) expression -> . boleano
    (59) comparacion -> . expression comparador expression
    (60) comparacion -> . expression comparador expression AND comparacion
    (61) comparacion -> . expression comparador expression OR comparacion
    (62) comparacion -> . expression AND expression
    (63) comparacion -> . expression OR expression
    (70) condicional -> . IF comparacion D_POINT repCuerpo END
    (71) condicional -> . IF comparacion D_POINT repCuerpo END cond_else
    (73) impresion -> . PUTS factor
    (97) for -> . FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END
    (98) for -> . FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for
    (86) while -> . WHILE LPAR comparacion RPAR repCuerpo END
    (87) while -> . WHILE LPAR comparacion RPAR repCuerpo END while
    (74) input -> . VARIABLE ASIGN GETS
    (139) callFuncion -> . VARIABLE LPAR RPAR
    (140) callFuncion -> . VARIABLE LPAR parametros RPAR
    (81) addValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (82) modValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (83) deleteValueHash -> . VARIABLE POINT DELETE LPAR expression RPAR
    (95) insertArray -> . VARIABLE POINT INSERT LPAR argumentosA RPAR
    (96) deleteArray -> . VARIABLE POINT DELETE_AT LPAR NUMBER RPAR
    (103) pushStack -> . VARIABLE POINT PUSH LPAR factor RPAR
    (102) searchStack -> . VARIABLE POINT SEARCH LPAR factor RPAR
    (104) opMatematicas -> . suma
    (105) opMatematicas -> . resta
    (106) opMatematicas -> . multiplicacion
    (107) opMatematicas -> . division
    (108) opMatematicas -> . exponenciacion
    (53) term -> . factor
    (75) boleano -> . TRUE
    (76) boleano -> . FALSE
    (109) suma -> . VARIABLE PLUS NUMBER
    (110) suma -> . operadores PLUS operadores
    (111) suma -> . operadores PLUS opMatematicas
    (112) suma -> . operadores PLUS LPAR operadores RPAR
    (113) suma -> . operadores PLUS LPAR opMatematicas RPAR
    (114) resta -> . VARIABLE MINUS NUMBER
    (115) resta -> . operadores MINUS operadores
    (116) resta -> . operadores MINUS opMatematicas
    (117) resta -> . operadores MINUS LPAR operadores RPAR
    (118) resta -> . operadores MINUS LPAR opMatematicas RPAR
    (119) multiplicacion -> . operadores TIMES operadores
    (120) multiplicacion -> . operadores TIMES LPAR operadores RPAR
    (121) multiplicacion -> . operadores TIMES LPAR opMatematicas RPAR
    (122) division -> . operadores DIVIDE operadores
    (123) division -> . operadores DIVIDE LPAR operadores RPAR
    (124) division -> . operadores DIVIDE LPAR opMatematicas RPAR
    (125) exponenciacion -> . operadores EXPONENTIATION operadores
    (126) exponenciacion -> . LPAR operadores RPAR EXPONENTIATION operadores
    (127) exponenciacion -> . LPAR opMatematicas RPAR EXPONENTIATION operadores
    (54) factor -> . NUMBER
    (55) factor -> . STRING
    (56) factor -> . FLOAT
    (57) factor -> . VARIABLE
    (58) factor -> . LPAR expression RPAR
    (128) operadores -> . enteros
    (129) operadores -> . FLOAT
    (130) enteros -> . NUMBER
    (131) enteros -> . MINUS NUMBER

    VARIABLE        shift and go to state 84
    IF              shift and go to state 26
    PUTS            shift and go to state 31
    FOR             shift and go to state 29
    WHILE           shift and go to state 27
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    LPAR            shift and go to state 28
    NUMBER          shift and go to state 30
    STRING          shift and go to state 42
    FLOAT           shift and go to state 43
    MINUS           shift and go to state 41

    repCuerpo                      shift and go to state 262
    cuerpo                         shift and go to state 67
    asignacion                     shift and go to state 68
    expression                     shift and go to state 66
    comparacion                    shift and go to state 69
    condicional                    shift and go to state 70
    impresion                      shift and go to state 71
    for                            shift and go to state 72
    while                          shift and go to state 73
    input                          shift and go to state 74
    callFuncion                    shift and go to state 75
    addValueHash                   shift and go to state 76
    modValueHash                   shift and go to state 77
    deleteValueHash                shift and go to state 78
    insertArray                    shift and go to state 79
    deleteArray                    shift and go to state 80
    pushStack                      shift and go to state 81
    searchStack                    shift and go to state 82
    opMatematicas                  shift and go to state 83
    factor                         shift and go to state 22
    term                           shift and go to state 23
    boleano                        shift and go to state 24
    suma                           shift and go to state 32
    resta                          shift and go to state 33
    multiplicacion                 shift and go to state 34
    division                       shift and go to state 35
    exponenciacion                 shift and go to state 36
    operadores                     shift and go to state 40
    enteros                        shift and go to state 44

state 259

    (87) while -> WHILE LPAR comparacion RPAR repCuerpo END while .

    $end            reduce using rule 87 (while -> WHILE LPAR comparacion RPAR repCuerpo END while .)
    VARIABLE        reduce using rule 87 (while -> WHILE LPAR comparacion RPAR repCuerpo END while .)
    IF              reduce using rule 87 (while -> WHILE LPAR comparacion RPAR repCuerpo END while .)
    PUTS            reduce using rule 87 (while -> WHILE LPAR comparacion RPAR repCuerpo END while .)
    FOR             reduce using rule 87 (while -> WHILE LPAR comparacion RPAR repCuerpo END while .)
    WHILE           reduce using rule 87 (while -> WHILE LPAR comparacion RPAR repCuerpo END while .)
    TRUE            reduce using rule 87 (while -> WHILE LPAR comparacion RPAR repCuerpo END while .)
    FALSE           reduce using rule 87 (while -> WHILE LPAR comparacion RPAR repCuerpo END while .)
    LPAR            reduce using rule 87 (while -> WHILE LPAR comparacion RPAR repCuerpo END while .)
    NUMBER          reduce using rule 87 (while -> WHILE LPAR comparacion RPAR repCuerpo END while .)
    STRING          reduce using rule 87 (while -> WHILE LPAR comparacion RPAR repCuerpo END while .)
    FLOAT           reduce using rule 87 (while -> WHILE LPAR comparacion RPAR repCuerpo END while .)
    MINUS           reduce using rule 87 (while -> WHILE LPAR comparacion RPAR repCuerpo END while .)
    END             reduce using rule 87 (while -> WHILE LPAR comparacion RPAR repCuerpo END while .)
    RETURN          reduce using rule 87 (while -> WHILE LPAR comparacion RPAR repCuerpo END while .)


state 260

    (97) for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER . DO repCuerpo END
    (98) for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER . DO repCuerpo END for

    DO              shift and go to state 263


state 261

    (79) cuerpoHash -> expression ASIGN GREATER expression COMMA . cuerpoHash
    (78) cuerpoHash -> . expression ASIGN GREATER expression
    (79) cuerpoHash -> . expression ASIGN GREATER expression COMMA cuerpoHash
    (51) expression -> . term
    (52) expression -> . boleano
    (53) term -> . factor
    (75) boleano -> . TRUE
    (76) boleano -> . FALSE
    (54) factor -> . NUMBER
    (55) factor -> . STRING
    (56) factor -> . FLOAT
    (57) factor -> . VARIABLE
    (58) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    NUMBER          shift and go to state 87
    STRING          shift and go to state 42
    FLOAT           shift and go to state 88
    VARIABLE        shift and go to state 89
    LPAR            shift and go to state 90

    expression                     shift and go to state 174
    cuerpoHash                     shift and go to state 264
    term                           shift and go to state 23
    boleano                        shift and go to state 24
    factor                         shift and go to state 22

state 262

    (72) cond_else -> ELSE D_POINT repCuerpo . END

    END             shift and go to state 265


state 263

    (97) for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO . repCuerpo END
    (98) for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO . repCuerpo END for
    (88) repCuerpo -> . cuerpo
    (89) repCuerpo -> . cuerpo repCuerpo
    (20) cuerpo -> . asignacion
    (21) cuerpo -> . expression
    (22) cuerpo -> . comparacion
    (23) cuerpo -> . condicional
    (24) cuerpo -> . impresion
    (25) cuerpo -> . for
    (26) cuerpo -> . while
    (27) cuerpo -> . input
    (28) cuerpo -> . callFuncion
    (29) cuerpo -> . addValueHash
    (30) cuerpo -> . modValueHash
    (31) cuerpo -> . deleteValueHash
    (32) cuerpo -> . insertArray
    (33) cuerpo -> . deleteArray
    (34) cuerpo -> . pushStack
    (35) cuerpo -> . searchStack
    (36) cuerpo -> . opMatematicas
    (37) asignacion -> . VARIABLE ASIGN expression
    (38) asignacion -> . VARIABLE ASIGN comparacion
    (39) asignacion -> . VARIABLE ASIGN callFuncion
    (40) asignacion -> . VARIABLE ASIGN diccionario
    (41) asignacion -> . VARIABLE ASIGN getValueHash
    (42) asignacion -> . VARIABLE ASIGN array
    (43) asignacion -> . VARIABLE ASIGN stack
    (44) asignacion -> . VARIABLE tipo_asignacion factor
    (45) asignacion -> . VARIABLE ASIGN opMatematicas
    (51) expression -> . term
    (52) expression -> . boleano
    (59) comparacion -> . expression comparador expression
    (60) comparacion -> . expression comparador expression AND comparacion
    (61) comparacion -> . expression comparador expression OR comparacion
    (62) comparacion -> . expression AND expression
    (63) comparacion -> . expression OR expression
    (70) condicional -> . IF comparacion D_POINT repCuerpo END
    (71) condicional -> . IF comparacion D_POINT repCuerpo END cond_else
    (73) impresion -> . PUTS factor
    (97) for -> . FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END
    (98) for -> . FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for
    (86) while -> . WHILE LPAR comparacion RPAR repCuerpo END
    (87) while -> . WHILE LPAR comparacion RPAR repCuerpo END while
    (74) input -> . VARIABLE ASIGN GETS
    (139) callFuncion -> . VARIABLE LPAR RPAR
    (140) callFuncion -> . VARIABLE LPAR parametros RPAR
    (81) addValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (82) modValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (83) deleteValueHash -> . VARIABLE POINT DELETE LPAR expression RPAR
    (95) insertArray -> . VARIABLE POINT INSERT LPAR argumentosA RPAR
    (96) deleteArray -> . VARIABLE POINT DELETE_AT LPAR NUMBER RPAR
    (103) pushStack -> . VARIABLE POINT PUSH LPAR factor RPAR
    (102) searchStack -> . VARIABLE POINT SEARCH LPAR factor RPAR
    (104) opMatematicas -> . suma
    (105) opMatematicas -> . resta
    (106) opMatematicas -> . multiplicacion
    (107) opMatematicas -> . division
    (108) opMatematicas -> . exponenciacion
    (53) term -> . factor
    (75) boleano -> . TRUE
    (76) boleano -> . FALSE
    (109) suma -> . VARIABLE PLUS NUMBER
    (110) suma -> . operadores PLUS operadores
    (111) suma -> . operadores PLUS opMatematicas
    (112) suma -> . operadores PLUS LPAR operadores RPAR
    (113) suma -> . operadores PLUS LPAR opMatematicas RPAR
    (114) resta -> . VARIABLE MINUS NUMBER
    (115) resta -> . operadores MINUS operadores
    (116) resta -> . operadores MINUS opMatematicas
    (117) resta -> . operadores MINUS LPAR operadores RPAR
    (118) resta -> . operadores MINUS LPAR opMatematicas RPAR
    (119) multiplicacion -> . operadores TIMES operadores
    (120) multiplicacion -> . operadores TIMES LPAR operadores RPAR
    (121) multiplicacion -> . operadores TIMES LPAR opMatematicas RPAR
    (122) division -> . operadores DIVIDE operadores
    (123) division -> . operadores DIVIDE LPAR operadores RPAR
    (124) division -> . operadores DIVIDE LPAR opMatematicas RPAR
    (125) exponenciacion -> . operadores EXPONENTIATION operadores
    (126) exponenciacion -> . LPAR operadores RPAR EXPONENTIATION operadores
    (127) exponenciacion -> . LPAR opMatematicas RPAR EXPONENTIATION operadores
    (54) factor -> . NUMBER
    (55) factor -> . STRING
    (56) factor -> . FLOAT
    (57) factor -> . VARIABLE
    (58) factor -> . LPAR expression RPAR
    (128) operadores -> . enteros
    (129) operadores -> . FLOAT
    (130) enteros -> . NUMBER
    (131) enteros -> . MINUS NUMBER

    VARIABLE        shift and go to state 84
    IF              shift and go to state 26
    PUTS            shift and go to state 31
    FOR             shift and go to state 29
    WHILE           shift and go to state 27
    TRUE            shift and go to state 37
    FALSE           shift and go to state 38
    LPAR            shift and go to state 28
    NUMBER          shift and go to state 30
    STRING          shift and go to state 42
    FLOAT           shift and go to state 43
    MINUS           shift and go to state 41

    repCuerpo                      shift and go to state 266
    for                            shift and go to state 72
    cuerpo                         shift and go to state 67
    asignacion                     shift and go to state 68
    expression                     shift and go to state 66
    comparacion                    shift and go to state 69
    condicional                    shift and go to state 70
    impresion                      shift and go to state 71
    while                          shift and go to state 73
    input                          shift and go to state 74
    callFuncion                    shift and go to state 75
    addValueHash                   shift and go to state 76
    modValueHash                   shift and go to state 77
    deleteValueHash                shift and go to state 78
    insertArray                    shift and go to state 79
    deleteArray                    shift and go to state 80
    pushStack                      shift and go to state 81
    searchStack                    shift and go to state 82
    opMatematicas                  shift and go to state 83
    factor                         shift and go to state 22
    term                           shift and go to state 23
    boleano                        shift and go to state 24
    suma                           shift and go to state 32
    resta                          shift and go to state 33
    multiplicacion                 shift and go to state 34
    division                       shift and go to state 35
    exponenciacion                 shift and go to state 36
    operadores                     shift and go to state 40
    enteros                        shift and go to state 44

state 264

    (79) cuerpoHash -> expression ASIGN GREATER expression COMMA cuerpoHash .

    RKEY            reduce using rule 79 (cuerpoHash -> expression ASIGN GREATER expression COMMA cuerpoHash .)


state 265

    (72) cond_else -> ELSE D_POINT repCuerpo END .

    $end            reduce using rule 72 (cond_else -> ELSE D_POINT repCuerpo END .)
    VARIABLE        reduce using rule 72 (cond_else -> ELSE D_POINT repCuerpo END .)
    IF              reduce using rule 72 (cond_else -> ELSE D_POINT repCuerpo END .)
    PUTS            reduce using rule 72 (cond_else -> ELSE D_POINT repCuerpo END .)
    FOR             reduce using rule 72 (cond_else -> ELSE D_POINT repCuerpo END .)
    WHILE           reduce using rule 72 (cond_else -> ELSE D_POINT repCuerpo END .)
    TRUE            reduce using rule 72 (cond_else -> ELSE D_POINT repCuerpo END .)
    FALSE           reduce using rule 72 (cond_else -> ELSE D_POINT repCuerpo END .)
    LPAR            reduce using rule 72 (cond_else -> ELSE D_POINT repCuerpo END .)
    NUMBER          reduce using rule 72 (cond_else -> ELSE D_POINT repCuerpo END .)
    STRING          reduce using rule 72 (cond_else -> ELSE D_POINT repCuerpo END .)
    FLOAT           reduce using rule 72 (cond_else -> ELSE D_POINT repCuerpo END .)
    MINUS           reduce using rule 72 (cond_else -> ELSE D_POINT repCuerpo END .)
    END             reduce using rule 72 (cond_else -> ELSE D_POINT repCuerpo END .)
    RETURN          reduce using rule 72 (cond_else -> ELSE D_POINT repCuerpo END .)


state 266

    (97) for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo . END
    (98) for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo . END for

    END             shift and go to state 267


state 267

    (97) for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END .
    (98) for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END . for
    (97) for -> . FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END
    (98) for -> . FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for

  ! shift/reduce conflict for FOR resolved as shift
    $end            reduce using rule 97 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END .)
    VARIABLE        reduce using rule 97 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END .)
    IF              reduce using rule 97 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END .)
    PUTS            reduce using rule 97 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END .)
    WHILE           reduce using rule 97 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END .)
    TRUE            reduce using rule 97 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END .)
    FALSE           reduce using rule 97 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END .)
    LPAR            reduce using rule 97 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END .)
    NUMBER          reduce using rule 97 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END .)
    STRING          reduce using rule 97 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END .)
    FLOAT           reduce using rule 97 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END .)
    MINUS           reduce using rule 97 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END .)
    END             reduce using rule 97 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END .)
    RETURN          reduce using rule 97 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END .)
    FOR             shift and go to state 29

  ! FOR             [ reduce using rule 97 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END .) ]

    for                            shift and go to state 268

state 268

    (98) for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for .

    $end            reduce using rule 98 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for .)
    VARIABLE        reduce using rule 98 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for .)
    IF              reduce using rule 98 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for .)
    PUTS            reduce using rule 98 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for .)
    FOR             reduce using rule 98 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for .)
    WHILE           reduce using rule 98 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for .)
    TRUE            reduce using rule 98 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for .)
    FALSE           reduce using rule 98 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for .)
    LPAR            reduce using rule 98 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for .)
    NUMBER          reduce using rule 98 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for .)
    STRING          reduce using rule 98 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for .)
    FLOAT           reduce using rule 98 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for .)
    MINUS           reduce using rule 98 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for .)
    END             reduce using rule 98 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for .)
    RETURN          reduce using rule 98 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ASIGN in state 21 resolved as shift
WARNING: shift/reduce conflict for ASIGN in state 84 resolved as shift
WARNING: shift/reduce conflict for LPAR in state 84 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 84 resolved as shift
WARNING: shift/reduce conflict for LPAR in state 112 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 112 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 156 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 162 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 253 resolved as shift
WARNING: shift/reduce conflict for FOR in state 267 resolved as shift
WARNING: reduce/reduce conflict in state 30 resolved using rule (factor -> NUMBER)
WARNING: rejected rule (enteros -> NUMBER) in state 30
WARNING: reduce/reduce conflict in state 43 resolved using rule (factor -> FLOAT)
WARNING: rejected rule (operadores -> FLOAT) in state 43
WARNING: reduce/reduce conflict in state 95 resolved using rule (factor -> FLOAT)
WARNING: rejected rule (operadores -> FLOAT) in state 95
WARNING: reduce/reduce conflict in state 96 resolved using rule (factor -> NUMBER)
WARNING: rejected rule (enteros -> NUMBER) in state 96
WARNING: reduce/reduce conflict in state 212 resolved using rule (array -> LCOR parametrosA RCOR)
WARNING: rejected rule (stack -> LCOR parametrosA RCOR) in state 212
WARNING: reduce/reduce conflict in state 242 resolved using rule (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression)
WARNING: rejected rule (modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression) in state 242
WARNING: Rule (stack -> LCOR parametrosA RCOR) is never reduced
WARNING: Rule (modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression) is never reduced
