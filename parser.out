Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    QUESTION

Grammar

Rule 0     S' -> instrucciones
Rule 1     instrucciones -> asignacion
Rule 2     instrucciones -> expression
Rule 3     instrucciones -> funciones
Rule 4     instrucciones -> comparacion
Rule 5     instrucciones -> condicional
Rule 6     instrucciones -> while
Rule 7     instrucciones -> for
Rule 8     instrucciones -> impresion
Rule 9     instrucciones -> input
Rule 10    instrucciones -> callFuncion
Rule 11    instrucciones -> addValueHash
Rule 12    instrucciones -> modValueHash
Rule 13    instrucciones -> deleteValueHash
Rule 14    instrucciones -> insertArray
Rule 15    instrucciones -> deleteArray
Rule 16    instrucciones -> searchStack
Rule 17    instrucciones -> pushStack
Rule 18    cuerpo -> asignacion
Rule 19    cuerpo -> expression
Rule 20    cuerpo -> comparacion
Rule 21    cuerpo -> condicional
Rule 22    cuerpo -> impresion
Rule 23    cuerpo -> for
Rule 24    cuerpo -> while
Rule 25    cuerpo -> input
Rule 26    cuerpo -> callFuncion
Rule 27    cuerpo -> addValueHash
Rule 28    cuerpo -> modValueHash
Rule 29    cuerpo -> deleteValueHash
Rule 30    cuerpo -> insertArray
Rule 31    cuerpo -> deleteArray
Rule 32    cuerpo -> pushStack
Rule 33    cuerpo -> searchStack
Rule 34    asignacion -> VARIABLE ASIGN expression
Rule 35    asignacion -> VARIABLE ASIGN comparacion
Rule 36    asignacion -> VARIABLE ASIGN callFuncion
Rule 37    asignacion -> VARIABLE ASIGN diccionario
Rule 38    asignacion -> VARIABLE ASIGN getValueHash
Rule 39    asignacion -> VARIABLE ASIGN array
Rule 40    asignacion -> VARIABLE ASIGN stack
Rule 41    expression -> term
Rule 42    expression -> boleano
Rule 43    term -> factor
Rule 44    factor -> NUMBER
Rule 45    factor -> STRING
Rule 46    factor -> FLOAT
Rule 47    factor -> VARIABLE
Rule 48    factor -> LPAR expression RPAR
Rule 49    expression -> expression PLUS term
Rule 50    expression -> expression MINUS term
Rule 51    term -> term TIMES factor
Rule 52    term -> term DIVIDE factor
Rule 53    term -> term EXPONENTIATION factor
Rule 54    comparacion -> expression comparador expression
Rule 55    comparacion -> expression comparador expression AND comparacion
Rule 56    comparacion -> expression comparador expression OR comparacion
Rule 57    comparacion -> expression AND expression
Rule 58    comparacion -> expression OR expression
Rule 59    comparador -> GREATER
Rule 60    comparador -> GREATER_OR_EQUAL
Rule 61    comparador -> MINOR
Rule 62    comparador -> MINOR_OR_EQUAL
Rule 63    comparador -> ASIGN ASIGN
Rule 64    comparador -> NOT ASIGN
Rule 65    condicional -> IF comparacion D_POINT repCuerpo END
Rule 66    condicional -> IF comparacion D_POINT repCuerpo END cond_else
Rule 67    cond_else -> ELSE D_POINT repCuerpo END
Rule 68    impresion -> PUTS factor
Rule 69    input -> VARIABLE ASIGN GETS
Rule 70    parametros -> VARIABLE
Rule 71    parametros -> VARIABLE COMMA parametros
Rule 72    encabezado -> DEF VARIABLE LPAR RPAR
Rule 73    encabezado -> DEF VARIABLE LPAR parametros RPAR
Rule 74    funciones -> encabezado repCuerpo END
Rule 75    funciones -> encabezado RETURN expression END
Rule 76    funciones -> encabezado cuerpo RETURN expression END
Rule 77    callFuncion -> VARIABLE LPAR RPAR
Rule 78    callFuncion -> VARIABLE LPAR parametros RPAR
Rule 79    boleano -> TRUE
Rule 80    boleano -> FALSE
Rule 81    diccionario -> LKEY cuerpoHash RKEY
Rule 82    cuerpoHash -> expression ASIGN GREATER expression
Rule 83    cuerpoHash -> expression ASIGN GREATER expression COMMA cuerpoHash
Rule 84    getValueHash -> VARIABLE LCOR expression RCOR
Rule 85    addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression
Rule 86    modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression
Rule 87    deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR
Rule 88    while -> WHILE LPAR comparacion RPAR repCuerpo END
Rule 89    while -> WHILE LPAR comparacion RPAR repCuerpo END while
Rule 90    repCuerpo -> cuerpo
Rule 91    repCuerpo -> cuerpo repCuerpo
Rule 92    parametrosA -> factor
Rule 93    parametrosA -> factor COMMA parametrosA
Rule 94    array -> LCOR parametrosA RCOR
Rule 95    array -> LCOR RCOR
Rule 96    argumentosA -> NUMBER COMMA factor
Rule 97    insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR
Rule 98    deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR
Rule 99    for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END
Rule 100   for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for
Rule 101   vacio -> 
Rule 102   stack -> LCOR parametrosA RCOR
Rule 103   stack -> LCOR vacio RCOR
Rule 104   searchStack -> VARIABLE POINT SEARCH LPAR factor RPAR
Rule 105   pushStack -> VARIABLE POINT PUSH LPAR factor RPAR

Terminals, with rules where they appear

                     : 101
AND                  : 55 57
ASIGN                : 34 35 36 37 38 39 40 63 63 64 69 82 83 85 86
COMMA                : 71 83 93 96
DEF                  : 72 73
DELETE               : 87
DELETE_AT            : 98
DIVIDE               : 52
DO                   : 99 100
D_POINT              : 65 66 67
ELSE                 : 67
END                  : 65 66 67 74 75 76 88 89 99 100
EXPONENTIATION       : 53
FALSE                : 80
FLOAT                : 46
FOR                  : 99 100
GETS                 : 69
GREATER              : 59 82 83
GREATER_OR_EQUAL     : 60
IF                   : 65 66
IN                   : 99 100
INSERT               : 97
LCOR                 : 84 85 86 94 95 102 103
LKEY                 : 81
LPAR                 : 48 72 73 77 78 87 88 89 97 98 104 105
MINOR                : 61
MINOR_OR_EQUAL       : 62
MINUS                : 50
NOT                  : 64
NUMBER               : 44 96 98 99 99 100 100
OR                   : 56 58
PLUS                 : 49
POINT                : 87 97 98 99 99 100 100 104 105
PUSH                 : 105
PUTS                 : 68
QUESTION             : 
RCOR                 : 84 85 86 94 95 102 103
RETURN               : 75 76
RKEY                 : 81
RPAR                 : 48 72 73 77 78 87 88 89 97 98 104 105
SEARCH               : 104
STRING               : 45
TIMES                : 51
TRUE                 : 79
VARIABLE             : 34 35 36 37 38 39 40 47 69 70 71 72 73 77 78 84 85 86 87 97 98 99 100 104 105
WHILE                : 88 89
error                : 

Nonterminals, with rules where they appear

addValueHash         : 11 27
argumentosA          : 97
array                : 39
asignacion           : 1 18
boleano              : 42
callFuncion          : 10 26 36
comparacion          : 4 20 35 55 56 65 66 88 89
comparador           : 54 55 56
cond_else            : 66
condicional          : 5 21
cuerpo               : 76 90 91
cuerpoHash           : 81 83
deleteArray          : 15 31
deleteValueHash      : 13 29
diccionario          : 37
encabezado           : 74 75 76
expression           : 2 19 34 48 49 50 54 54 55 55 56 56 57 57 58 58 75 76 82 82 83 83 84 85 85 86 86 87
factor               : 43 51 52 53 68 92 93 96 104 105
for                  : 7 23 100
funciones            : 3
getValueHash         : 38
impresion            : 8 22
input                : 9 25
insertArray          : 14 30
instrucciones        : 0
modValueHash         : 12 28
parametros           : 71 73 78
parametrosA          : 93 94 102
pushStack            : 17 32
repCuerpo            : 65 66 67 74 88 89 91 99 100
searchStack          : 16 33
stack                : 40
term                 : 41 49 50 51 52 53
vacio                : 103
while                : 6 24 89

Parsing method: LALR

state 0

    (0) S' -> . instrucciones
    (1) instrucciones -> . asignacion
    (2) instrucciones -> . expression
    (3) instrucciones -> . funciones
    (4) instrucciones -> . comparacion
    (5) instrucciones -> . condicional
    (6) instrucciones -> . while
    (7) instrucciones -> . for
    (8) instrucciones -> . impresion
    (9) instrucciones -> . input
    (10) instrucciones -> . callFuncion
    (11) instrucciones -> . addValueHash
    (12) instrucciones -> . modValueHash
    (13) instrucciones -> . deleteValueHash
    (14) instrucciones -> . insertArray
    (15) instrucciones -> . deleteArray
    (16) instrucciones -> . searchStack
    (17) instrucciones -> . pushStack
    (34) asignacion -> . VARIABLE ASIGN expression
    (35) asignacion -> . VARIABLE ASIGN comparacion
    (36) asignacion -> . VARIABLE ASIGN callFuncion
    (37) asignacion -> . VARIABLE ASIGN diccionario
    (38) asignacion -> . VARIABLE ASIGN getValueHash
    (39) asignacion -> . VARIABLE ASIGN array
    (40) asignacion -> . VARIABLE ASIGN stack
    (41) expression -> . term
    (42) expression -> . boleano
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (74) funciones -> . encabezado repCuerpo END
    (75) funciones -> . encabezado RETURN expression END
    (76) funciones -> . encabezado cuerpo RETURN expression END
    (54) comparacion -> . expression comparador expression
    (55) comparacion -> . expression comparador expression AND comparacion
    (56) comparacion -> . expression comparador expression OR comparacion
    (57) comparacion -> . expression AND expression
    (58) comparacion -> . expression OR expression
    (65) condicional -> . IF comparacion D_POINT repCuerpo END
    (66) condicional -> . IF comparacion D_POINT repCuerpo END cond_else
    (88) while -> . WHILE LPAR comparacion RPAR repCuerpo END
    (89) while -> . WHILE LPAR comparacion RPAR repCuerpo END while
    (99) for -> . FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END
    (100) for -> . FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for
    (68) impresion -> . PUTS factor
    (69) input -> . VARIABLE ASIGN GETS
    (77) callFuncion -> . VARIABLE LPAR RPAR
    (78) callFuncion -> . VARIABLE LPAR parametros RPAR
    (85) addValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (86) modValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (87) deleteValueHash -> . VARIABLE POINT DELETE LPAR expression RPAR
    (97) insertArray -> . VARIABLE POINT INSERT LPAR argumentosA RPAR
    (98) deleteArray -> . VARIABLE POINT DELETE_AT LPAR NUMBER RPAR
    (104) searchStack -> . VARIABLE POINT SEARCH LPAR factor RPAR
    (105) pushStack -> . VARIABLE POINT PUSH LPAR factor RPAR
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (79) boleano -> . TRUE
    (80) boleano -> . FALSE
    (72) encabezado -> . DEF VARIABLE LPAR RPAR
    (73) encabezado -> . DEF VARIABLE LPAR parametros RPAR
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    VARIABLE        shift and go to state 19
    IF              shift and go to state 23
    WHILE           shift and go to state 24
    FOR             shift and go to state 26
    PUTS            shift and go to state 28
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    DEF             shift and go to state 32
    NUMBER          shift and go to state 27
    STRING          shift and go to state 33
    FLOAT           shift and go to state 34
    LPAR            shift and go to state 25

    instrucciones                  shift and go to state 1
    asignacion                     shift and go to state 2
    expression                     shift and go to state 3
    funciones                      shift and go to state 4
    comparacion                    shift and go to state 5
    condicional                    shift and go to state 6
    while                          shift and go to state 7
    for                            shift and go to state 8
    impresion                      shift and go to state 9
    input                          shift and go to state 10
    callFuncion                    shift and go to state 11
    addValueHash                   shift and go to state 12
    modValueHash                   shift and go to state 13
    deleteValueHash                shift and go to state 14
    insertArray                    shift and go to state 15
    deleteArray                    shift and go to state 16
    searchStack                    shift and go to state 17
    pushStack                      shift and go to state 18
    term                           shift and go to state 20
    boleano                        shift and go to state 21
    encabezado                     shift and go to state 22
    factor                         shift and go to state 29

state 1

    (0) S' -> instrucciones .



state 2

    (1) instrucciones -> asignacion .

    $end            reduce using rule 1 (instrucciones -> asignacion .)


state 3

    (2) instrucciones -> expression .
    (49) expression -> expression . PLUS term
    (50) expression -> expression . MINUS term
    (54) comparacion -> expression . comparador expression
    (55) comparacion -> expression . comparador expression AND comparacion
    (56) comparacion -> expression . comparador expression OR comparacion
    (57) comparacion -> expression . AND expression
    (58) comparacion -> expression . OR expression
    (59) comparador -> . GREATER
    (60) comparador -> . GREATER_OR_EQUAL
    (61) comparador -> . MINOR
    (62) comparador -> . MINOR_OR_EQUAL
    (63) comparador -> . ASIGN ASIGN
    (64) comparador -> . NOT ASIGN

    $end            reduce using rule 2 (instrucciones -> expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    AND             shift and go to state 38
    OR              shift and go to state 39
    GREATER         shift and go to state 40
    GREATER_OR_EQUAL shift and go to state 41
    MINOR           shift and go to state 42
    MINOR_OR_EQUAL  shift and go to state 43
    ASIGN           shift and go to state 44
    NOT             shift and go to state 45

    comparador                     shift and go to state 37

state 4

    (3) instrucciones -> funciones .

    $end            reduce using rule 3 (instrucciones -> funciones .)


state 5

    (4) instrucciones -> comparacion .

    $end            reduce using rule 4 (instrucciones -> comparacion .)


state 6

    (5) instrucciones -> condicional .

    $end            reduce using rule 5 (instrucciones -> condicional .)


state 7

    (6) instrucciones -> while .

    $end            reduce using rule 6 (instrucciones -> while .)


state 8

    (7) instrucciones -> for .

    $end            reduce using rule 7 (instrucciones -> for .)


state 9

    (8) instrucciones -> impresion .

    $end            reduce using rule 8 (instrucciones -> impresion .)


state 10

    (9) instrucciones -> input .

    $end            reduce using rule 9 (instrucciones -> input .)


state 11

    (10) instrucciones -> callFuncion .

    $end            reduce using rule 10 (instrucciones -> callFuncion .)


state 12

    (11) instrucciones -> addValueHash .

    $end            reduce using rule 11 (instrucciones -> addValueHash .)


state 13

    (12) instrucciones -> modValueHash .

    $end            reduce using rule 12 (instrucciones -> modValueHash .)


state 14

    (13) instrucciones -> deleteValueHash .

    $end            reduce using rule 13 (instrucciones -> deleteValueHash .)


state 15

    (14) instrucciones -> insertArray .

    $end            reduce using rule 14 (instrucciones -> insertArray .)


state 16

    (15) instrucciones -> deleteArray .

    $end            reduce using rule 15 (instrucciones -> deleteArray .)


state 17

    (16) instrucciones -> searchStack .

    $end            reduce using rule 16 (instrucciones -> searchStack .)


state 18

    (17) instrucciones -> pushStack .

    $end            reduce using rule 17 (instrucciones -> pushStack .)


state 19

    (34) asignacion -> VARIABLE . ASIGN expression
    (35) asignacion -> VARIABLE . ASIGN comparacion
    (36) asignacion -> VARIABLE . ASIGN callFuncion
    (37) asignacion -> VARIABLE . ASIGN diccionario
    (38) asignacion -> VARIABLE . ASIGN getValueHash
    (39) asignacion -> VARIABLE . ASIGN array
    (40) asignacion -> VARIABLE . ASIGN stack
    (69) input -> VARIABLE . ASIGN GETS
    (77) callFuncion -> VARIABLE . LPAR RPAR
    (78) callFuncion -> VARIABLE . LPAR parametros RPAR
    (85) addValueHash -> VARIABLE . LCOR expression RCOR ASIGN expression
    (86) modValueHash -> VARIABLE . LCOR expression RCOR ASIGN expression
    (87) deleteValueHash -> VARIABLE . POINT DELETE LPAR expression RPAR
    (97) insertArray -> VARIABLE . POINT INSERT LPAR argumentosA RPAR
    (98) deleteArray -> VARIABLE . POINT DELETE_AT LPAR NUMBER RPAR
    (104) searchStack -> VARIABLE . POINT SEARCH LPAR factor RPAR
    (105) pushStack -> VARIABLE . POINT PUSH LPAR factor RPAR
    (47) factor -> VARIABLE .

  ! shift/reduce conflict for ASIGN resolved as shift
    ASIGN           shift and go to state 46
    LPAR            shift and go to state 47
    LCOR            shift and go to state 48
    POINT           shift and go to state 49
    TIMES           reduce using rule 47 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 47 (factor -> VARIABLE .)
    EXPONENTIATION  reduce using rule 47 (factor -> VARIABLE .)
    PLUS            reduce using rule 47 (factor -> VARIABLE .)
    MINUS           reduce using rule 47 (factor -> VARIABLE .)
    AND             reduce using rule 47 (factor -> VARIABLE .)
    OR              reduce using rule 47 (factor -> VARIABLE .)
    GREATER         reduce using rule 47 (factor -> VARIABLE .)
    GREATER_OR_EQUAL reduce using rule 47 (factor -> VARIABLE .)
    MINOR           reduce using rule 47 (factor -> VARIABLE .)
    MINOR_OR_EQUAL  reduce using rule 47 (factor -> VARIABLE .)
    NOT             reduce using rule 47 (factor -> VARIABLE .)
    $end            reduce using rule 47 (factor -> VARIABLE .)

  ! ASIGN           [ reduce using rule 47 (factor -> VARIABLE .) ]


state 20

    (41) expression -> term .
    (51) term -> term . TIMES factor
    (52) term -> term . DIVIDE factor
    (53) term -> term . EXPONENTIATION factor

    PLUS            reduce using rule 41 (expression -> term .)
    MINUS           reduce using rule 41 (expression -> term .)
    AND             reduce using rule 41 (expression -> term .)
    OR              reduce using rule 41 (expression -> term .)
    GREATER         reduce using rule 41 (expression -> term .)
    GREATER_OR_EQUAL reduce using rule 41 (expression -> term .)
    MINOR           reduce using rule 41 (expression -> term .)
    MINOR_OR_EQUAL  reduce using rule 41 (expression -> term .)
    ASIGN           reduce using rule 41 (expression -> term .)
    NOT             reduce using rule 41 (expression -> term .)
    $end            reduce using rule 41 (expression -> term .)
    RETURN          reduce using rule 41 (expression -> term .)
    VARIABLE        reduce using rule 41 (expression -> term .)
    IF              reduce using rule 41 (expression -> term .)
    PUTS            reduce using rule 41 (expression -> term .)
    FOR             reduce using rule 41 (expression -> term .)
    WHILE           reduce using rule 41 (expression -> term .)
    TRUE            reduce using rule 41 (expression -> term .)
    FALSE           reduce using rule 41 (expression -> term .)
    NUMBER          reduce using rule 41 (expression -> term .)
    STRING          reduce using rule 41 (expression -> term .)
    FLOAT           reduce using rule 41 (expression -> term .)
    LPAR            reduce using rule 41 (expression -> term .)
    END             reduce using rule 41 (expression -> term .)
    RPAR            reduce using rule 41 (expression -> term .)
    D_POINT         reduce using rule 41 (expression -> term .)
    RCOR            reduce using rule 41 (expression -> term .)
    COMMA           reduce using rule 41 (expression -> term .)
    RKEY            reduce using rule 41 (expression -> term .)
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    EXPONENTIATION  shift and go to state 52


state 21

    (42) expression -> boleano .

    PLUS            reduce using rule 42 (expression -> boleano .)
    MINUS           reduce using rule 42 (expression -> boleano .)
    AND             reduce using rule 42 (expression -> boleano .)
    OR              reduce using rule 42 (expression -> boleano .)
    GREATER         reduce using rule 42 (expression -> boleano .)
    GREATER_OR_EQUAL reduce using rule 42 (expression -> boleano .)
    MINOR           reduce using rule 42 (expression -> boleano .)
    MINOR_OR_EQUAL  reduce using rule 42 (expression -> boleano .)
    ASIGN           reduce using rule 42 (expression -> boleano .)
    NOT             reduce using rule 42 (expression -> boleano .)
    $end            reduce using rule 42 (expression -> boleano .)
    RETURN          reduce using rule 42 (expression -> boleano .)
    VARIABLE        reduce using rule 42 (expression -> boleano .)
    IF              reduce using rule 42 (expression -> boleano .)
    PUTS            reduce using rule 42 (expression -> boleano .)
    FOR             reduce using rule 42 (expression -> boleano .)
    WHILE           reduce using rule 42 (expression -> boleano .)
    TRUE            reduce using rule 42 (expression -> boleano .)
    FALSE           reduce using rule 42 (expression -> boleano .)
    NUMBER          reduce using rule 42 (expression -> boleano .)
    STRING          reduce using rule 42 (expression -> boleano .)
    FLOAT           reduce using rule 42 (expression -> boleano .)
    LPAR            reduce using rule 42 (expression -> boleano .)
    END             reduce using rule 42 (expression -> boleano .)
    RPAR            reduce using rule 42 (expression -> boleano .)
    D_POINT         reduce using rule 42 (expression -> boleano .)
    RCOR            reduce using rule 42 (expression -> boleano .)
    COMMA           reduce using rule 42 (expression -> boleano .)
    RKEY            reduce using rule 42 (expression -> boleano .)


state 22

    (74) funciones -> encabezado . repCuerpo END
    (75) funciones -> encabezado . RETURN expression END
    (76) funciones -> encabezado . cuerpo RETURN expression END
    (90) repCuerpo -> . cuerpo
    (91) repCuerpo -> . cuerpo repCuerpo
    (18) cuerpo -> . asignacion
    (19) cuerpo -> . expression
    (20) cuerpo -> . comparacion
    (21) cuerpo -> . condicional
    (22) cuerpo -> . impresion
    (23) cuerpo -> . for
    (24) cuerpo -> . while
    (25) cuerpo -> . input
    (26) cuerpo -> . callFuncion
    (27) cuerpo -> . addValueHash
    (28) cuerpo -> . modValueHash
    (29) cuerpo -> . deleteValueHash
    (30) cuerpo -> . insertArray
    (31) cuerpo -> . deleteArray
    (32) cuerpo -> . pushStack
    (33) cuerpo -> . searchStack
    (34) asignacion -> . VARIABLE ASIGN expression
    (35) asignacion -> . VARIABLE ASIGN comparacion
    (36) asignacion -> . VARIABLE ASIGN callFuncion
    (37) asignacion -> . VARIABLE ASIGN diccionario
    (38) asignacion -> . VARIABLE ASIGN getValueHash
    (39) asignacion -> . VARIABLE ASIGN array
    (40) asignacion -> . VARIABLE ASIGN stack
    (41) expression -> . term
    (42) expression -> . boleano
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (54) comparacion -> . expression comparador expression
    (55) comparacion -> . expression comparador expression AND comparacion
    (56) comparacion -> . expression comparador expression OR comparacion
    (57) comparacion -> . expression AND expression
    (58) comparacion -> . expression OR expression
    (65) condicional -> . IF comparacion D_POINT repCuerpo END
    (66) condicional -> . IF comparacion D_POINT repCuerpo END cond_else
    (68) impresion -> . PUTS factor
    (99) for -> . FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END
    (100) for -> . FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for
    (88) while -> . WHILE LPAR comparacion RPAR repCuerpo END
    (89) while -> . WHILE LPAR comparacion RPAR repCuerpo END while
    (69) input -> . VARIABLE ASIGN GETS
    (77) callFuncion -> . VARIABLE LPAR RPAR
    (78) callFuncion -> . VARIABLE LPAR parametros RPAR
    (85) addValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (86) modValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (87) deleteValueHash -> . VARIABLE POINT DELETE LPAR expression RPAR
    (97) insertArray -> . VARIABLE POINT INSERT LPAR argumentosA RPAR
    (98) deleteArray -> . VARIABLE POINT DELETE_AT LPAR NUMBER RPAR
    (105) pushStack -> . VARIABLE POINT PUSH LPAR factor RPAR
    (104) searchStack -> . VARIABLE POINT SEARCH LPAR factor RPAR
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (79) boleano -> . TRUE
    (80) boleano -> . FALSE
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    RETURN          shift and go to state 54
    VARIABLE        shift and go to state 72
    IF              shift and go to state 23
    PUTS            shift and go to state 28
    FOR             shift and go to state 26
    WHILE           shift and go to state 24
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    NUMBER          shift and go to state 27
    STRING          shift and go to state 33
    FLOAT           shift and go to state 34
    LPAR            shift and go to state 25

    repCuerpo                      shift and go to state 53
    expression                     shift and go to state 55
    cuerpo                         shift and go to state 56
    asignacion                     shift and go to state 57
    comparacion                    shift and go to state 58
    condicional                    shift and go to state 59
    impresion                      shift and go to state 60
    for                            shift and go to state 61
    while                          shift and go to state 62
    input                          shift and go to state 63
    callFuncion                    shift and go to state 64
    addValueHash                   shift and go to state 65
    modValueHash                   shift and go to state 66
    deleteValueHash                shift and go to state 67
    insertArray                    shift and go to state 68
    deleteArray                    shift and go to state 69
    pushStack                      shift and go to state 70
    searchStack                    shift and go to state 71
    term                           shift and go to state 20
    boleano                        shift and go to state 21
    factor                         shift and go to state 29

state 23

    (65) condicional -> IF . comparacion D_POINT repCuerpo END
    (66) condicional -> IF . comparacion D_POINT repCuerpo END cond_else
    (54) comparacion -> . expression comparador expression
    (55) comparacion -> . expression comparador expression AND comparacion
    (56) comparacion -> . expression comparador expression OR comparacion
    (57) comparacion -> . expression AND expression
    (58) comparacion -> . expression OR expression
    (41) expression -> . term
    (42) expression -> . boleano
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (79) boleano -> . TRUE
    (80) boleano -> . FALSE
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    NUMBER          shift and go to state 27
    STRING          shift and go to state 33
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 75
    LPAR            shift and go to state 25

    comparacion                    shift and go to state 73
    expression                     shift and go to state 74
    term                           shift and go to state 20
    boleano                        shift and go to state 21
    factor                         shift and go to state 29

state 24

    (88) while -> WHILE . LPAR comparacion RPAR repCuerpo END
    (89) while -> WHILE . LPAR comparacion RPAR repCuerpo END while

    LPAR            shift and go to state 76


state 25

    (48) factor -> LPAR . expression RPAR
    (41) expression -> . term
    (42) expression -> . boleano
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (79) boleano -> . TRUE
    (80) boleano -> . FALSE
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    NUMBER          shift and go to state 27
    STRING          shift and go to state 33
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 75
    LPAR            shift and go to state 25

    expression                     shift and go to state 77
    term                           shift and go to state 20
    boleano                        shift and go to state 21
    factor                         shift and go to state 29

state 26

    (99) for -> FOR . VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END
    (100) for -> FOR . VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for

    VARIABLE        shift and go to state 78


state 27

    (44) factor -> NUMBER .

    TIMES           reduce using rule 44 (factor -> NUMBER .)
    DIVIDE          reduce using rule 44 (factor -> NUMBER .)
    EXPONENTIATION  reduce using rule 44 (factor -> NUMBER .)
    PLUS            reduce using rule 44 (factor -> NUMBER .)
    MINUS           reduce using rule 44 (factor -> NUMBER .)
    AND             reduce using rule 44 (factor -> NUMBER .)
    OR              reduce using rule 44 (factor -> NUMBER .)
    GREATER         reduce using rule 44 (factor -> NUMBER .)
    GREATER_OR_EQUAL reduce using rule 44 (factor -> NUMBER .)
    MINOR           reduce using rule 44 (factor -> NUMBER .)
    MINOR_OR_EQUAL  reduce using rule 44 (factor -> NUMBER .)
    ASIGN           reduce using rule 44 (factor -> NUMBER .)
    NOT             reduce using rule 44 (factor -> NUMBER .)
    $end            reduce using rule 44 (factor -> NUMBER .)
    RETURN          reduce using rule 44 (factor -> NUMBER .)
    VARIABLE        reduce using rule 44 (factor -> NUMBER .)
    IF              reduce using rule 44 (factor -> NUMBER .)
    PUTS            reduce using rule 44 (factor -> NUMBER .)
    FOR             reduce using rule 44 (factor -> NUMBER .)
    WHILE           reduce using rule 44 (factor -> NUMBER .)
    TRUE            reduce using rule 44 (factor -> NUMBER .)
    FALSE           reduce using rule 44 (factor -> NUMBER .)
    NUMBER          reduce using rule 44 (factor -> NUMBER .)
    STRING          reduce using rule 44 (factor -> NUMBER .)
    FLOAT           reduce using rule 44 (factor -> NUMBER .)
    LPAR            reduce using rule 44 (factor -> NUMBER .)
    END             reduce using rule 44 (factor -> NUMBER .)
    RPAR            reduce using rule 44 (factor -> NUMBER .)
    D_POINT         reduce using rule 44 (factor -> NUMBER .)
    RCOR            reduce using rule 44 (factor -> NUMBER .)
    COMMA           reduce using rule 44 (factor -> NUMBER .)
    RKEY            reduce using rule 44 (factor -> NUMBER .)


state 28

    (68) impresion -> PUTS . factor
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    NUMBER          shift and go to state 27
    STRING          shift and go to state 33
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 75
    LPAR            shift and go to state 25

    factor                         shift and go to state 79

state 29

    (43) term -> factor .

    TIMES           reduce using rule 43 (term -> factor .)
    DIVIDE          reduce using rule 43 (term -> factor .)
    EXPONENTIATION  reduce using rule 43 (term -> factor .)
    PLUS            reduce using rule 43 (term -> factor .)
    MINUS           reduce using rule 43 (term -> factor .)
    AND             reduce using rule 43 (term -> factor .)
    OR              reduce using rule 43 (term -> factor .)
    GREATER         reduce using rule 43 (term -> factor .)
    GREATER_OR_EQUAL reduce using rule 43 (term -> factor .)
    MINOR           reduce using rule 43 (term -> factor .)
    MINOR_OR_EQUAL  reduce using rule 43 (term -> factor .)
    ASIGN           reduce using rule 43 (term -> factor .)
    NOT             reduce using rule 43 (term -> factor .)
    $end            reduce using rule 43 (term -> factor .)
    RETURN          reduce using rule 43 (term -> factor .)
    VARIABLE        reduce using rule 43 (term -> factor .)
    IF              reduce using rule 43 (term -> factor .)
    PUTS            reduce using rule 43 (term -> factor .)
    FOR             reduce using rule 43 (term -> factor .)
    WHILE           reduce using rule 43 (term -> factor .)
    TRUE            reduce using rule 43 (term -> factor .)
    FALSE           reduce using rule 43 (term -> factor .)
    NUMBER          reduce using rule 43 (term -> factor .)
    STRING          reduce using rule 43 (term -> factor .)
    FLOAT           reduce using rule 43 (term -> factor .)
    LPAR            reduce using rule 43 (term -> factor .)
    END             reduce using rule 43 (term -> factor .)
    RPAR            reduce using rule 43 (term -> factor .)
    D_POINT         reduce using rule 43 (term -> factor .)
    RCOR            reduce using rule 43 (term -> factor .)
    COMMA           reduce using rule 43 (term -> factor .)
    RKEY            reduce using rule 43 (term -> factor .)


state 30

    (79) boleano -> TRUE .

    PLUS            reduce using rule 79 (boleano -> TRUE .)
    MINUS           reduce using rule 79 (boleano -> TRUE .)
    AND             reduce using rule 79 (boleano -> TRUE .)
    OR              reduce using rule 79 (boleano -> TRUE .)
    GREATER         reduce using rule 79 (boleano -> TRUE .)
    GREATER_OR_EQUAL reduce using rule 79 (boleano -> TRUE .)
    MINOR           reduce using rule 79 (boleano -> TRUE .)
    MINOR_OR_EQUAL  reduce using rule 79 (boleano -> TRUE .)
    ASIGN           reduce using rule 79 (boleano -> TRUE .)
    NOT             reduce using rule 79 (boleano -> TRUE .)
    $end            reduce using rule 79 (boleano -> TRUE .)
    RETURN          reduce using rule 79 (boleano -> TRUE .)
    VARIABLE        reduce using rule 79 (boleano -> TRUE .)
    IF              reduce using rule 79 (boleano -> TRUE .)
    PUTS            reduce using rule 79 (boleano -> TRUE .)
    FOR             reduce using rule 79 (boleano -> TRUE .)
    WHILE           reduce using rule 79 (boleano -> TRUE .)
    TRUE            reduce using rule 79 (boleano -> TRUE .)
    FALSE           reduce using rule 79 (boleano -> TRUE .)
    NUMBER          reduce using rule 79 (boleano -> TRUE .)
    STRING          reduce using rule 79 (boleano -> TRUE .)
    FLOAT           reduce using rule 79 (boleano -> TRUE .)
    LPAR            reduce using rule 79 (boleano -> TRUE .)
    END             reduce using rule 79 (boleano -> TRUE .)
    RPAR            reduce using rule 79 (boleano -> TRUE .)
    D_POINT         reduce using rule 79 (boleano -> TRUE .)
    RCOR            reduce using rule 79 (boleano -> TRUE .)
    COMMA           reduce using rule 79 (boleano -> TRUE .)
    RKEY            reduce using rule 79 (boleano -> TRUE .)


state 31

    (80) boleano -> FALSE .

    PLUS            reduce using rule 80 (boleano -> FALSE .)
    MINUS           reduce using rule 80 (boleano -> FALSE .)
    AND             reduce using rule 80 (boleano -> FALSE .)
    OR              reduce using rule 80 (boleano -> FALSE .)
    GREATER         reduce using rule 80 (boleano -> FALSE .)
    GREATER_OR_EQUAL reduce using rule 80 (boleano -> FALSE .)
    MINOR           reduce using rule 80 (boleano -> FALSE .)
    MINOR_OR_EQUAL  reduce using rule 80 (boleano -> FALSE .)
    ASIGN           reduce using rule 80 (boleano -> FALSE .)
    NOT             reduce using rule 80 (boleano -> FALSE .)
    $end            reduce using rule 80 (boleano -> FALSE .)
    RETURN          reduce using rule 80 (boleano -> FALSE .)
    VARIABLE        reduce using rule 80 (boleano -> FALSE .)
    IF              reduce using rule 80 (boleano -> FALSE .)
    PUTS            reduce using rule 80 (boleano -> FALSE .)
    FOR             reduce using rule 80 (boleano -> FALSE .)
    WHILE           reduce using rule 80 (boleano -> FALSE .)
    TRUE            reduce using rule 80 (boleano -> FALSE .)
    FALSE           reduce using rule 80 (boleano -> FALSE .)
    NUMBER          reduce using rule 80 (boleano -> FALSE .)
    STRING          reduce using rule 80 (boleano -> FALSE .)
    FLOAT           reduce using rule 80 (boleano -> FALSE .)
    LPAR            reduce using rule 80 (boleano -> FALSE .)
    END             reduce using rule 80 (boleano -> FALSE .)
    RPAR            reduce using rule 80 (boleano -> FALSE .)
    D_POINT         reduce using rule 80 (boleano -> FALSE .)
    RCOR            reduce using rule 80 (boleano -> FALSE .)
    COMMA           reduce using rule 80 (boleano -> FALSE .)
    RKEY            reduce using rule 80 (boleano -> FALSE .)


state 32

    (72) encabezado -> DEF . VARIABLE LPAR RPAR
    (73) encabezado -> DEF . VARIABLE LPAR parametros RPAR

    VARIABLE        shift and go to state 80


state 33

    (45) factor -> STRING .

    TIMES           reduce using rule 45 (factor -> STRING .)
    DIVIDE          reduce using rule 45 (factor -> STRING .)
    EXPONENTIATION  reduce using rule 45 (factor -> STRING .)
    PLUS            reduce using rule 45 (factor -> STRING .)
    MINUS           reduce using rule 45 (factor -> STRING .)
    AND             reduce using rule 45 (factor -> STRING .)
    OR              reduce using rule 45 (factor -> STRING .)
    GREATER         reduce using rule 45 (factor -> STRING .)
    GREATER_OR_EQUAL reduce using rule 45 (factor -> STRING .)
    MINOR           reduce using rule 45 (factor -> STRING .)
    MINOR_OR_EQUAL  reduce using rule 45 (factor -> STRING .)
    ASIGN           reduce using rule 45 (factor -> STRING .)
    NOT             reduce using rule 45 (factor -> STRING .)
    $end            reduce using rule 45 (factor -> STRING .)
    RETURN          reduce using rule 45 (factor -> STRING .)
    VARIABLE        reduce using rule 45 (factor -> STRING .)
    IF              reduce using rule 45 (factor -> STRING .)
    PUTS            reduce using rule 45 (factor -> STRING .)
    FOR             reduce using rule 45 (factor -> STRING .)
    WHILE           reduce using rule 45 (factor -> STRING .)
    TRUE            reduce using rule 45 (factor -> STRING .)
    FALSE           reduce using rule 45 (factor -> STRING .)
    NUMBER          reduce using rule 45 (factor -> STRING .)
    STRING          reduce using rule 45 (factor -> STRING .)
    FLOAT           reduce using rule 45 (factor -> STRING .)
    LPAR            reduce using rule 45 (factor -> STRING .)
    END             reduce using rule 45 (factor -> STRING .)
    RPAR            reduce using rule 45 (factor -> STRING .)
    D_POINT         reduce using rule 45 (factor -> STRING .)
    RCOR            reduce using rule 45 (factor -> STRING .)
    COMMA           reduce using rule 45 (factor -> STRING .)
    RKEY            reduce using rule 45 (factor -> STRING .)


state 34

    (46) factor -> FLOAT .

    TIMES           reduce using rule 46 (factor -> FLOAT .)
    DIVIDE          reduce using rule 46 (factor -> FLOAT .)
    EXPONENTIATION  reduce using rule 46 (factor -> FLOAT .)
    PLUS            reduce using rule 46 (factor -> FLOAT .)
    MINUS           reduce using rule 46 (factor -> FLOAT .)
    AND             reduce using rule 46 (factor -> FLOAT .)
    OR              reduce using rule 46 (factor -> FLOAT .)
    GREATER         reduce using rule 46 (factor -> FLOAT .)
    GREATER_OR_EQUAL reduce using rule 46 (factor -> FLOAT .)
    MINOR           reduce using rule 46 (factor -> FLOAT .)
    MINOR_OR_EQUAL  reduce using rule 46 (factor -> FLOAT .)
    ASIGN           reduce using rule 46 (factor -> FLOAT .)
    NOT             reduce using rule 46 (factor -> FLOAT .)
    $end            reduce using rule 46 (factor -> FLOAT .)
    RETURN          reduce using rule 46 (factor -> FLOAT .)
    VARIABLE        reduce using rule 46 (factor -> FLOAT .)
    IF              reduce using rule 46 (factor -> FLOAT .)
    PUTS            reduce using rule 46 (factor -> FLOAT .)
    FOR             reduce using rule 46 (factor -> FLOAT .)
    WHILE           reduce using rule 46 (factor -> FLOAT .)
    TRUE            reduce using rule 46 (factor -> FLOAT .)
    FALSE           reduce using rule 46 (factor -> FLOAT .)
    NUMBER          reduce using rule 46 (factor -> FLOAT .)
    STRING          reduce using rule 46 (factor -> FLOAT .)
    FLOAT           reduce using rule 46 (factor -> FLOAT .)
    LPAR            reduce using rule 46 (factor -> FLOAT .)
    END             reduce using rule 46 (factor -> FLOAT .)
    RPAR            reduce using rule 46 (factor -> FLOAT .)
    D_POINT         reduce using rule 46 (factor -> FLOAT .)
    RCOR            reduce using rule 46 (factor -> FLOAT .)
    COMMA           reduce using rule 46 (factor -> FLOAT .)
    RKEY            reduce using rule 46 (factor -> FLOAT .)


state 35

    (49) expression -> expression PLUS . term
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    NUMBER          shift and go to state 27
    STRING          shift and go to state 33
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 75
    LPAR            shift and go to state 25

    term                           shift and go to state 81
    factor                         shift and go to state 29

state 36

    (50) expression -> expression MINUS . term
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    NUMBER          shift and go to state 27
    STRING          shift and go to state 33
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 75
    LPAR            shift and go to state 25

    term                           shift and go to state 82
    factor                         shift and go to state 29

state 37

    (54) comparacion -> expression comparador . expression
    (55) comparacion -> expression comparador . expression AND comparacion
    (56) comparacion -> expression comparador . expression OR comparacion
    (41) expression -> . term
    (42) expression -> . boleano
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (79) boleano -> . TRUE
    (80) boleano -> . FALSE
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    NUMBER          shift and go to state 27
    STRING          shift and go to state 33
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 75
    LPAR            shift and go to state 25

    expression                     shift and go to state 83
    term                           shift and go to state 20
    boleano                        shift and go to state 21
    factor                         shift and go to state 29

state 38

    (57) comparacion -> expression AND . expression
    (41) expression -> . term
    (42) expression -> . boleano
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (79) boleano -> . TRUE
    (80) boleano -> . FALSE
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    NUMBER          shift and go to state 27
    STRING          shift and go to state 33
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 75
    LPAR            shift and go to state 25

    expression                     shift and go to state 84
    term                           shift and go to state 20
    boleano                        shift and go to state 21
    factor                         shift and go to state 29

state 39

    (58) comparacion -> expression OR . expression
    (41) expression -> . term
    (42) expression -> . boleano
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (79) boleano -> . TRUE
    (80) boleano -> . FALSE
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    NUMBER          shift and go to state 27
    STRING          shift and go to state 33
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 75
    LPAR            shift and go to state 25

    expression                     shift and go to state 85
    term                           shift and go to state 20
    boleano                        shift and go to state 21
    factor                         shift and go to state 29

state 40

    (59) comparador -> GREATER .

    TRUE            reduce using rule 59 (comparador -> GREATER .)
    FALSE           reduce using rule 59 (comparador -> GREATER .)
    NUMBER          reduce using rule 59 (comparador -> GREATER .)
    STRING          reduce using rule 59 (comparador -> GREATER .)
    FLOAT           reduce using rule 59 (comparador -> GREATER .)
    VARIABLE        reduce using rule 59 (comparador -> GREATER .)
    LPAR            reduce using rule 59 (comparador -> GREATER .)


state 41

    (60) comparador -> GREATER_OR_EQUAL .

    TRUE            reduce using rule 60 (comparador -> GREATER_OR_EQUAL .)
    FALSE           reduce using rule 60 (comparador -> GREATER_OR_EQUAL .)
    NUMBER          reduce using rule 60 (comparador -> GREATER_OR_EQUAL .)
    STRING          reduce using rule 60 (comparador -> GREATER_OR_EQUAL .)
    FLOAT           reduce using rule 60 (comparador -> GREATER_OR_EQUAL .)
    VARIABLE        reduce using rule 60 (comparador -> GREATER_OR_EQUAL .)
    LPAR            reduce using rule 60 (comparador -> GREATER_OR_EQUAL .)


state 42

    (61) comparador -> MINOR .

    TRUE            reduce using rule 61 (comparador -> MINOR .)
    FALSE           reduce using rule 61 (comparador -> MINOR .)
    NUMBER          reduce using rule 61 (comparador -> MINOR .)
    STRING          reduce using rule 61 (comparador -> MINOR .)
    FLOAT           reduce using rule 61 (comparador -> MINOR .)
    VARIABLE        reduce using rule 61 (comparador -> MINOR .)
    LPAR            reduce using rule 61 (comparador -> MINOR .)


state 43

    (62) comparador -> MINOR_OR_EQUAL .

    TRUE            reduce using rule 62 (comparador -> MINOR_OR_EQUAL .)
    FALSE           reduce using rule 62 (comparador -> MINOR_OR_EQUAL .)
    NUMBER          reduce using rule 62 (comparador -> MINOR_OR_EQUAL .)
    STRING          reduce using rule 62 (comparador -> MINOR_OR_EQUAL .)
    FLOAT           reduce using rule 62 (comparador -> MINOR_OR_EQUAL .)
    VARIABLE        reduce using rule 62 (comparador -> MINOR_OR_EQUAL .)
    LPAR            reduce using rule 62 (comparador -> MINOR_OR_EQUAL .)


state 44

    (63) comparador -> ASIGN . ASIGN

    ASIGN           shift and go to state 86


state 45

    (64) comparador -> NOT . ASIGN

    ASIGN           shift and go to state 87


state 46

    (34) asignacion -> VARIABLE ASIGN . expression
    (35) asignacion -> VARIABLE ASIGN . comparacion
    (36) asignacion -> VARIABLE ASIGN . callFuncion
    (37) asignacion -> VARIABLE ASIGN . diccionario
    (38) asignacion -> VARIABLE ASIGN . getValueHash
    (39) asignacion -> VARIABLE ASIGN . array
    (40) asignacion -> VARIABLE ASIGN . stack
    (69) input -> VARIABLE ASIGN . GETS
    (41) expression -> . term
    (42) expression -> . boleano
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (54) comparacion -> . expression comparador expression
    (55) comparacion -> . expression comparador expression AND comparacion
    (56) comparacion -> . expression comparador expression OR comparacion
    (57) comparacion -> . expression AND expression
    (58) comparacion -> . expression OR expression
    (77) callFuncion -> . VARIABLE LPAR RPAR
    (78) callFuncion -> . VARIABLE LPAR parametros RPAR
    (81) diccionario -> . LKEY cuerpoHash RKEY
    (84) getValueHash -> . VARIABLE LCOR expression RCOR
    (94) array -> . LCOR parametrosA RCOR
    (95) array -> . LCOR RCOR
    (102) stack -> . LCOR parametrosA RCOR
    (103) stack -> . LCOR vacio RCOR
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (79) boleano -> . TRUE
    (80) boleano -> . FALSE
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    GETS            shift and go to state 96
    VARIABLE        shift and go to state 88
    LKEY            shift and go to state 97
    LCOR            shift and go to state 98
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    NUMBER          shift and go to state 27
    STRING          shift and go to state 33
    FLOAT           shift and go to state 34
    LPAR            shift and go to state 25

    expression                     shift and go to state 89
    comparacion                    shift and go to state 90
    callFuncion                    shift and go to state 91
    diccionario                    shift and go to state 92
    getValueHash                   shift and go to state 93
    array                          shift and go to state 94
    stack                          shift and go to state 95
    term                           shift and go to state 20
    boleano                        shift and go to state 21
    factor                         shift and go to state 29

state 47

    (77) callFuncion -> VARIABLE LPAR . RPAR
    (78) callFuncion -> VARIABLE LPAR . parametros RPAR
    (70) parametros -> . VARIABLE
    (71) parametros -> . VARIABLE COMMA parametros

    RPAR            shift and go to state 100
    VARIABLE        shift and go to state 99

    parametros                     shift and go to state 101

state 48

    (85) addValueHash -> VARIABLE LCOR . expression RCOR ASIGN expression
    (86) modValueHash -> VARIABLE LCOR . expression RCOR ASIGN expression
    (41) expression -> . term
    (42) expression -> . boleano
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (79) boleano -> . TRUE
    (80) boleano -> . FALSE
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    NUMBER          shift and go to state 27
    STRING          shift and go to state 33
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 75
    LPAR            shift and go to state 25

    expression                     shift and go to state 102
    term                           shift and go to state 20
    boleano                        shift and go to state 21
    factor                         shift and go to state 29

state 49

    (87) deleteValueHash -> VARIABLE POINT . DELETE LPAR expression RPAR
    (97) insertArray -> VARIABLE POINT . INSERT LPAR argumentosA RPAR
    (98) deleteArray -> VARIABLE POINT . DELETE_AT LPAR NUMBER RPAR
    (104) searchStack -> VARIABLE POINT . SEARCH LPAR factor RPAR
    (105) pushStack -> VARIABLE POINT . PUSH LPAR factor RPAR

    DELETE          shift and go to state 103
    INSERT          shift and go to state 104
    DELETE_AT       shift and go to state 105
    SEARCH          shift and go to state 106
    PUSH            shift and go to state 107


state 50

    (51) term -> term TIMES . factor
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    NUMBER          shift and go to state 27
    STRING          shift and go to state 33
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 75
    LPAR            shift and go to state 25

    factor                         shift and go to state 108

state 51

    (52) term -> term DIVIDE . factor
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    NUMBER          shift and go to state 27
    STRING          shift and go to state 33
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 75
    LPAR            shift and go to state 25

    factor                         shift and go to state 109

state 52

    (53) term -> term EXPONENTIATION . factor
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    NUMBER          shift and go to state 27
    STRING          shift and go to state 33
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 75
    LPAR            shift and go to state 25

    factor                         shift and go to state 110

state 53

    (74) funciones -> encabezado repCuerpo . END

    END             shift and go to state 111


state 54

    (75) funciones -> encabezado RETURN . expression END
    (41) expression -> . term
    (42) expression -> . boleano
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (79) boleano -> . TRUE
    (80) boleano -> . FALSE
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    NUMBER          shift and go to state 27
    STRING          shift and go to state 33
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 75
    LPAR            shift and go to state 25

    expression                     shift and go to state 112
    term                           shift and go to state 20
    boleano                        shift and go to state 21
    factor                         shift and go to state 29

state 55

    (19) cuerpo -> expression .
    (49) expression -> expression . PLUS term
    (50) expression -> expression . MINUS term
    (54) comparacion -> expression . comparador expression
    (55) comparacion -> expression . comparador expression AND comparacion
    (56) comparacion -> expression . comparador expression OR comparacion
    (57) comparacion -> expression . AND expression
    (58) comparacion -> expression . OR expression
    (59) comparador -> . GREATER
    (60) comparador -> . GREATER_OR_EQUAL
    (61) comparador -> . MINOR
    (62) comparador -> . MINOR_OR_EQUAL
    (63) comparador -> . ASIGN ASIGN
    (64) comparador -> . NOT ASIGN

    RETURN          reduce using rule 19 (cuerpo -> expression .)
    VARIABLE        reduce using rule 19 (cuerpo -> expression .)
    IF              reduce using rule 19 (cuerpo -> expression .)
    PUTS            reduce using rule 19 (cuerpo -> expression .)
    FOR             reduce using rule 19 (cuerpo -> expression .)
    WHILE           reduce using rule 19 (cuerpo -> expression .)
    TRUE            reduce using rule 19 (cuerpo -> expression .)
    FALSE           reduce using rule 19 (cuerpo -> expression .)
    NUMBER          reduce using rule 19 (cuerpo -> expression .)
    STRING          reduce using rule 19 (cuerpo -> expression .)
    FLOAT           reduce using rule 19 (cuerpo -> expression .)
    LPAR            reduce using rule 19 (cuerpo -> expression .)
    END             reduce using rule 19 (cuerpo -> expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    AND             shift and go to state 38
    OR              shift and go to state 39
    GREATER         shift and go to state 40
    GREATER_OR_EQUAL shift and go to state 41
    MINOR           shift and go to state 42
    MINOR_OR_EQUAL  shift and go to state 43
    ASIGN           shift and go to state 44
    NOT             shift and go to state 45

    comparador                     shift and go to state 37

state 56

    (76) funciones -> encabezado cuerpo . RETURN expression END
    (90) repCuerpo -> cuerpo .
    (91) repCuerpo -> cuerpo . repCuerpo
    (90) repCuerpo -> . cuerpo
    (91) repCuerpo -> . cuerpo repCuerpo
    (18) cuerpo -> . asignacion
    (19) cuerpo -> . expression
    (20) cuerpo -> . comparacion
    (21) cuerpo -> . condicional
    (22) cuerpo -> . impresion
    (23) cuerpo -> . for
    (24) cuerpo -> . while
    (25) cuerpo -> . input
    (26) cuerpo -> . callFuncion
    (27) cuerpo -> . addValueHash
    (28) cuerpo -> . modValueHash
    (29) cuerpo -> . deleteValueHash
    (30) cuerpo -> . insertArray
    (31) cuerpo -> . deleteArray
    (32) cuerpo -> . pushStack
    (33) cuerpo -> . searchStack
    (34) asignacion -> . VARIABLE ASIGN expression
    (35) asignacion -> . VARIABLE ASIGN comparacion
    (36) asignacion -> . VARIABLE ASIGN callFuncion
    (37) asignacion -> . VARIABLE ASIGN diccionario
    (38) asignacion -> . VARIABLE ASIGN getValueHash
    (39) asignacion -> . VARIABLE ASIGN array
    (40) asignacion -> . VARIABLE ASIGN stack
    (41) expression -> . term
    (42) expression -> . boleano
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (54) comparacion -> . expression comparador expression
    (55) comparacion -> . expression comparador expression AND comparacion
    (56) comparacion -> . expression comparador expression OR comparacion
    (57) comparacion -> . expression AND expression
    (58) comparacion -> . expression OR expression
    (65) condicional -> . IF comparacion D_POINT repCuerpo END
    (66) condicional -> . IF comparacion D_POINT repCuerpo END cond_else
    (68) impresion -> . PUTS factor
    (99) for -> . FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END
    (100) for -> . FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for
    (88) while -> . WHILE LPAR comparacion RPAR repCuerpo END
    (89) while -> . WHILE LPAR comparacion RPAR repCuerpo END while
    (69) input -> . VARIABLE ASIGN GETS
    (77) callFuncion -> . VARIABLE LPAR RPAR
    (78) callFuncion -> . VARIABLE LPAR parametros RPAR
    (85) addValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (86) modValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (87) deleteValueHash -> . VARIABLE POINT DELETE LPAR expression RPAR
    (97) insertArray -> . VARIABLE POINT INSERT LPAR argumentosA RPAR
    (98) deleteArray -> . VARIABLE POINT DELETE_AT LPAR NUMBER RPAR
    (105) pushStack -> . VARIABLE POINT PUSH LPAR factor RPAR
    (104) searchStack -> . VARIABLE POINT SEARCH LPAR factor RPAR
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (79) boleano -> . TRUE
    (80) boleano -> . FALSE
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    RETURN          shift and go to state 114
    END             reduce using rule 90 (repCuerpo -> cuerpo .)
    VARIABLE        shift and go to state 72
    IF              shift and go to state 23
    PUTS            shift and go to state 28
    FOR             shift and go to state 26
    WHILE           shift and go to state 24
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    NUMBER          shift and go to state 27
    STRING          shift and go to state 33
    FLOAT           shift and go to state 34
    LPAR            shift and go to state 25

    cuerpo                         shift and go to state 113
    expression                     shift and go to state 55
    repCuerpo                      shift and go to state 115
    asignacion                     shift and go to state 57
    comparacion                    shift and go to state 58
    condicional                    shift and go to state 59
    impresion                      shift and go to state 60
    for                            shift and go to state 61
    while                          shift and go to state 62
    input                          shift and go to state 63
    callFuncion                    shift and go to state 64
    addValueHash                   shift and go to state 65
    modValueHash                   shift and go to state 66
    deleteValueHash                shift and go to state 67
    insertArray                    shift and go to state 68
    deleteArray                    shift and go to state 69
    pushStack                      shift and go to state 70
    searchStack                    shift and go to state 71
    term                           shift and go to state 20
    boleano                        shift and go to state 21
    factor                         shift and go to state 29

state 57

    (18) cuerpo -> asignacion .

    RETURN          reduce using rule 18 (cuerpo -> asignacion .)
    VARIABLE        reduce using rule 18 (cuerpo -> asignacion .)
    IF              reduce using rule 18 (cuerpo -> asignacion .)
    PUTS            reduce using rule 18 (cuerpo -> asignacion .)
    FOR             reduce using rule 18 (cuerpo -> asignacion .)
    WHILE           reduce using rule 18 (cuerpo -> asignacion .)
    TRUE            reduce using rule 18 (cuerpo -> asignacion .)
    FALSE           reduce using rule 18 (cuerpo -> asignacion .)
    NUMBER          reduce using rule 18 (cuerpo -> asignacion .)
    STRING          reduce using rule 18 (cuerpo -> asignacion .)
    FLOAT           reduce using rule 18 (cuerpo -> asignacion .)
    LPAR            reduce using rule 18 (cuerpo -> asignacion .)
    END             reduce using rule 18 (cuerpo -> asignacion .)


state 58

    (20) cuerpo -> comparacion .

    RETURN          reduce using rule 20 (cuerpo -> comparacion .)
    VARIABLE        reduce using rule 20 (cuerpo -> comparacion .)
    IF              reduce using rule 20 (cuerpo -> comparacion .)
    PUTS            reduce using rule 20 (cuerpo -> comparacion .)
    FOR             reduce using rule 20 (cuerpo -> comparacion .)
    WHILE           reduce using rule 20 (cuerpo -> comparacion .)
    TRUE            reduce using rule 20 (cuerpo -> comparacion .)
    FALSE           reduce using rule 20 (cuerpo -> comparacion .)
    NUMBER          reduce using rule 20 (cuerpo -> comparacion .)
    STRING          reduce using rule 20 (cuerpo -> comparacion .)
    FLOAT           reduce using rule 20 (cuerpo -> comparacion .)
    LPAR            reduce using rule 20 (cuerpo -> comparacion .)
    END             reduce using rule 20 (cuerpo -> comparacion .)


state 59

    (21) cuerpo -> condicional .

    RETURN          reduce using rule 21 (cuerpo -> condicional .)
    VARIABLE        reduce using rule 21 (cuerpo -> condicional .)
    IF              reduce using rule 21 (cuerpo -> condicional .)
    PUTS            reduce using rule 21 (cuerpo -> condicional .)
    FOR             reduce using rule 21 (cuerpo -> condicional .)
    WHILE           reduce using rule 21 (cuerpo -> condicional .)
    TRUE            reduce using rule 21 (cuerpo -> condicional .)
    FALSE           reduce using rule 21 (cuerpo -> condicional .)
    NUMBER          reduce using rule 21 (cuerpo -> condicional .)
    STRING          reduce using rule 21 (cuerpo -> condicional .)
    FLOAT           reduce using rule 21 (cuerpo -> condicional .)
    LPAR            reduce using rule 21 (cuerpo -> condicional .)
    END             reduce using rule 21 (cuerpo -> condicional .)


state 60

    (22) cuerpo -> impresion .

    RETURN          reduce using rule 22 (cuerpo -> impresion .)
    VARIABLE        reduce using rule 22 (cuerpo -> impresion .)
    IF              reduce using rule 22 (cuerpo -> impresion .)
    PUTS            reduce using rule 22 (cuerpo -> impresion .)
    FOR             reduce using rule 22 (cuerpo -> impresion .)
    WHILE           reduce using rule 22 (cuerpo -> impresion .)
    TRUE            reduce using rule 22 (cuerpo -> impresion .)
    FALSE           reduce using rule 22 (cuerpo -> impresion .)
    NUMBER          reduce using rule 22 (cuerpo -> impresion .)
    STRING          reduce using rule 22 (cuerpo -> impresion .)
    FLOAT           reduce using rule 22 (cuerpo -> impresion .)
    LPAR            reduce using rule 22 (cuerpo -> impresion .)
    END             reduce using rule 22 (cuerpo -> impresion .)


state 61

    (23) cuerpo -> for .

    RETURN          reduce using rule 23 (cuerpo -> for .)
    VARIABLE        reduce using rule 23 (cuerpo -> for .)
    IF              reduce using rule 23 (cuerpo -> for .)
    PUTS            reduce using rule 23 (cuerpo -> for .)
    FOR             reduce using rule 23 (cuerpo -> for .)
    WHILE           reduce using rule 23 (cuerpo -> for .)
    TRUE            reduce using rule 23 (cuerpo -> for .)
    FALSE           reduce using rule 23 (cuerpo -> for .)
    NUMBER          reduce using rule 23 (cuerpo -> for .)
    STRING          reduce using rule 23 (cuerpo -> for .)
    FLOAT           reduce using rule 23 (cuerpo -> for .)
    LPAR            reduce using rule 23 (cuerpo -> for .)
    END             reduce using rule 23 (cuerpo -> for .)


state 62

    (24) cuerpo -> while .

    RETURN          reduce using rule 24 (cuerpo -> while .)
    VARIABLE        reduce using rule 24 (cuerpo -> while .)
    IF              reduce using rule 24 (cuerpo -> while .)
    PUTS            reduce using rule 24 (cuerpo -> while .)
    FOR             reduce using rule 24 (cuerpo -> while .)
    WHILE           reduce using rule 24 (cuerpo -> while .)
    TRUE            reduce using rule 24 (cuerpo -> while .)
    FALSE           reduce using rule 24 (cuerpo -> while .)
    NUMBER          reduce using rule 24 (cuerpo -> while .)
    STRING          reduce using rule 24 (cuerpo -> while .)
    FLOAT           reduce using rule 24 (cuerpo -> while .)
    LPAR            reduce using rule 24 (cuerpo -> while .)
    END             reduce using rule 24 (cuerpo -> while .)


state 63

    (25) cuerpo -> input .

    RETURN          reduce using rule 25 (cuerpo -> input .)
    VARIABLE        reduce using rule 25 (cuerpo -> input .)
    IF              reduce using rule 25 (cuerpo -> input .)
    PUTS            reduce using rule 25 (cuerpo -> input .)
    FOR             reduce using rule 25 (cuerpo -> input .)
    WHILE           reduce using rule 25 (cuerpo -> input .)
    TRUE            reduce using rule 25 (cuerpo -> input .)
    FALSE           reduce using rule 25 (cuerpo -> input .)
    NUMBER          reduce using rule 25 (cuerpo -> input .)
    STRING          reduce using rule 25 (cuerpo -> input .)
    FLOAT           reduce using rule 25 (cuerpo -> input .)
    LPAR            reduce using rule 25 (cuerpo -> input .)
    END             reduce using rule 25 (cuerpo -> input .)


state 64

    (26) cuerpo -> callFuncion .

    RETURN          reduce using rule 26 (cuerpo -> callFuncion .)
    VARIABLE        reduce using rule 26 (cuerpo -> callFuncion .)
    IF              reduce using rule 26 (cuerpo -> callFuncion .)
    PUTS            reduce using rule 26 (cuerpo -> callFuncion .)
    FOR             reduce using rule 26 (cuerpo -> callFuncion .)
    WHILE           reduce using rule 26 (cuerpo -> callFuncion .)
    TRUE            reduce using rule 26 (cuerpo -> callFuncion .)
    FALSE           reduce using rule 26 (cuerpo -> callFuncion .)
    NUMBER          reduce using rule 26 (cuerpo -> callFuncion .)
    STRING          reduce using rule 26 (cuerpo -> callFuncion .)
    FLOAT           reduce using rule 26 (cuerpo -> callFuncion .)
    LPAR            reduce using rule 26 (cuerpo -> callFuncion .)
    END             reduce using rule 26 (cuerpo -> callFuncion .)


state 65

    (27) cuerpo -> addValueHash .

    RETURN          reduce using rule 27 (cuerpo -> addValueHash .)
    VARIABLE        reduce using rule 27 (cuerpo -> addValueHash .)
    IF              reduce using rule 27 (cuerpo -> addValueHash .)
    PUTS            reduce using rule 27 (cuerpo -> addValueHash .)
    FOR             reduce using rule 27 (cuerpo -> addValueHash .)
    WHILE           reduce using rule 27 (cuerpo -> addValueHash .)
    TRUE            reduce using rule 27 (cuerpo -> addValueHash .)
    FALSE           reduce using rule 27 (cuerpo -> addValueHash .)
    NUMBER          reduce using rule 27 (cuerpo -> addValueHash .)
    STRING          reduce using rule 27 (cuerpo -> addValueHash .)
    FLOAT           reduce using rule 27 (cuerpo -> addValueHash .)
    LPAR            reduce using rule 27 (cuerpo -> addValueHash .)
    END             reduce using rule 27 (cuerpo -> addValueHash .)


state 66

    (28) cuerpo -> modValueHash .

    RETURN          reduce using rule 28 (cuerpo -> modValueHash .)
    VARIABLE        reduce using rule 28 (cuerpo -> modValueHash .)
    IF              reduce using rule 28 (cuerpo -> modValueHash .)
    PUTS            reduce using rule 28 (cuerpo -> modValueHash .)
    FOR             reduce using rule 28 (cuerpo -> modValueHash .)
    WHILE           reduce using rule 28 (cuerpo -> modValueHash .)
    TRUE            reduce using rule 28 (cuerpo -> modValueHash .)
    FALSE           reduce using rule 28 (cuerpo -> modValueHash .)
    NUMBER          reduce using rule 28 (cuerpo -> modValueHash .)
    STRING          reduce using rule 28 (cuerpo -> modValueHash .)
    FLOAT           reduce using rule 28 (cuerpo -> modValueHash .)
    LPAR            reduce using rule 28 (cuerpo -> modValueHash .)
    END             reduce using rule 28 (cuerpo -> modValueHash .)


state 67

    (29) cuerpo -> deleteValueHash .

    RETURN          reduce using rule 29 (cuerpo -> deleteValueHash .)
    VARIABLE        reduce using rule 29 (cuerpo -> deleteValueHash .)
    IF              reduce using rule 29 (cuerpo -> deleteValueHash .)
    PUTS            reduce using rule 29 (cuerpo -> deleteValueHash .)
    FOR             reduce using rule 29 (cuerpo -> deleteValueHash .)
    WHILE           reduce using rule 29 (cuerpo -> deleteValueHash .)
    TRUE            reduce using rule 29 (cuerpo -> deleteValueHash .)
    FALSE           reduce using rule 29 (cuerpo -> deleteValueHash .)
    NUMBER          reduce using rule 29 (cuerpo -> deleteValueHash .)
    STRING          reduce using rule 29 (cuerpo -> deleteValueHash .)
    FLOAT           reduce using rule 29 (cuerpo -> deleteValueHash .)
    LPAR            reduce using rule 29 (cuerpo -> deleteValueHash .)
    END             reduce using rule 29 (cuerpo -> deleteValueHash .)


state 68

    (30) cuerpo -> insertArray .

    RETURN          reduce using rule 30 (cuerpo -> insertArray .)
    VARIABLE        reduce using rule 30 (cuerpo -> insertArray .)
    IF              reduce using rule 30 (cuerpo -> insertArray .)
    PUTS            reduce using rule 30 (cuerpo -> insertArray .)
    FOR             reduce using rule 30 (cuerpo -> insertArray .)
    WHILE           reduce using rule 30 (cuerpo -> insertArray .)
    TRUE            reduce using rule 30 (cuerpo -> insertArray .)
    FALSE           reduce using rule 30 (cuerpo -> insertArray .)
    NUMBER          reduce using rule 30 (cuerpo -> insertArray .)
    STRING          reduce using rule 30 (cuerpo -> insertArray .)
    FLOAT           reduce using rule 30 (cuerpo -> insertArray .)
    LPAR            reduce using rule 30 (cuerpo -> insertArray .)
    END             reduce using rule 30 (cuerpo -> insertArray .)


state 69

    (31) cuerpo -> deleteArray .

    RETURN          reduce using rule 31 (cuerpo -> deleteArray .)
    VARIABLE        reduce using rule 31 (cuerpo -> deleteArray .)
    IF              reduce using rule 31 (cuerpo -> deleteArray .)
    PUTS            reduce using rule 31 (cuerpo -> deleteArray .)
    FOR             reduce using rule 31 (cuerpo -> deleteArray .)
    WHILE           reduce using rule 31 (cuerpo -> deleteArray .)
    TRUE            reduce using rule 31 (cuerpo -> deleteArray .)
    FALSE           reduce using rule 31 (cuerpo -> deleteArray .)
    NUMBER          reduce using rule 31 (cuerpo -> deleteArray .)
    STRING          reduce using rule 31 (cuerpo -> deleteArray .)
    FLOAT           reduce using rule 31 (cuerpo -> deleteArray .)
    LPAR            reduce using rule 31 (cuerpo -> deleteArray .)
    END             reduce using rule 31 (cuerpo -> deleteArray .)


state 70

    (32) cuerpo -> pushStack .

    RETURN          reduce using rule 32 (cuerpo -> pushStack .)
    VARIABLE        reduce using rule 32 (cuerpo -> pushStack .)
    IF              reduce using rule 32 (cuerpo -> pushStack .)
    PUTS            reduce using rule 32 (cuerpo -> pushStack .)
    FOR             reduce using rule 32 (cuerpo -> pushStack .)
    WHILE           reduce using rule 32 (cuerpo -> pushStack .)
    TRUE            reduce using rule 32 (cuerpo -> pushStack .)
    FALSE           reduce using rule 32 (cuerpo -> pushStack .)
    NUMBER          reduce using rule 32 (cuerpo -> pushStack .)
    STRING          reduce using rule 32 (cuerpo -> pushStack .)
    FLOAT           reduce using rule 32 (cuerpo -> pushStack .)
    LPAR            reduce using rule 32 (cuerpo -> pushStack .)
    END             reduce using rule 32 (cuerpo -> pushStack .)


state 71

    (33) cuerpo -> searchStack .

    RETURN          reduce using rule 33 (cuerpo -> searchStack .)
    VARIABLE        reduce using rule 33 (cuerpo -> searchStack .)
    IF              reduce using rule 33 (cuerpo -> searchStack .)
    PUTS            reduce using rule 33 (cuerpo -> searchStack .)
    FOR             reduce using rule 33 (cuerpo -> searchStack .)
    WHILE           reduce using rule 33 (cuerpo -> searchStack .)
    TRUE            reduce using rule 33 (cuerpo -> searchStack .)
    FALSE           reduce using rule 33 (cuerpo -> searchStack .)
    NUMBER          reduce using rule 33 (cuerpo -> searchStack .)
    STRING          reduce using rule 33 (cuerpo -> searchStack .)
    FLOAT           reduce using rule 33 (cuerpo -> searchStack .)
    LPAR            reduce using rule 33 (cuerpo -> searchStack .)
    END             reduce using rule 33 (cuerpo -> searchStack .)


state 72

    (34) asignacion -> VARIABLE . ASIGN expression
    (35) asignacion -> VARIABLE . ASIGN comparacion
    (36) asignacion -> VARIABLE . ASIGN callFuncion
    (37) asignacion -> VARIABLE . ASIGN diccionario
    (38) asignacion -> VARIABLE . ASIGN getValueHash
    (39) asignacion -> VARIABLE . ASIGN array
    (40) asignacion -> VARIABLE . ASIGN stack
    (69) input -> VARIABLE . ASIGN GETS
    (77) callFuncion -> VARIABLE . LPAR RPAR
    (78) callFuncion -> VARIABLE . LPAR parametros RPAR
    (85) addValueHash -> VARIABLE . LCOR expression RCOR ASIGN expression
    (86) modValueHash -> VARIABLE . LCOR expression RCOR ASIGN expression
    (87) deleteValueHash -> VARIABLE . POINT DELETE LPAR expression RPAR
    (97) insertArray -> VARIABLE . POINT INSERT LPAR argumentosA RPAR
    (98) deleteArray -> VARIABLE . POINT DELETE_AT LPAR NUMBER RPAR
    (105) pushStack -> VARIABLE . POINT PUSH LPAR factor RPAR
    (104) searchStack -> VARIABLE . POINT SEARCH LPAR factor RPAR
    (47) factor -> VARIABLE .

  ! shift/reduce conflict for ASIGN resolved as shift
  ! shift/reduce conflict for LPAR resolved as shift
    ASIGN           shift and go to state 46
    LPAR            shift and go to state 47
    LCOR            shift and go to state 48
    POINT           shift and go to state 116
    TIMES           reduce using rule 47 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 47 (factor -> VARIABLE .)
    EXPONENTIATION  reduce using rule 47 (factor -> VARIABLE .)
    PLUS            reduce using rule 47 (factor -> VARIABLE .)
    MINUS           reduce using rule 47 (factor -> VARIABLE .)
    AND             reduce using rule 47 (factor -> VARIABLE .)
    OR              reduce using rule 47 (factor -> VARIABLE .)
    GREATER         reduce using rule 47 (factor -> VARIABLE .)
    GREATER_OR_EQUAL reduce using rule 47 (factor -> VARIABLE .)
    MINOR           reduce using rule 47 (factor -> VARIABLE .)
    MINOR_OR_EQUAL  reduce using rule 47 (factor -> VARIABLE .)
    NOT             reduce using rule 47 (factor -> VARIABLE .)
    RETURN          reduce using rule 47 (factor -> VARIABLE .)
    VARIABLE        reduce using rule 47 (factor -> VARIABLE .)
    IF              reduce using rule 47 (factor -> VARIABLE .)
    PUTS            reduce using rule 47 (factor -> VARIABLE .)
    FOR             reduce using rule 47 (factor -> VARIABLE .)
    WHILE           reduce using rule 47 (factor -> VARIABLE .)
    TRUE            reduce using rule 47 (factor -> VARIABLE .)
    FALSE           reduce using rule 47 (factor -> VARIABLE .)
    NUMBER          reduce using rule 47 (factor -> VARIABLE .)
    STRING          reduce using rule 47 (factor -> VARIABLE .)
    FLOAT           reduce using rule 47 (factor -> VARIABLE .)
    END             reduce using rule 47 (factor -> VARIABLE .)

  ! ASIGN           [ reduce using rule 47 (factor -> VARIABLE .) ]
  ! LPAR            [ reduce using rule 47 (factor -> VARIABLE .) ]


state 73

    (65) condicional -> IF comparacion . D_POINT repCuerpo END
    (66) condicional -> IF comparacion . D_POINT repCuerpo END cond_else

    D_POINT         shift and go to state 117


state 74

    (54) comparacion -> expression . comparador expression
    (55) comparacion -> expression . comparador expression AND comparacion
    (56) comparacion -> expression . comparador expression OR comparacion
    (57) comparacion -> expression . AND expression
    (58) comparacion -> expression . OR expression
    (49) expression -> expression . PLUS term
    (50) expression -> expression . MINUS term
    (59) comparador -> . GREATER
    (60) comparador -> . GREATER_OR_EQUAL
    (61) comparador -> . MINOR
    (62) comparador -> . MINOR_OR_EQUAL
    (63) comparador -> . ASIGN ASIGN
    (64) comparador -> . NOT ASIGN

    AND             shift and go to state 38
    OR              shift and go to state 39
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    GREATER         shift and go to state 40
    GREATER_OR_EQUAL shift and go to state 41
    MINOR           shift and go to state 42
    MINOR_OR_EQUAL  shift and go to state 43
    ASIGN           shift and go to state 44
    NOT             shift and go to state 45

    comparador                     shift and go to state 37

state 75

    (47) factor -> VARIABLE .

    TIMES           reduce using rule 47 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 47 (factor -> VARIABLE .)
    EXPONENTIATION  reduce using rule 47 (factor -> VARIABLE .)
    AND             reduce using rule 47 (factor -> VARIABLE .)
    OR              reduce using rule 47 (factor -> VARIABLE .)
    PLUS            reduce using rule 47 (factor -> VARIABLE .)
    MINUS           reduce using rule 47 (factor -> VARIABLE .)
    GREATER         reduce using rule 47 (factor -> VARIABLE .)
    GREATER_OR_EQUAL reduce using rule 47 (factor -> VARIABLE .)
    MINOR           reduce using rule 47 (factor -> VARIABLE .)
    MINOR_OR_EQUAL  reduce using rule 47 (factor -> VARIABLE .)
    ASIGN           reduce using rule 47 (factor -> VARIABLE .)
    NOT             reduce using rule 47 (factor -> VARIABLE .)
    RPAR            reduce using rule 47 (factor -> VARIABLE .)
    $end            reduce using rule 47 (factor -> VARIABLE .)
    RETURN          reduce using rule 47 (factor -> VARIABLE .)
    VARIABLE        reduce using rule 47 (factor -> VARIABLE .)
    IF              reduce using rule 47 (factor -> VARIABLE .)
    PUTS            reduce using rule 47 (factor -> VARIABLE .)
    FOR             reduce using rule 47 (factor -> VARIABLE .)
    WHILE           reduce using rule 47 (factor -> VARIABLE .)
    TRUE            reduce using rule 47 (factor -> VARIABLE .)
    FALSE           reduce using rule 47 (factor -> VARIABLE .)
    NUMBER          reduce using rule 47 (factor -> VARIABLE .)
    STRING          reduce using rule 47 (factor -> VARIABLE .)
    FLOAT           reduce using rule 47 (factor -> VARIABLE .)
    LPAR            reduce using rule 47 (factor -> VARIABLE .)
    END             reduce using rule 47 (factor -> VARIABLE .)
    D_POINT         reduce using rule 47 (factor -> VARIABLE .)
    RCOR            reduce using rule 47 (factor -> VARIABLE .)
    COMMA           reduce using rule 47 (factor -> VARIABLE .)
    RKEY            reduce using rule 47 (factor -> VARIABLE .)


state 76

    (88) while -> WHILE LPAR . comparacion RPAR repCuerpo END
    (89) while -> WHILE LPAR . comparacion RPAR repCuerpo END while
    (54) comparacion -> . expression comparador expression
    (55) comparacion -> . expression comparador expression AND comparacion
    (56) comparacion -> . expression comparador expression OR comparacion
    (57) comparacion -> . expression AND expression
    (58) comparacion -> . expression OR expression
    (41) expression -> . term
    (42) expression -> . boleano
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (79) boleano -> . TRUE
    (80) boleano -> . FALSE
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    NUMBER          shift and go to state 27
    STRING          shift and go to state 33
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 75
    LPAR            shift and go to state 25

    comparacion                    shift and go to state 118
    expression                     shift and go to state 74
    term                           shift and go to state 20
    boleano                        shift and go to state 21
    factor                         shift and go to state 29

state 77

    (48) factor -> LPAR expression . RPAR
    (49) expression -> expression . PLUS term
    (50) expression -> expression . MINUS term

    RPAR            shift and go to state 119
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36


state 78

    (99) for -> FOR VARIABLE . IN NUMBER POINT POINT NUMBER DO repCuerpo END
    (100) for -> FOR VARIABLE . IN NUMBER POINT POINT NUMBER DO repCuerpo END for

    IN              shift and go to state 120


state 79

    (68) impresion -> PUTS factor .

    $end            reduce using rule 68 (impresion -> PUTS factor .)
    RETURN          reduce using rule 68 (impresion -> PUTS factor .)
    VARIABLE        reduce using rule 68 (impresion -> PUTS factor .)
    IF              reduce using rule 68 (impresion -> PUTS factor .)
    PUTS            reduce using rule 68 (impresion -> PUTS factor .)
    FOR             reduce using rule 68 (impresion -> PUTS factor .)
    WHILE           reduce using rule 68 (impresion -> PUTS factor .)
    TRUE            reduce using rule 68 (impresion -> PUTS factor .)
    FALSE           reduce using rule 68 (impresion -> PUTS factor .)
    NUMBER          reduce using rule 68 (impresion -> PUTS factor .)
    STRING          reduce using rule 68 (impresion -> PUTS factor .)
    FLOAT           reduce using rule 68 (impresion -> PUTS factor .)
    LPAR            reduce using rule 68 (impresion -> PUTS factor .)
    END             reduce using rule 68 (impresion -> PUTS factor .)


state 80

    (72) encabezado -> DEF VARIABLE . LPAR RPAR
    (73) encabezado -> DEF VARIABLE . LPAR parametros RPAR

    LPAR            shift and go to state 121


state 81

    (49) expression -> expression PLUS term .
    (51) term -> term . TIMES factor
    (52) term -> term . DIVIDE factor
    (53) term -> term . EXPONENTIATION factor

    PLUS            reduce using rule 49 (expression -> expression PLUS term .)
    MINUS           reduce using rule 49 (expression -> expression PLUS term .)
    AND             reduce using rule 49 (expression -> expression PLUS term .)
    OR              reduce using rule 49 (expression -> expression PLUS term .)
    GREATER         reduce using rule 49 (expression -> expression PLUS term .)
    GREATER_OR_EQUAL reduce using rule 49 (expression -> expression PLUS term .)
    MINOR           reduce using rule 49 (expression -> expression PLUS term .)
    MINOR_OR_EQUAL  reduce using rule 49 (expression -> expression PLUS term .)
    ASIGN           reduce using rule 49 (expression -> expression PLUS term .)
    NOT             reduce using rule 49 (expression -> expression PLUS term .)
    $end            reduce using rule 49 (expression -> expression PLUS term .)
    RETURN          reduce using rule 49 (expression -> expression PLUS term .)
    VARIABLE        reduce using rule 49 (expression -> expression PLUS term .)
    IF              reduce using rule 49 (expression -> expression PLUS term .)
    PUTS            reduce using rule 49 (expression -> expression PLUS term .)
    FOR             reduce using rule 49 (expression -> expression PLUS term .)
    WHILE           reduce using rule 49 (expression -> expression PLUS term .)
    TRUE            reduce using rule 49 (expression -> expression PLUS term .)
    FALSE           reduce using rule 49 (expression -> expression PLUS term .)
    NUMBER          reduce using rule 49 (expression -> expression PLUS term .)
    STRING          reduce using rule 49 (expression -> expression PLUS term .)
    FLOAT           reduce using rule 49 (expression -> expression PLUS term .)
    LPAR            reduce using rule 49 (expression -> expression PLUS term .)
    END             reduce using rule 49 (expression -> expression PLUS term .)
    RPAR            reduce using rule 49 (expression -> expression PLUS term .)
    D_POINT         reduce using rule 49 (expression -> expression PLUS term .)
    RCOR            reduce using rule 49 (expression -> expression PLUS term .)
    COMMA           reduce using rule 49 (expression -> expression PLUS term .)
    RKEY            reduce using rule 49 (expression -> expression PLUS term .)
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    EXPONENTIATION  shift and go to state 52


state 82

    (50) expression -> expression MINUS term .
    (51) term -> term . TIMES factor
    (52) term -> term . DIVIDE factor
    (53) term -> term . EXPONENTIATION factor

    PLUS            reduce using rule 50 (expression -> expression MINUS term .)
    MINUS           reduce using rule 50 (expression -> expression MINUS term .)
    AND             reduce using rule 50 (expression -> expression MINUS term .)
    OR              reduce using rule 50 (expression -> expression MINUS term .)
    GREATER         reduce using rule 50 (expression -> expression MINUS term .)
    GREATER_OR_EQUAL reduce using rule 50 (expression -> expression MINUS term .)
    MINOR           reduce using rule 50 (expression -> expression MINUS term .)
    MINOR_OR_EQUAL  reduce using rule 50 (expression -> expression MINUS term .)
    ASIGN           reduce using rule 50 (expression -> expression MINUS term .)
    NOT             reduce using rule 50 (expression -> expression MINUS term .)
    $end            reduce using rule 50 (expression -> expression MINUS term .)
    RETURN          reduce using rule 50 (expression -> expression MINUS term .)
    VARIABLE        reduce using rule 50 (expression -> expression MINUS term .)
    IF              reduce using rule 50 (expression -> expression MINUS term .)
    PUTS            reduce using rule 50 (expression -> expression MINUS term .)
    FOR             reduce using rule 50 (expression -> expression MINUS term .)
    WHILE           reduce using rule 50 (expression -> expression MINUS term .)
    TRUE            reduce using rule 50 (expression -> expression MINUS term .)
    FALSE           reduce using rule 50 (expression -> expression MINUS term .)
    NUMBER          reduce using rule 50 (expression -> expression MINUS term .)
    STRING          reduce using rule 50 (expression -> expression MINUS term .)
    FLOAT           reduce using rule 50 (expression -> expression MINUS term .)
    LPAR            reduce using rule 50 (expression -> expression MINUS term .)
    END             reduce using rule 50 (expression -> expression MINUS term .)
    RPAR            reduce using rule 50 (expression -> expression MINUS term .)
    D_POINT         reduce using rule 50 (expression -> expression MINUS term .)
    RCOR            reduce using rule 50 (expression -> expression MINUS term .)
    COMMA           reduce using rule 50 (expression -> expression MINUS term .)
    RKEY            reduce using rule 50 (expression -> expression MINUS term .)
    TIMES           shift and go to state 50
    DIVIDE          shift and go to state 51
    EXPONENTIATION  shift and go to state 52


state 83

    (54) comparacion -> expression comparador expression .
    (55) comparacion -> expression comparador expression . AND comparacion
    (56) comparacion -> expression comparador expression . OR comparacion
    (49) expression -> expression . PLUS term
    (50) expression -> expression . MINUS term

    $end            reduce using rule 54 (comparacion -> expression comparador expression .)
    RETURN          reduce using rule 54 (comparacion -> expression comparador expression .)
    VARIABLE        reduce using rule 54 (comparacion -> expression comparador expression .)
    IF              reduce using rule 54 (comparacion -> expression comparador expression .)
    PUTS            reduce using rule 54 (comparacion -> expression comparador expression .)
    FOR             reduce using rule 54 (comparacion -> expression comparador expression .)
    WHILE           reduce using rule 54 (comparacion -> expression comparador expression .)
    TRUE            reduce using rule 54 (comparacion -> expression comparador expression .)
    FALSE           reduce using rule 54 (comparacion -> expression comparador expression .)
    NUMBER          reduce using rule 54 (comparacion -> expression comparador expression .)
    STRING          reduce using rule 54 (comparacion -> expression comparador expression .)
    FLOAT           reduce using rule 54 (comparacion -> expression comparador expression .)
    LPAR            reduce using rule 54 (comparacion -> expression comparador expression .)
    END             reduce using rule 54 (comparacion -> expression comparador expression .)
    D_POINT         reduce using rule 54 (comparacion -> expression comparador expression .)
    RPAR            reduce using rule 54 (comparacion -> expression comparador expression .)
    AND             shift and go to state 122
    OR              shift and go to state 123
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36


state 84

    (57) comparacion -> expression AND expression .
    (49) expression -> expression . PLUS term
    (50) expression -> expression . MINUS term

    $end            reduce using rule 57 (comparacion -> expression AND expression .)
    RETURN          reduce using rule 57 (comparacion -> expression AND expression .)
    VARIABLE        reduce using rule 57 (comparacion -> expression AND expression .)
    IF              reduce using rule 57 (comparacion -> expression AND expression .)
    PUTS            reduce using rule 57 (comparacion -> expression AND expression .)
    FOR             reduce using rule 57 (comparacion -> expression AND expression .)
    WHILE           reduce using rule 57 (comparacion -> expression AND expression .)
    TRUE            reduce using rule 57 (comparacion -> expression AND expression .)
    FALSE           reduce using rule 57 (comparacion -> expression AND expression .)
    NUMBER          reduce using rule 57 (comparacion -> expression AND expression .)
    STRING          reduce using rule 57 (comparacion -> expression AND expression .)
    FLOAT           reduce using rule 57 (comparacion -> expression AND expression .)
    LPAR            reduce using rule 57 (comparacion -> expression AND expression .)
    END             reduce using rule 57 (comparacion -> expression AND expression .)
    D_POINT         reduce using rule 57 (comparacion -> expression AND expression .)
    RPAR            reduce using rule 57 (comparacion -> expression AND expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36


state 85

    (58) comparacion -> expression OR expression .
    (49) expression -> expression . PLUS term
    (50) expression -> expression . MINUS term

    $end            reduce using rule 58 (comparacion -> expression OR expression .)
    RETURN          reduce using rule 58 (comparacion -> expression OR expression .)
    VARIABLE        reduce using rule 58 (comparacion -> expression OR expression .)
    IF              reduce using rule 58 (comparacion -> expression OR expression .)
    PUTS            reduce using rule 58 (comparacion -> expression OR expression .)
    FOR             reduce using rule 58 (comparacion -> expression OR expression .)
    WHILE           reduce using rule 58 (comparacion -> expression OR expression .)
    TRUE            reduce using rule 58 (comparacion -> expression OR expression .)
    FALSE           reduce using rule 58 (comparacion -> expression OR expression .)
    NUMBER          reduce using rule 58 (comparacion -> expression OR expression .)
    STRING          reduce using rule 58 (comparacion -> expression OR expression .)
    FLOAT           reduce using rule 58 (comparacion -> expression OR expression .)
    LPAR            reduce using rule 58 (comparacion -> expression OR expression .)
    END             reduce using rule 58 (comparacion -> expression OR expression .)
    D_POINT         reduce using rule 58 (comparacion -> expression OR expression .)
    RPAR            reduce using rule 58 (comparacion -> expression OR expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36


state 86

    (63) comparador -> ASIGN ASIGN .

    TRUE            reduce using rule 63 (comparador -> ASIGN ASIGN .)
    FALSE           reduce using rule 63 (comparador -> ASIGN ASIGN .)
    NUMBER          reduce using rule 63 (comparador -> ASIGN ASIGN .)
    STRING          reduce using rule 63 (comparador -> ASIGN ASIGN .)
    FLOAT           reduce using rule 63 (comparador -> ASIGN ASIGN .)
    VARIABLE        reduce using rule 63 (comparador -> ASIGN ASIGN .)
    LPAR            reduce using rule 63 (comparador -> ASIGN ASIGN .)


state 87

    (64) comparador -> NOT ASIGN .

    TRUE            reduce using rule 64 (comparador -> NOT ASIGN .)
    FALSE           reduce using rule 64 (comparador -> NOT ASIGN .)
    NUMBER          reduce using rule 64 (comparador -> NOT ASIGN .)
    STRING          reduce using rule 64 (comparador -> NOT ASIGN .)
    FLOAT           reduce using rule 64 (comparador -> NOT ASIGN .)
    VARIABLE        reduce using rule 64 (comparador -> NOT ASIGN .)
    LPAR            reduce using rule 64 (comparador -> NOT ASIGN .)


state 88

    (77) callFuncion -> VARIABLE . LPAR RPAR
    (78) callFuncion -> VARIABLE . LPAR parametros RPAR
    (84) getValueHash -> VARIABLE . LCOR expression RCOR
    (47) factor -> VARIABLE .

  ! shift/reduce conflict for LPAR resolved as shift
    LPAR            shift and go to state 47
    LCOR            shift and go to state 124
    TIMES           reduce using rule 47 (factor -> VARIABLE .)
    DIVIDE          reduce using rule 47 (factor -> VARIABLE .)
    EXPONENTIATION  reduce using rule 47 (factor -> VARIABLE .)
    PLUS            reduce using rule 47 (factor -> VARIABLE .)
    MINUS           reduce using rule 47 (factor -> VARIABLE .)
    AND             reduce using rule 47 (factor -> VARIABLE .)
    OR              reduce using rule 47 (factor -> VARIABLE .)
    GREATER         reduce using rule 47 (factor -> VARIABLE .)
    GREATER_OR_EQUAL reduce using rule 47 (factor -> VARIABLE .)
    MINOR           reduce using rule 47 (factor -> VARIABLE .)
    MINOR_OR_EQUAL  reduce using rule 47 (factor -> VARIABLE .)
    ASIGN           reduce using rule 47 (factor -> VARIABLE .)
    NOT             reduce using rule 47 (factor -> VARIABLE .)
    $end            reduce using rule 47 (factor -> VARIABLE .)
    RETURN          reduce using rule 47 (factor -> VARIABLE .)
    VARIABLE        reduce using rule 47 (factor -> VARIABLE .)
    IF              reduce using rule 47 (factor -> VARIABLE .)
    PUTS            reduce using rule 47 (factor -> VARIABLE .)
    FOR             reduce using rule 47 (factor -> VARIABLE .)
    WHILE           reduce using rule 47 (factor -> VARIABLE .)
    TRUE            reduce using rule 47 (factor -> VARIABLE .)
    FALSE           reduce using rule 47 (factor -> VARIABLE .)
    NUMBER          reduce using rule 47 (factor -> VARIABLE .)
    STRING          reduce using rule 47 (factor -> VARIABLE .)
    FLOAT           reduce using rule 47 (factor -> VARIABLE .)
    END             reduce using rule 47 (factor -> VARIABLE .)

  ! LPAR            [ reduce using rule 47 (factor -> VARIABLE .) ]


state 89

    (34) asignacion -> VARIABLE ASIGN expression .
    (49) expression -> expression . PLUS term
    (50) expression -> expression . MINUS term
    (54) comparacion -> expression . comparador expression
    (55) comparacion -> expression . comparador expression AND comparacion
    (56) comparacion -> expression . comparador expression OR comparacion
    (57) comparacion -> expression . AND expression
    (58) comparacion -> expression . OR expression
    (59) comparador -> . GREATER
    (60) comparador -> . GREATER_OR_EQUAL
    (61) comparador -> . MINOR
    (62) comparador -> . MINOR_OR_EQUAL
    (63) comparador -> . ASIGN ASIGN
    (64) comparador -> . NOT ASIGN

    $end            reduce using rule 34 (asignacion -> VARIABLE ASIGN expression .)
    RETURN          reduce using rule 34 (asignacion -> VARIABLE ASIGN expression .)
    VARIABLE        reduce using rule 34 (asignacion -> VARIABLE ASIGN expression .)
    IF              reduce using rule 34 (asignacion -> VARIABLE ASIGN expression .)
    PUTS            reduce using rule 34 (asignacion -> VARIABLE ASIGN expression .)
    FOR             reduce using rule 34 (asignacion -> VARIABLE ASIGN expression .)
    WHILE           reduce using rule 34 (asignacion -> VARIABLE ASIGN expression .)
    TRUE            reduce using rule 34 (asignacion -> VARIABLE ASIGN expression .)
    FALSE           reduce using rule 34 (asignacion -> VARIABLE ASIGN expression .)
    NUMBER          reduce using rule 34 (asignacion -> VARIABLE ASIGN expression .)
    STRING          reduce using rule 34 (asignacion -> VARIABLE ASIGN expression .)
    FLOAT           reduce using rule 34 (asignacion -> VARIABLE ASIGN expression .)
    LPAR            reduce using rule 34 (asignacion -> VARIABLE ASIGN expression .)
    END             reduce using rule 34 (asignacion -> VARIABLE ASIGN expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36
    AND             shift and go to state 38
    OR              shift and go to state 39
    GREATER         shift and go to state 40
    GREATER_OR_EQUAL shift and go to state 41
    MINOR           shift and go to state 42
    MINOR_OR_EQUAL  shift and go to state 43
    ASIGN           shift and go to state 44
    NOT             shift and go to state 45

    comparador                     shift and go to state 37

state 90

    (35) asignacion -> VARIABLE ASIGN comparacion .

    $end            reduce using rule 35 (asignacion -> VARIABLE ASIGN comparacion .)
    RETURN          reduce using rule 35 (asignacion -> VARIABLE ASIGN comparacion .)
    VARIABLE        reduce using rule 35 (asignacion -> VARIABLE ASIGN comparacion .)
    IF              reduce using rule 35 (asignacion -> VARIABLE ASIGN comparacion .)
    PUTS            reduce using rule 35 (asignacion -> VARIABLE ASIGN comparacion .)
    FOR             reduce using rule 35 (asignacion -> VARIABLE ASIGN comparacion .)
    WHILE           reduce using rule 35 (asignacion -> VARIABLE ASIGN comparacion .)
    TRUE            reduce using rule 35 (asignacion -> VARIABLE ASIGN comparacion .)
    FALSE           reduce using rule 35 (asignacion -> VARIABLE ASIGN comparacion .)
    NUMBER          reduce using rule 35 (asignacion -> VARIABLE ASIGN comparacion .)
    STRING          reduce using rule 35 (asignacion -> VARIABLE ASIGN comparacion .)
    FLOAT           reduce using rule 35 (asignacion -> VARIABLE ASIGN comparacion .)
    LPAR            reduce using rule 35 (asignacion -> VARIABLE ASIGN comparacion .)
    END             reduce using rule 35 (asignacion -> VARIABLE ASIGN comparacion .)


state 91

    (36) asignacion -> VARIABLE ASIGN callFuncion .

    $end            reduce using rule 36 (asignacion -> VARIABLE ASIGN callFuncion .)
    RETURN          reduce using rule 36 (asignacion -> VARIABLE ASIGN callFuncion .)
    VARIABLE        reduce using rule 36 (asignacion -> VARIABLE ASIGN callFuncion .)
    IF              reduce using rule 36 (asignacion -> VARIABLE ASIGN callFuncion .)
    PUTS            reduce using rule 36 (asignacion -> VARIABLE ASIGN callFuncion .)
    FOR             reduce using rule 36 (asignacion -> VARIABLE ASIGN callFuncion .)
    WHILE           reduce using rule 36 (asignacion -> VARIABLE ASIGN callFuncion .)
    TRUE            reduce using rule 36 (asignacion -> VARIABLE ASIGN callFuncion .)
    FALSE           reduce using rule 36 (asignacion -> VARIABLE ASIGN callFuncion .)
    NUMBER          reduce using rule 36 (asignacion -> VARIABLE ASIGN callFuncion .)
    STRING          reduce using rule 36 (asignacion -> VARIABLE ASIGN callFuncion .)
    FLOAT           reduce using rule 36 (asignacion -> VARIABLE ASIGN callFuncion .)
    LPAR            reduce using rule 36 (asignacion -> VARIABLE ASIGN callFuncion .)
    END             reduce using rule 36 (asignacion -> VARIABLE ASIGN callFuncion .)


state 92

    (37) asignacion -> VARIABLE ASIGN diccionario .

    $end            reduce using rule 37 (asignacion -> VARIABLE ASIGN diccionario .)
    RETURN          reduce using rule 37 (asignacion -> VARIABLE ASIGN diccionario .)
    VARIABLE        reduce using rule 37 (asignacion -> VARIABLE ASIGN diccionario .)
    IF              reduce using rule 37 (asignacion -> VARIABLE ASIGN diccionario .)
    PUTS            reduce using rule 37 (asignacion -> VARIABLE ASIGN diccionario .)
    FOR             reduce using rule 37 (asignacion -> VARIABLE ASIGN diccionario .)
    WHILE           reduce using rule 37 (asignacion -> VARIABLE ASIGN diccionario .)
    TRUE            reduce using rule 37 (asignacion -> VARIABLE ASIGN diccionario .)
    FALSE           reduce using rule 37 (asignacion -> VARIABLE ASIGN diccionario .)
    NUMBER          reduce using rule 37 (asignacion -> VARIABLE ASIGN diccionario .)
    STRING          reduce using rule 37 (asignacion -> VARIABLE ASIGN diccionario .)
    FLOAT           reduce using rule 37 (asignacion -> VARIABLE ASIGN diccionario .)
    LPAR            reduce using rule 37 (asignacion -> VARIABLE ASIGN diccionario .)
    END             reduce using rule 37 (asignacion -> VARIABLE ASIGN diccionario .)


state 93

    (38) asignacion -> VARIABLE ASIGN getValueHash .

    $end            reduce using rule 38 (asignacion -> VARIABLE ASIGN getValueHash .)
    RETURN          reduce using rule 38 (asignacion -> VARIABLE ASIGN getValueHash .)
    VARIABLE        reduce using rule 38 (asignacion -> VARIABLE ASIGN getValueHash .)
    IF              reduce using rule 38 (asignacion -> VARIABLE ASIGN getValueHash .)
    PUTS            reduce using rule 38 (asignacion -> VARIABLE ASIGN getValueHash .)
    FOR             reduce using rule 38 (asignacion -> VARIABLE ASIGN getValueHash .)
    WHILE           reduce using rule 38 (asignacion -> VARIABLE ASIGN getValueHash .)
    TRUE            reduce using rule 38 (asignacion -> VARIABLE ASIGN getValueHash .)
    FALSE           reduce using rule 38 (asignacion -> VARIABLE ASIGN getValueHash .)
    NUMBER          reduce using rule 38 (asignacion -> VARIABLE ASIGN getValueHash .)
    STRING          reduce using rule 38 (asignacion -> VARIABLE ASIGN getValueHash .)
    FLOAT           reduce using rule 38 (asignacion -> VARIABLE ASIGN getValueHash .)
    LPAR            reduce using rule 38 (asignacion -> VARIABLE ASIGN getValueHash .)
    END             reduce using rule 38 (asignacion -> VARIABLE ASIGN getValueHash .)


state 94

    (39) asignacion -> VARIABLE ASIGN array .

    $end            reduce using rule 39 (asignacion -> VARIABLE ASIGN array .)
    RETURN          reduce using rule 39 (asignacion -> VARIABLE ASIGN array .)
    VARIABLE        reduce using rule 39 (asignacion -> VARIABLE ASIGN array .)
    IF              reduce using rule 39 (asignacion -> VARIABLE ASIGN array .)
    PUTS            reduce using rule 39 (asignacion -> VARIABLE ASIGN array .)
    FOR             reduce using rule 39 (asignacion -> VARIABLE ASIGN array .)
    WHILE           reduce using rule 39 (asignacion -> VARIABLE ASIGN array .)
    TRUE            reduce using rule 39 (asignacion -> VARIABLE ASIGN array .)
    FALSE           reduce using rule 39 (asignacion -> VARIABLE ASIGN array .)
    NUMBER          reduce using rule 39 (asignacion -> VARIABLE ASIGN array .)
    STRING          reduce using rule 39 (asignacion -> VARIABLE ASIGN array .)
    FLOAT           reduce using rule 39 (asignacion -> VARIABLE ASIGN array .)
    LPAR            reduce using rule 39 (asignacion -> VARIABLE ASIGN array .)
    END             reduce using rule 39 (asignacion -> VARIABLE ASIGN array .)


state 95

    (40) asignacion -> VARIABLE ASIGN stack .

    $end            reduce using rule 40 (asignacion -> VARIABLE ASIGN stack .)
    RETURN          reduce using rule 40 (asignacion -> VARIABLE ASIGN stack .)
    VARIABLE        reduce using rule 40 (asignacion -> VARIABLE ASIGN stack .)
    IF              reduce using rule 40 (asignacion -> VARIABLE ASIGN stack .)
    PUTS            reduce using rule 40 (asignacion -> VARIABLE ASIGN stack .)
    FOR             reduce using rule 40 (asignacion -> VARIABLE ASIGN stack .)
    WHILE           reduce using rule 40 (asignacion -> VARIABLE ASIGN stack .)
    TRUE            reduce using rule 40 (asignacion -> VARIABLE ASIGN stack .)
    FALSE           reduce using rule 40 (asignacion -> VARIABLE ASIGN stack .)
    NUMBER          reduce using rule 40 (asignacion -> VARIABLE ASIGN stack .)
    STRING          reduce using rule 40 (asignacion -> VARIABLE ASIGN stack .)
    FLOAT           reduce using rule 40 (asignacion -> VARIABLE ASIGN stack .)
    LPAR            reduce using rule 40 (asignacion -> VARIABLE ASIGN stack .)
    END             reduce using rule 40 (asignacion -> VARIABLE ASIGN stack .)


state 96

    (69) input -> VARIABLE ASIGN GETS .

    $end            reduce using rule 69 (input -> VARIABLE ASIGN GETS .)
    RETURN          reduce using rule 69 (input -> VARIABLE ASIGN GETS .)
    VARIABLE        reduce using rule 69 (input -> VARIABLE ASIGN GETS .)
    IF              reduce using rule 69 (input -> VARIABLE ASIGN GETS .)
    PUTS            reduce using rule 69 (input -> VARIABLE ASIGN GETS .)
    FOR             reduce using rule 69 (input -> VARIABLE ASIGN GETS .)
    WHILE           reduce using rule 69 (input -> VARIABLE ASIGN GETS .)
    TRUE            reduce using rule 69 (input -> VARIABLE ASIGN GETS .)
    FALSE           reduce using rule 69 (input -> VARIABLE ASIGN GETS .)
    NUMBER          reduce using rule 69 (input -> VARIABLE ASIGN GETS .)
    STRING          reduce using rule 69 (input -> VARIABLE ASIGN GETS .)
    FLOAT           reduce using rule 69 (input -> VARIABLE ASIGN GETS .)
    LPAR            reduce using rule 69 (input -> VARIABLE ASIGN GETS .)
    END             reduce using rule 69 (input -> VARIABLE ASIGN GETS .)


state 97

    (81) diccionario -> LKEY . cuerpoHash RKEY
    (82) cuerpoHash -> . expression ASIGN GREATER expression
    (83) cuerpoHash -> . expression ASIGN GREATER expression COMMA cuerpoHash
    (41) expression -> . term
    (42) expression -> . boleano
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (79) boleano -> . TRUE
    (80) boleano -> . FALSE
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    NUMBER          shift and go to state 27
    STRING          shift and go to state 33
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 75
    LPAR            shift and go to state 25

    cuerpoHash                     shift and go to state 125
    expression                     shift and go to state 126
    term                           shift and go to state 20
    boleano                        shift and go to state 21
    factor                         shift and go to state 29

state 98

    (94) array -> LCOR . parametrosA RCOR
    (95) array -> LCOR . RCOR
    (102) stack -> LCOR . parametrosA RCOR
    (103) stack -> LCOR . vacio RCOR
    (92) parametrosA -> . factor
    (93) parametrosA -> . factor COMMA parametrosA
    (101) vacio -> . 
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    RCOR            shift and go to state 128
                    shift and go to state 131
    NUMBER          shift and go to state 27
    STRING          shift and go to state 33
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 75
    LPAR            shift and go to state 25

    parametrosA                    shift and go to state 127
    vacio                          shift and go to state 129
    factor                         shift and go to state 130

state 99

    (70) parametros -> VARIABLE .
    (71) parametros -> VARIABLE . COMMA parametros

    RPAR            reduce using rule 70 (parametros -> VARIABLE .)
    COMMA           shift and go to state 132


state 100

    (77) callFuncion -> VARIABLE LPAR RPAR .

    $end            reduce using rule 77 (callFuncion -> VARIABLE LPAR RPAR .)
    RETURN          reduce using rule 77 (callFuncion -> VARIABLE LPAR RPAR .)
    VARIABLE        reduce using rule 77 (callFuncion -> VARIABLE LPAR RPAR .)
    IF              reduce using rule 77 (callFuncion -> VARIABLE LPAR RPAR .)
    PUTS            reduce using rule 77 (callFuncion -> VARIABLE LPAR RPAR .)
    FOR             reduce using rule 77 (callFuncion -> VARIABLE LPAR RPAR .)
    WHILE           reduce using rule 77 (callFuncion -> VARIABLE LPAR RPAR .)
    TRUE            reduce using rule 77 (callFuncion -> VARIABLE LPAR RPAR .)
    FALSE           reduce using rule 77 (callFuncion -> VARIABLE LPAR RPAR .)
    NUMBER          reduce using rule 77 (callFuncion -> VARIABLE LPAR RPAR .)
    STRING          reduce using rule 77 (callFuncion -> VARIABLE LPAR RPAR .)
    FLOAT           reduce using rule 77 (callFuncion -> VARIABLE LPAR RPAR .)
    LPAR            reduce using rule 77 (callFuncion -> VARIABLE LPAR RPAR .)
    END             reduce using rule 77 (callFuncion -> VARIABLE LPAR RPAR .)


state 101

    (78) callFuncion -> VARIABLE LPAR parametros . RPAR

    RPAR            shift and go to state 133


state 102

    (85) addValueHash -> VARIABLE LCOR expression . RCOR ASIGN expression
    (86) modValueHash -> VARIABLE LCOR expression . RCOR ASIGN expression
    (49) expression -> expression . PLUS term
    (50) expression -> expression . MINUS term

    RCOR            shift and go to state 134
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36


state 103

    (87) deleteValueHash -> VARIABLE POINT DELETE . LPAR expression RPAR

    LPAR            shift and go to state 135


state 104

    (97) insertArray -> VARIABLE POINT INSERT . LPAR argumentosA RPAR

    LPAR            shift and go to state 136


state 105

    (98) deleteArray -> VARIABLE POINT DELETE_AT . LPAR NUMBER RPAR

    LPAR            shift and go to state 137


state 106

    (104) searchStack -> VARIABLE POINT SEARCH . LPAR factor RPAR

    LPAR            shift and go to state 138


state 107

    (105) pushStack -> VARIABLE POINT PUSH . LPAR factor RPAR

    LPAR            shift and go to state 139


state 108

    (51) term -> term TIMES factor .

    TIMES           reduce using rule 51 (term -> term TIMES factor .)
    DIVIDE          reduce using rule 51 (term -> term TIMES factor .)
    EXPONENTIATION  reduce using rule 51 (term -> term TIMES factor .)
    PLUS            reduce using rule 51 (term -> term TIMES factor .)
    MINUS           reduce using rule 51 (term -> term TIMES factor .)
    AND             reduce using rule 51 (term -> term TIMES factor .)
    OR              reduce using rule 51 (term -> term TIMES factor .)
    GREATER         reduce using rule 51 (term -> term TIMES factor .)
    GREATER_OR_EQUAL reduce using rule 51 (term -> term TIMES factor .)
    MINOR           reduce using rule 51 (term -> term TIMES factor .)
    MINOR_OR_EQUAL  reduce using rule 51 (term -> term TIMES factor .)
    ASIGN           reduce using rule 51 (term -> term TIMES factor .)
    NOT             reduce using rule 51 (term -> term TIMES factor .)
    $end            reduce using rule 51 (term -> term TIMES factor .)
    RETURN          reduce using rule 51 (term -> term TIMES factor .)
    VARIABLE        reduce using rule 51 (term -> term TIMES factor .)
    IF              reduce using rule 51 (term -> term TIMES factor .)
    PUTS            reduce using rule 51 (term -> term TIMES factor .)
    FOR             reduce using rule 51 (term -> term TIMES factor .)
    WHILE           reduce using rule 51 (term -> term TIMES factor .)
    TRUE            reduce using rule 51 (term -> term TIMES factor .)
    FALSE           reduce using rule 51 (term -> term TIMES factor .)
    NUMBER          reduce using rule 51 (term -> term TIMES factor .)
    STRING          reduce using rule 51 (term -> term TIMES factor .)
    FLOAT           reduce using rule 51 (term -> term TIMES factor .)
    LPAR            reduce using rule 51 (term -> term TIMES factor .)
    END             reduce using rule 51 (term -> term TIMES factor .)
    RPAR            reduce using rule 51 (term -> term TIMES factor .)
    D_POINT         reduce using rule 51 (term -> term TIMES factor .)
    RCOR            reduce using rule 51 (term -> term TIMES factor .)
    COMMA           reduce using rule 51 (term -> term TIMES factor .)
    RKEY            reduce using rule 51 (term -> term TIMES factor .)


state 109

    (52) term -> term DIVIDE factor .

    TIMES           reduce using rule 52 (term -> term DIVIDE factor .)
    DIVIDE          reduce using rule 52 (term -> term DIVIDE factor .)
    EXPONENTIATION  reduce using rule 52 (term -> term DIVIDE factor .)
    PLUS            reduce using rule 52 (term -> term DIVIDE factor .)
    MINUS           reduce using rule 52 (term -> term DIVIDE factor .)
    AND             reduce using rule 52 (term -> term DIVIDE factor .)
    OR              reduce using rule 52 (term -> term DIVIDE factor .)
    GREATER         reduce using rule 52 (term -> term DIVIDE factor .)
    GREATER_OR_EQUAL reduce using rule 52 (term -> term DIVIDE factor .)
    MINOR           reduce using rule 52 (term -> term DIVIDE factor .)
    MINOR_OR_EQUAL  reduce using rule 52 (term -> term DIVIDE factor .)
    ASIGN           reduce using rule 52 (term -> term DIVIDE factor .)
    NOT             reduce using rule 52 (term -> term DIVIDE factor .)
    $end            reduce using rule 52 (term -> term DIVIDE factor .)
    RETURN          reduce using rule 52 (term -> term DIVIDE factor .)
    VARIABLE        reduce using rule 52 (term -> term DIVIDE factor .)
    IF              reduce using rule 52 (term -> term DIVIDE factor .)
    PUTS            reduce using rule 52 (term -> term DIVIDE factor .)
    FOR             reduce using rule 52 (term -> term DIVIDE factor .)
    WHILE           reduce using rule 52 (term -> term DIVIDE factor .)
    TRUE            reduce using rule 52 (term -> term DIVIDE factor .)
    FALSE           reduce using rule 52 (term -> term DIVIDE factor .)
    NUMBER          reduce using rule 52 (term -> term DIVIDE factor .)
    STRING          reduce using rule 52 (term -> term DIVIDE factor .)
    FLOAT           reduce using rule 52 (term -> term DIVIDE factor .)
    LPAR            reduce using rule 52 (term -> term DIVIDE factor .)
    END             reduce using rule 52 (term -> term DIVIDE factor .)
    RPAR            reduce using rule 52 (term -> term DIVIDE factor .)
    D_POINT         reduce using rule 52 (term -> term DIVIDE factor .)
    RCOR            reduce using rule 52 (term -> term DIVIDE factor .)
    COMMA           reduce using rule 52 (term -> term DIVIDE factor .)
    RKEY            reduce using rule 52 (term -> term DIVIDE factor .)


state 110

    (53) term -> term EXPONENTIATION factor .

    TIMES           reduce using rule 53 (term -> term EXPONENTIATION factor .)
    DIVIDE          reduce using rule 53 (term -> term EXPONENTIATION factor .)
    EXPONENTIATION  reduce using rule 53 (term -> term EXPONENTIATION factor .)
    PLUS            reduce using rule 53 (term -> term EXPONENTIATION factor .)
    MINUS           reduce using rule 53 (term -> term EXPONENTIATION factor .)
    AND             reduce using rule 53 (term -> term EXPONENTIATION factor .)
    OR              reduce using rule 53 (term -> term EXPONENTIATION factor .)
    GREATER         reduce using rule 53 (term -> term EXPONENTIATION factor .)
    GREATER_OR_EQUAL reduce using rule 53 (term -> term EXPONENTIATION factor .)
    MINOR           reduce using rule 53 (term -> term EXPONENTIATION factor .)
    MINOR_OR_EQUAL  reduce using rule 53 (term -> term EXPONENTIATION factor .)
    ASIGN           reduce using rule 53 (term -> term EXPONENTIATION factor .)
    NOT             reduce using rule 53 (term -> term EXPONENTIATION factor .)
    $end            reduce using rule 53 (term -> term EXPONENTIATION factor .)
    RETURN          reduce using rule 53 (term -> term EXPONENTIATION factor .)
    VARIABLE        reduce using rule 53 (term -> term EXPONENTIATION factor .)
    IF              reduce using rule 53 (term -> term EXPONENTIATION factor .)
    PUTS            reduce using rule 53 (term -> term EXPONENTIATION factor .)
    FOR             reduce using rule 53 (term -> term EXPONENTIATION factor .)
    WHILE           reduce using rule 53 (term -> term EXPONENTIATION factor .)
    TRUE            reduce using rule 53 (term -> term EXPONENTIATION factor .)
    FALSE           reduce using rule 53 (term -> term EXPONENTIATION factor .)
    NUMBER          reduce using rule 53 (term -> term EXPONENTIATION factor .)
    STRING          reduce using rule 53 (term -> term EXPONENTIATION factor .)
    FLOAT           reduce using rule 53 (term -> term EXPONENTIATION factor .)
    LPAR            reduce using rule 53 (term -> term EXPONENTIATION factor .)
    END             reduce using rule 53 (term -> term EXPONENTIATION factor .)
    RPAR            reduce using rule 53 (term -> term EXPONENTIATION factor .)
    D_POINT         reduce using rule 53 (term -> term EXPONENTIATION factor .)
    RCOR            reduce using rule 53 (term -> term EXPONENTIATION factor .)
    COMMA           reduce using rule 53 (term -> term EXPONENTIATION factor .)
    RKEY            reduce using rule 53 (term -> term EXPONENTIATION factor .)


state 111

    (74) funciones -> encabezado repCuerpo END .

    $end            reduce using rule 74 (funciones -> encabezado repCuerpo END .)


state 112

    (75) funciones -> encabezado RETURN expression . END
    (49) expression -> expression . PLUS term
    (50) expression -> expression . MINUS term

    END             shift and go to state 140
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36


state 113

    (90) repCuerpo -> cuerpo .
    (91) repCuerpo -> cuerpo . repCuerpo
    (90) repCuerpo -> . cuerpo
    (91) repCuerpo -> . cuerpo repCuerpo
    (18) cuerpo -> . asignacion
    (19) cuerpo -> . expression
    (20) cuerpo -> . comparacion
    (21) cuerpo -> . condicional
    (22) cuerpo -> . impresion
    (23) cuerpo -> . for
    (24) cuerpo -> . while
    (25) cuerpo -> . input
    (26) cuerpo -> . callFuncion
    (27) cuerpo -> . addValueHash
    (28) cuerpo -> . modValueHash
    (29) cuerpo -> . deleteValueHash
    (30) cuerpo -> . insertArray
    (31) cuerpo -> . deleteArray
    (32) cuerpo -> . pushStack
    (33) cuerpo -> . searchStack
    (34) asignacion -> . VARIABLE ASIGN expression
    (35) asignacion -> . VARIABLE ASIGN comparacion
    (36) asignacion -> . VARIABLE ASIGN callFuncion
    (37) asignacion -> . VARIABLE ASIGN diccionario
    (38) asignacion -> . VARIABLE ASIGN getValueHash
    (39) asignacion -> . VARIABLE ASIGN array
    (40) asignacion -> . VARIABLE ASIGN stack
    (41) expression -> . term
    (42) expression -> . boleano
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (54) comparacion -> . expression comparador expression
    (55) comparacion -> . expression comparador expression AND comparacion
    (56) comparacion -> . expression comparador expression OR comparacion
    (57) comparacion -> . expression AND expression
    (58) comparacion -> . expression OR expression
    (65) condicional -> . IF comparacion D_POINT repCuerpo END
    (66) condicional -> . IF comparacion D_POINT repCuerpo END cond_else
    (68) impresion -> . PUTS factor
    (99) for -> . FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END
    (100) for -> . FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for
    (88) while -> . WHILE LPAR comparacion RPAR repCuerpo END
    (89) while -> . WHILE LPAR comparacion RPAR repCuerpo END while
    (69) input -> . VARIABLE ASIGN GETS
    (77) callFuncion -> . VARIABLE LPAR RPAR
    (78) callFuncion -> . VARIABLE LPAR parametros RPAR
    (85) addValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (86) modValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (87) deleteValueHash -> . VARIABLE POINT DELETE LPAR expression RPAR
    (97) insertArray -> . VARIABLE POINT INSERT LPAR argumentosA RPAR
    (98) deleteArray -> . VARIABLE POINT DELETE_AT LPAR NUMBER RPAR
    (105) pushStack -> . VARIABLE POINT PUSH LPAR factor RPAR
    (104) searchStack -> . VARIABLE POINT SEARCH LPAR factor RPAR
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (79) boleano -> . TRUE
    (80) boleano -> . FALSE
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    END             reduce using rule 90 (repCuerpo -> cuerpo .)
    VARIABLE        shift and go to state 72
    IF              shift and go to state 23
    PUTS            shift and go to state 28
    FOR             shift and go to state 26
    WHILE           shift and go to state 24
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    NUMBER          shift and go to state 27
    STRING          shift and go to state 33
    FLOAT           shift and go to state 34
    LPAR            shift and go to state 25

    cuerpo                         shift and go to state 113
    repCuerpo                      shift and go to state 115
    asignacion                     shift and go to state 57
    expression                     shift and go to state 55
    comparacion                    shift and go to state 58
    condicional                    shift and go to state 59
    impresion                      shift and go to state 60
    for                            shift and go to state 61
    while                          shift and go to state 62
    input                          shift and go to state 63
    callFuncion                    shift and go to state 64
    addValueHash                   shift and go to state 65
    modValueHash                   shift and go to state 66
    deleteValueHash                shift and go to state 67
    insertArray                    shift and go to state 68
    deleteArray                    shift and go to state 69
    pushStack                      shift and go to state 70
    searchStack                    shift and go to state 71
    term                           shift and go to state 20
    boleano                        shift and go to state 21
    factor                         shift and go to state 29

state 114

    (76) funciones -> encabezado cuerpo RETURN . expression END
    (41) expression -> . term
    (42) expression -> . boleano
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (79) boleano -> . TRUE
    (80) boleano -> . FALSE
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    NUMBER          shift and go to state 27
    STRING          shift and go to state 33
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 75
    LPAR            shift and go to state 25

    expression                     shift and go to state 141
    term                           shift and go to state 20
    boleano                        shift and go to state 21
    factor                         shift and go to state 29

state 115

    (91) repCuerpo -> cuerpo repCuerpo .

    END             reduce using rule 91 (repCuerpo -> cuerpo repCuerpo .)


state 116

    (87) deleteValueHash -> VARIABLE POINT . DELETE LPAR expression RPAR
    (97) insertArray -> VARIABLE POINT . INSERT LPAR argumentosA RPAR
    (98) deleteArray -> VARIABLE POINT . DELETE_AT LPAR NUMBER RPAR
    (105) pushStack -> VARIABLE POINT . PUSH LPAR factor RPAR
    (104) searchStack -> VARIABLE POINT . SEARCH LPAR factor RPAR

    DELETE          shift and go to state 103
    INSERT          shift and go to state 104
    DELETE_AT       shift and go to state 105
    PUSH            shift and go to state 107
    SEARCH          shift and go to state 106


state 117

    (65) condicional -> IF comparacion D_POINT . repCuerpo END
    (66) condicional -> IF comparacion D_POINT . repCuerpo END cond_else
    (90) repCuerpo -> . cuerpo
    (91) repCuerpo -> . cuerpo repCuerpo
    (18) cuerpo -> . asignacion
    (19) cuerpo -> . expression
    (20) cuerpo -> . comparacion
    (21) cuerpo -> . condicional
    (22) cuerpo -> . impresion
    (23) cuerpo -> . for
    (24) cuerpo -> . while
    (25) cuerpo -> . input
    (26) cuerpo -> . callFuncion
    (27) cuerpo -> . addValueHash
    (28) cuerpo -> . modValueHash
    (29) cuerpo -> . deleteValueHash
    (30) cuerpo -> . insertArray
    (31) cuerpo -> . deleteArray
    (32) cuerpo -> . pushStack
    (33) cuerpo -> . searchStack
    (34) asignacion -> . VARIABLE ASIGN expression
    (35) asignacion -> . VARIABLE ASIGN comparacion
    (36) asignacion -> . VARIABLE ASIGN callFuncion
    (37) asignacion -> . VARIABLE ASIGN diccionario
    (38) asignacion -> . VARIABLE ASIGN getValueHash
    (39) asignacion -> . VARIABLE ASIGN array
    (40) asignacion -> . VARIABLE ASIGN stack
    (41) expression -> . term
    (42) expression -> . boleano
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (54) comparacion -> . expression comparador expression
    (55) comparacion -> . expression comparador expression AND comparacion
    (56) comparacion -> . expression comparador expression OR comparacion
    (57) comparacion -> . expression AND expression
    (58) comparacion -> . expression OR expression
    (65) condicional -> . IF comparacion D_POINT repCuerpo END
    (66) condicional -> . IF comparacion D_POINT repCuerpo END cond_else
    (68) impresion -> . PUTS factor
    (99) for -> . FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END
    (100) for -> . FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for
    (88) while -> . WHILE LPAR comparacion RPAR repCuerpo END
    (89) while -> . WHILE LPAR comparacion RPAR repCuerpo END while
    (69) input -> . VARIABLE ASIGN GETS
    (77) callFuncion -> . VARIABLE LPAR RPAR
    (78) callFuncion -> . VARIABLE LPAR parametros RPAR
    (85) addValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (86) modValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (87) deleteValueHash -> . VARIABLE POINT DELETE LPAR expression RPAR
    (97) insertArray -> . VARIABLE POINT INSERT LPAR argumentosA RPAR
    (98) deleteArray -> . VARIABLE POINT DELETE_AT LPAR NUMBER RPAR
    (105) pushStack -> . VARIABLE POINT PUSH LPAR factor RPAR
    (104) searchStack -> . VARIABLE POINT SEARCH LPAR factor RPAR
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (79) boleano -> . TRUE
    (80) boleano -> . FALSE
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    VARIABLE        shift and go to state 72
    IF              shift and go to state 23
    PUTS            shift and go to state 28
    FOR             shift and go to state 26
    WHILE           shift and go to state 24
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    NUMBER          shift and go to state 27
    STRING          shift and go to state 33
    FLOAT           shift and go to state 34
    LPAR            shift and go to state 25

    comparacion                    shift and go to state 58
    repCuerpo                      shift and go to state 142
    cuerpo                         shift and go to state 113
    asignacion                     shift and go to state 57
    expression                     shift and go to state 55
    condicional                    shift and go to state 59
    impresion                      shift and go to state 60
    for                            shift and go to state 61
    while                          shift and go to state 62
    input                          shift and go to state 63
    callFuncion                    shift and go to state 64
    addValueHash                   shift and go to state 65
    modValueHash                   shift and go to state 66
    deleteValueHash                shift and go to state 67
    insertArray                    shift and go to state 68
    deleteArray                    shift and go to state 69
    pushStack                      shift and go to state 70
    searchStack                    shift and go to state 71
    term                           shift and go to state 20
    boleano                        shift and go to state 21
    factor                         shift and go to state 29

state 118

    (88) while -> WHILE LPAR comparacion . RPAR repCuerpo END
    (89) while -> WHILE LPAR comparacion . RPAR repCuerpo END while

    RPAR            shift and go to state 143


state 119

    (48) factor -> LPAR expression RPAR .

    TIMES           reduce using rule 48 (factor -> LPAR expression RPAR .)
    DIVIDE          reduce using rule 48 (factor -> LPAR expression RPAR .)
    EXPONENTIATION  reduce using rule 48 (factor -> LPAR expression RPAR .)
    PLUS            reduce using rule 48 (factor -> LPAR expression RPAR .)
    MINUS           reduce using rule 48 (factor -> LPAR expression RPAR .)
    AND             reduce using rule 48 (factor -> LPAR expression RPAR .)
    OR              reduce using rule 48 (factor -> LPAR expression RPAR .)
    GREATER         reduce using rule 48 (factor -> LPAR expression RPAR .)
    GREATER_OR_EQUAL reduce using rule 48 (factor -> LPAR expression RPAR .)
    MINOR           reduce using rule 48 (factor -> LPAR expression RPAR .)
    MINOR_OR_EQUAL  reduce using rule 48 (factor -> LPAR expression RPAR .)
    ASIGN           reduce using rule 48 (factor -> LPAR expression RPAR .)
    NOT             reduce using rule 48 (factor -> LPAR expression RPAR .)
    $end            reduce using rule 48 (factor -> LPAR expression RPAR .)
    RETURN          reduce using rule 48 (factor -> LPAR expression RPAR .)
    VARIABLE        reduce using rule 48 (factor -> LPAR expression RPAR .)
    IF              reduce using rule 48 (factor -> LPAR expression RPAR .)
    PUTS            reduce using rule 48 (factor -> LPAR expression RPAR .)
    FOR             reduce using rule 48 (factor -> LPAR expression RPAR .)
    WHILE           reduce using rule 48 (factor -> LPAR expression RPAR .)
    TRUE            reduce using rule 48 (factor -> LPAR expression RPAR .)
    FALSE           reduce using rule 48 (factor -> LPAR expression RPAR .)
    NUMBER          reduce using rule 48 (factor -> LPAR expression RPAR .)
    STRING          reduce using rule 48 (factor -> LPAR expression RPAR .)
    FLOAT           reduce using rule 48 (factor -> LPAR expression RPAR .)
    LPAR            reduce using rule 48 (factor -> LPAR expression RPAR .)
    END             reduce using rule 48 (factor -> LPAR expression RPAR .)
    RPAR            reduce using rule 48 (factor -> LPAR expression RPAR .)
    D_POINT         reduce using rule 48 (factor -> LPAR expression RPAR .)
    RCOR            reduce using rule 48 (factor -> LPAR expression RPAR .)
    COMMA           reduce using rule 48 (factor -> LPAR expression RPAR .)
    RKEY            reduce using rule 48 (factor -> LPAR expression RPAR .)


state 120

    (99) for -> FOR VARIABLE IN . NUMBER POINT POINT NUMBER DO repCuerpo END
    (100) for -> FOR VARIABLE IN . NUMBER POINT POINT NUMBER DO repCuerpo END for

    NUMBER          shift and go to state 144


state 121

    (72) encabezado -> DEF VARIABLE LPAR . RPAR
    (73) encabezado -> DEF VARIABLE LPAR . parametros RPAR
    (70) parametros -> . VARIABLE
    (71) parametros -> . VARIABLE COMMA parametros

    RPAR            shift and go to state 145
    VARIABLE        shift and go to state 99

    parametros                     shift and go to state 146

state 122

    (55) comparacion -> expression comparador expression AND . comparacion
    (54) comparacion -> . expression comparador expression
    (55) comparacion -> . expression comparador expression AND comparacion
    (56) comparacion -> . expression comparador expression OR comparacion
    (57) comparacion -> . expression AND expression
    (58) comparacion -> . expression OR expression
    (41) expression -> . term
    (42) expression -> . boleano
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (79) boleano -> . TRUE
    (80) boleano -> . FALSE
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    NUMBER          shift and go to state 27
    STRING          shift and go to state 33
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 75
    LPAR            shift and go to state 25

    expression                     shift and go to state 74
    comparacion                    shift and go to state 147
    term                           shift and go to state 20
    boleano                        shift and go to state 21
    factor                         shift and go to state 29

state 123

    (56) comparacion -> expression comparador expression OR . comparacion
    (54) comparacion -> . expression comparador expression
    (55) comparacion -> . expression comparador expression AND comparacion
    (56) comparacion -> . expression comparador expression OR comparacion
    (57) comparacion -> . expression AND expression
    (58) comparacion -> . expression OR expression
    (41) expression -> . term
    (42) expression -> . boleano
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (79) boleano -> . TRUE
    (80) boleano -> . FALSE
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    NUMBER          shift and go to state 27
    STRING          shift and go to state 33
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 75
    LPAR            shift and go to state 25

    expression                     shift and go to state 74
    comparacion                    shift and go to state 148
    term                           shift and go to state 20
    boleano                        shift and go to state 21
    factor                         shift and go to state 29

state 124

    (84) getValueHash -> VARIABLE LCOR . expression RCOR
    (41) expression -> . term
    (42) expression -> . boleano
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (79) boleano -> . TRUE
    (80) boleano -> . FALSE
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    NUMBER          shift and go to state 27
    STRING          shift and go to state 33
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 75
    LPAR            shift and go to state 25

    expression                     shift and go to state 149
    term                           shift and go to state 20
    boleano                        shift and go to state 21
    factor                         shift and go to state 29

state 125

    (81) diccionario -> LKEY cuerpoHash . RKEY

    RKEY            shift and go to state 150


state 126

    (82) cuerpoHash -> expression . ASIGN GREATER expression
    (83) cuerpoHash -> expression . ASIGN GREATER expression COMMA cuerpoHash
    (49) expression -> expression . PLUS term
    (50) expression -> expression . MINUS term

    ASIGN           shift and go to state 151
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36


state 127

    (94) array -> LCOR parametrosA . RCOR
    (102) stack -> LCOR parametrosA . RCOR

    RCOR            shift and go to state 152


state 128

    (95) array -> LCOR RCOR .

    $end            reduce using rule 95 (array -> LCOR RCOR .)
    RETURN          reduce using rule 95 (array -> LCOR RCOR .)
    VARIABLE        reduce using rule 95 (array -> LCOR RCOR .)
    IF              reduce using rule 95 (array -> LCOR RCOR .)
    PUTS            reduce using rule 95 (array -> LCOR RCOR .)
    FOR             reduce using rule 95 (array -> LCOR RCOR .)
    WHILE           reduce using rule 95 (array -> LCOR RCOR .)
    TRUE            reduce using rule 95 (array -> LCOR RCOR .)
    FALSE           reduce using rule 95 (array -> LCOR RCOR .)
    NUMBER          reduce using rule 95 (array -> LCOR RCOR .)
    STRING          reduce using rule 95 (array -> LCOR RCOR .)
    FLOAT           reduce using rule 95 (array -> LCOR RCOR .)
    LPAR            reduce using rule 95 (array -> LCOR RCOR .)
    END             reduce using rule 95 (array -> LCOR RCOR .)


state 129

    (103) stack -> LCOR vacio . RCOR

    RCOR            shift and go to state 153


state 130

    (92) parametrosA -> factor .
    (93) parametrosA -> factor . COMMA parametrosA

    RCOR            reduce using rule 92 (parametrosA -> factor .)
    COMMA           shift and go to state 154


state 131

    (101) vacio ->  .

    RCOR            reduce using rule 101 (vacio ->  .)


state 132

    (71) parametros -> VARIABLE COMMA . parametros
    (70) parametros -> . VARIABLE
    (71) parametros -> . VARIABLE COMMA parametros

    VARIABLE        shift and go to state 99

    parametros                     shift and go to state 155

state 133

    (78) callFuncion -> VARIABLE LPAR parametros RPAR .

    $end            reduce using rule 78 (callFuncion -> VARIABLE LPAR parametros RPAR .)
    RETURN          reduce using rule 78 (callFuncion -> VARIABLE LPAR parametros RPAR .)
    VARIABLE        reduce using rule 78 (callFuncion -> VARIABLE LPAR parametros RPAR .)
    IF              reduce using rule 78 (callFuncion -> VARIABLE LPAR parametros RPAR .)
    PUTS            reduce using rule 78 (callFuncion -> VARIABLE LPAR parametros RPAR .)
    FOR             reduce using rule 78 (callFuncion -> VARIABLE LPAR parametros RPAR .)
    WHILE           reduce using rule 78 (callFuncion -> VARIABLE LPAR parametros RPAR .)
    TRUE            reduce using rule 78 (callFuncion -> VARIABLE LPAR parametros RPAR .)
    FALSE           reduce using rule 78 (callFuncion -> VARIABLE LPAR parametros RPAR .)
    NUMBER          reduce using rule 78 (callFuncion -> VARIABLE LPAR parametros RPAR .)
    STRING          reduce using rule 78 (callFuncion -> VARIABLE LPAR parametros RPAR .)
    FLOAT           reduce using rule 78 (callFuncion -> VARIABLE LPAR parametros RPAR .)
    LPAR            reduce using rule 78 (callFuncion -> VARIABLE LPAR parametros RPAR .)
    END             reduce using rule 78 (callFuncion -> VARIABLE LPAR parametros RPAR .)


state 134

    (85) addValueHash -> VARIABLE LCOR expression RCOR . ASIGN expression
    (86) modValueHash -> VARIABLE LCOR expression RCOR . ASIGN expression

    ASIGN           shift and go to state 156


state 135

    (87) deleteValueHash -> VARIABLE POINT DELETE LPAR . expression RPAR
    (41) expression -> . term
    (42) expression -> . boleano
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (79) boleano -> . TRUE
    (80) boleano -> . FALSE
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    NUMBER          shift and go to state 27
    STRING          shift and go to state 33
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 75
    LPAR            shift and go to state 25

    expression                     shift and go to state 157
    term                           shift and go to state 20
    boleano                        shift and go to state 21
    factor                         shift and go to state 29

state 136

    (97) insertArray -> VARIABLE POINT INSERT LPAR . argumentosA RPAR
    (96) argumentosA -> . NUMBER COMMA factor

    NUMBER          shift and go to state 159

    argumentosA                    shift and go to state 158

state 137

    (98) deleteArray -> VARIABLE POINT DELETE_AT LPAR . NUMBER RPAR

    NUMBER          shift and go to state 160


state 138

    (104) searchStack -> VARIABLE POINT SEARCH LPAR . factor RPAR
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    NUMBER          shift and go to state 27
    STRING          shift and go to state 33
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 75
    LPAR            shift and go to state 25

    factor                         shift and go to state 161

state 139

    (105) pushStack -> VARIABLE POINT PUSH LPAR . factor RPAR
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    NUMBER          shift and go to state 27
    STRING          shift and go to state 33
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 75
    LPAR            shift and go to state 25

    factor                         shift and go to state 162

state 140

    (75) funciones -> encabezado RETURN expression END .

    $end            reduce using rule 75 (funciones -> encabezado RETURN expression END .)


state 141

    (76) funciones -> encabezado cuerpo RETURN expression . END
    (49) expression -> expression . PLUS term
    (50) expression -> expression . MINUS term

    END             shift and go to state 163
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36


state 142

    (65) condicional -> IF comparacion D_POINT repCuerpo . END
    (66) condicional -> IF comparacion D_POINT repCuerpo . END cond_else

    END             shift and go to state 164


state 143

    (88) while -> WHILE LPAR comparacion RPAR . repCuerpo END
    (89) while -> WHILE LPAR comparacion RPAR . repCuerpo END while
    (90) repCuerpo -> . cuerpo
    (91) repCuerpo -> . cuerpo repCuerpo
    (18) cuerpo -> . asignacion
    (19) cuerpo -> . expression
    (20) cuerpo -> . comparacion
    (21) cuerpo -> . condicional
    (22) cuerpo -> . impresion
    (23) cuerpo -> . for
    (24) cuerpo -> . while
    (25) cuerpo -> . input
    (26) cuerpo -> . callFuncion
    (27) cuerpo -> . addValueHash
    (28) cuerpo -> . modValueHash
    (29) cuerpo -> . deleteValueHash
    (30) cuerpo -> . insertArray
    (31) cuerpo -> . deleteArray
    (32) cuerpo -> . pushStack
    (33) cuerpo -> . searchStack
    (34) asignacion -> . VARIABLE ASIGN expression
    (35) asignacion -> . VARIABLE ASIGN comparacion
    (36) asignacion -> . VARIABLE ASIGN callFuncion
    (37) asignacion -> . VARIABLE ASIGN diccionario
    (38) asignacion -> . VARIABLE ASIGN getValueHash
    (39) asignacion -> . VARIABLE ASIGN array
    (40) asignacion -> . VARIABLE ASIGN stack
    (41) expression -> . term
    (42) expression -> . boleano
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (54) comparacion -> . expression comparador expression
    (55) comparacion -> . expression comparador expression AND comparacion
    (56) comparacion -> . expression comparador expression OR comparacion
    (57) comparacion -> . expression AND expression
    (58) comparacion -> . expression OR expression
    (65) condicional -> . IF comparacion D_POINT repCuerpo END
    (66) condicional -> . IF comparacion D_POINT repCuerpo END cond_else
    (68) impresion -> . PUTS factor
    (99) for -> . FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END
    (100) for -> . FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for
    (88) while -> . WHILE LPAR comparacion RPAR repCuerpo END
    (89) while -> . WHILE LPAR comparacion RPAR repCuerpo END while
    (69) input -> . VARIABLE ASIGN GETS
    (77) callFuncion -> . VARIABLE LPAR RPAR
    (78) callFuncion -> . VARIABLE LPAR parametros RPAR
    (85) addValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (86) modValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (87) deleteValueHash -> . VARIABLE POINT DELETE LPAR expression RPAR
    (97) insertArray -> . VARIABLE POINT INSERT LPAR argumentosA RPAR
    (98) deleteArray -> . VARIABLE POINT DELETE_AT LPAR NUMBER RPAR
    (105) pushStack -> . VARIABLE POINT PUSH LPAR factor RPAR
    (104) searchStack -> . VARIABLE POINT SEARCH LPAR factor RPAR
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (79) boleano -> . TRUE
    (80) boleano -> . FALSE
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    VARIABLE        shift and go to state 72
    IF              shift and go to state 23
    PUTS            shift and go to state 28
    FOR             shift and go to state 26
    WHILE           shift and go to state 24
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    NUMBER          shift and go to state 27
    STRING          shift and go to state 33
    FLOAT           shift and go to state 34
    LPAR            shift and go to state 25

    comparacion                    shift and go to state 58
    repCuerpo                      shift and go to state 165
    while                          shift and go to state 62
    cuerpo                         shift and go to state 113
    asignacion                     shift and go to state 57
    expression                     shift and go to state 55
    condicional                    shift and go to state 59
    impresion                      shift and go to state 60
    for                            shift and go to state 61
    input                          shift and go to state 63
    callFuncion                    shift and go to state 64
    addValueHash                   shift and go to state 65
    modValueHash                   shift and go to state 66
    deleteValueHash                shift and go to state 67
    insertArray                    shift and go to state 68
    deleteArray                    shift and go to state 69
    pushStack                      shift and go to state 70
    searchStack                    shift and go to state 71
    term                           shift and go to state 20
    boleano                        shift and go to state 21
    factor                         shift and go to state 29

state 144

    (99) for -> FOR VARIABLE IN NUMBER . POINT POINT NUMBER DO repCuerpo END
    (100) for -> FOR VARIABLE IN NUMBER . POINT POINT NUMBER DO repCuerpo END for

    POINT           shift and go to state 166


state 145

    (72) encabezado -> DEF VARIABLE LPAR RPAR .

    RETURN          reduce using rule 72 (encabezado -> DEF VARIABLE LPAR RPAR .)
    VARIABLE        reduce using rule 72 (encabezado -> DEF VARIABLE LPAR RPAR .)
    IF              reduce using rule 72 (encabezado -> DEF VARIABLE LPAR RPAR .)
    PUTS            reduce using rule 72 (encabezado -> DEF VARIABLE LPAR RPAR .)
    FOR             reduce using rule 72 (encabezado -> DEF VARIABLE LPAR RPAR .)
    WHILE           reduce using rule 72 (encabezado -> DEF VARIABLE LPAR RPAR .)
    TRUE            reduce using rule 72 (encabezado -> DEF VARIABLE LPAR RPAR .)
    FALSE           reduce using rule 72 (encabezado -> DEF VARIABLE LPAR RPAR .)
    NUMBER          reduce using rule 72 (encabezado -> DEF VARIABLE LPAR RPAR .)
    STRING          reduce using rule 72 (encabezado -> DEF VARIABLE LPAR RPAR .)
    FLOAT           reduce using rule 72 (encabezado -> DEF VARIABLE LPAR RPAR .)
    LPAR            reduce using rule 72 (encabezado -> DEF VARIABLE LPAR RPAR .)


state 146

    (73) encabezado -> DEF VARIABLE LPAR parametros . RPAR

    RPAR            shift and go to state 167


state 147

    (55) comparacion -> expression comparador expression AND comparacion .

    $end            reduce using rule 55 (comparacion -> expression comparador expression AND comparacion .)
    RETURN          reduce using rule 55 (comparacion -> expression comparador expression AND comparacion .)
    VARIABLE        reduce using rule 55 (comparacion -> expression comparador expression AND comparacion .)
    IF              reduce using rule 55 (comparacion -> expression comparador expression AND comparacion .)
    PUTS            reduce using rule 55 (comparacion -> expression comparador expression AND comparacion .)
    FOR             reduce using rule 55 (comparacion -> expression comparador expression AND comparacion .)
    WHILE           reduce using rule 55 (comparacion -> expression comparador expression AND comparacion .)
    TRUE            reduce using rule 55 (comparacion -> expression comparador expression AND comparacion .)
    FALSE           reduce using rule 55 (comparacion -> expression comparador expression AND comparacion .)
    NUMBER          reduce using rule 55 (comparacion -> expression comparador expression AND comparacion .)
    STRING          reduce using rule 55 (comparacion -> expression comparador expression AND comparacion .)
    FLOAT           reduce using rule 55 (comparacion -> expression comparador expression AND comparacion .)
    LPAR            reduce using rule 55 (comparacion -> expression comparador expression AND comparacion .)
    END             reduce using rule 55 (comparacion -> expression comparador expression AND comparacion .)
    D_POINT         reduce using rule 55 (comparacion -> expression comparador expression AND comparacion .)
    RPAR            reduce using rule 55 (comparacion -> expression comparador expression AND comparacion .)


state 148

    (56) comparacion -> expression comparador expression OR comparacion .

    $end            reduce using rule 56 (comparacion -> expression comparador expression OR comparacion .)
    RETURN          reduce using rule 56 (comparacion -> expression comparador expression OR comparacion .)
    VARIABLE        reduce using rule 56 (comparacion -> expression comparador expression OR comparacion .)
    IF              reduce using rule 56 (comparacion -> expression comparador expression OR comparacion .)
    PUTS            reduce using rule 56 (comparacion -> expression comparador expression OR comparacion .)
    FOR             reduce using rule 56 (comparacion -> expression comparador expression OR comparacion .)
    WHILE           reduce using rule 56 (comparacion -> expression comparador expression OR comparacion .)
    TRUE            reduce using rule 56 (comparacion -> expression comparador expression OR comparacion .)
    FALSE           reduce using rule 56 (comparacion -> expression comparador expression OR comparacion .)
    NUMBER          reduce using rule 56 (comparacion -> expression comparador expression OR comparacion .)
    STRING          reduce using rule 56 (comparacion -> expression comparador expression OR comparacion .)
    FLOAT           reduce using rule 56 (comparacion -> expression comparador expression OR comparacion .)
    LPAR            reduce using rule 56 (comparacion -> expression comparador expression OR comparacion .)
    END             reduce using rule 56 (comparacion -> expression comparador expression OR comparacion .)
    D_POINT         reduce using rule 56 (comparacion -> expression comparador expression OR comparacion .)
    RPAR            reduce using rule 56 (comparacion -> expression comparador expression OR comparacion .)


state 149

    (84) getValueHash -> VARIABLE LCOR expression . RCOR
    (49) expression -> expression . PLUS term
    (50) expression -> expression . MINUS term

    RCOR            shift and go to state 168
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36


state 150

    (81) diccionario -> LKEY cuerpoHash RKEY .

    $end            reduce using rule 81 (diccionario -> LKEY cuerpoHash RKEY .)
    RETURN          reduce using rule 81 (diccionario -> LKEY cuerpoHash RKEY .)
    VARIABLE        reduce using rule 81 (diccionario -> LKEY cuerpoHash RKEY .)
    IF              reduce using rule 81 (diccionario -> LKEY cuerpoHash RKEY .)
    PUTS            reduce using rule 81 (diccionario -> LKEY cuerpoHash RKEY .)
    FOR             reduce using rule 81 (diccionario -> LKEY cuerpoHash RKEY .)
    WHILE           reduce using rule 81 (diccionario -> LKEY cuerpoHash RKEY .)
    TRUE            reduce using rule 81 (diccionario -> LKEY cuerpoHash RKEY .)
    FALSE           reduce using rule 81 (diccionario -> LKEY cuerpoHash RKEY .)
    NUMBER          reduce using rule 81 (diccionario -> LKEY cuerpoHash RKEY .)
    STRING          reduce using rule 81 (diccionario -> LKEY cuerpoHash RKEY .)
    FLOAT           reduce using rule 81 (diccionario -> LKEY cuerpoHash RKEY .)
    LPAR            reduce using rule 81 (diccionario -> LKEY cuerpoHash RKEY .)
    END             reduce using rule 81 (diccionario -> LKEY cuerpoHash RKEY .)


state 151

    (82) cuerpoHash -> expression ASIGN . GREATER expression
    (83) cuerpoHash -> expression ASIGN . GREATER expression COMMA cuerpoHash

    GREATER         shift and go to state 169


state 152

    (94) array -> LCOR parametrosA RCOR .
    (102) stack -> LCOR parametrosA RCOR .

  ! reduce/reduce conflict for $end resolved using rule 94 (array -> LCOR parametrosA RCOR .)
  ! reduce/reduce conflict for RETURN resolved using rule 94 (array -> LCOR parametrosA RCOR .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 94 (array -> LCOR parametrosA RCOR .)
  ! reduce/reduce conflict for IF resolved using rule 94 (array -> LCOR parametrosA RCOR .)
  ! reduce/reduce conflict for PUTS resolved using rule 94 (array -> LCOR parametrosA RCOR .)
  ! reduce/reduce conflict for FOR resolved using rule 94 (array -> LCOR parametrosA RCOR .)
  ! reduce/reduce conflict for WHILE resolved using rule 94 (array -> LCOR parametrosA RCOR .)
  ! reduce/reduce conflict for TRUE resolved using rule 94 (array -> LCOR parametrosA RCOR .)
  ! reduce/reduce conflict for FALSE resolved using rule 94 (array -> LCOR parametrosA RCOR .)
  ! reduce/reduce conflict for NUMBER resolved using rule 94 (array -> LCOR parametrosA RCOR .)
  ! reduce/reduce conflict for STRING resolved using rule 94 (array -> LCOR parametrosA RCOR .)
  ! reduce/reduce conflict for FLOAT resolved using rule 94 (array -> LCOR parametrosA RCOR .)
  ! reduce/reduce conflict for LPAR resolved using rule 94 (array -> LCOR parametrosA RCOR .)
  ! reduce/reduce conflict for END resolved using rule 94 (array -> LCOR parametrosA RCOR .)
    $end            reduce using rule 94 (array -> LCOR parametrosA RCOR .)
    RETURN          reduce using rule 94 (array -> LCOR parametrosA RCOR .)
    VARIABLE        reduce using rule 94 (array -> LCOR parametrosA RCOR .)
    IF              reduce using rule 94 (array -> LCOR parametrosA RCOR .)
    PUTS            reduce using rule 94 (array -> LCOR parametrosA RCOR .)
    FOR             reduce using rule 94 (array -> LCOR parametrosA RCOR .)
    WHILE           reduce using rule 94 (array -> LCOR parametrosA RCOR .)
    TRUE            reduce using rule 94 (array -> LCOR parametrosA RCOR .)
    FALSE           reduce using rule 94 (array -> LCOR parametrosA RCOR .)
    NUMBER          reduce using rule 94 (array -> LCOR parametrosA RCOR .)
    STRING          reduce using rule 94 (array -> LCOR parametrosA RCOR .)
    FLOAT           reduce using rule 94 (array -> LCOR parametrosA RCOR .)
    LPAR            reduce using rule 94 (array -> LCOR parametrosA RCOR .)
    END             reduce using rule 94 (array -> LCOR parametrosA RCOR .)

  ! $end            [ reduce using rule 102 (stack -> LCOR parametrosA RCOR .) ]
  ! RETURN          [ reduce using rule 102 (stack -> LCOR parametrosA RCOR .) ]
  ! VARIABLE        [ reduce using rule 102 (stack -> LCOR parametrosA RCOR .) ]
  ! IF              [ reduce using rule 102 (stack -> LCOR parametrosA RCOR .) ]
  ! PUTS            [ reduce using rule 102 (stack -> LCOR parametrosA RCOR .) ]
  ! FOR             [ reduce using rule 102 (stack -> LCOR parametrosA RCOR .) ]
  ! WHILE           [ reduce using rule 102 (stack -> LCOR parametrosA RCOR .) ]
  ! TRUE            [ reduce using rule 102 (stack -> LCOR parametrosA RCOR .) ]
  ! FALSE           [ reduce using rule 102 (stack -> LCOR parametrosA RCOR .) ]
  ! NUMBER          [ reduce using rule 102 (stack -> LCOR parametrosA RCOR .) ]
  ! STRING          [ reduce using rule 102 (stack -> LCOR parametrosA RCOR .) ]
  ! FLOAT           [ reduce using rule 102 (stack -> LCOR parametrosA RCOR .) ]
  ! LPAR            [ reduce using rule 102 (stack -> LCOR parametrosA RCOR .) ]
  ! END             [ reduce using rule 102 (stack -> LCOR parametrosA RCOR .) ]


state 153

    (103) stack -> LCOR vacio RCOR .

    $end            reduce using rule 103 (stack -> LCOR vacio RCOR .)
    RETURN          reduce using rule 103 (stack -> LCOR vacio RCOR .)
    VARIABLE        reduce using rule 103 (stack -> LCOR vacio RCOR .)
    IF              reduce using rule 103 (stack -> LCOR vacio RCOR .)
    PUTS            reduce using rule 103 (stack -> LCOR vacio RCOR .)
    FOR             reduce using rule 103 (stack -> LCOR vacio RCOR .)
    WHILE           reduce using rule 103 (stack -> LCOR vacio RCOR .)
    TRUE            reduce using rule 103 (stack -> LCOR vacio RCOR .)
    FALSE           reduce using rule 103 (stack -> LCOR vacio RCOR .)
    NUMBER          reduce using rule 103 (stack -> LCOR vacio RCOR .)
    STRING          reduce using rule 103 (stack -> LCOR vacio RCOR .)
    FLOAT           reduce using rule 103 (stack -> LCOR vacio RCOR .)
    LPAR            reduce using rule 103 (stack -> LCOR vacio RCOR .)
    END             reduce using rule 103 (stack -> LCOR vacio RCOR .)


state 154

    (93) parametrosA -> factor COMMA . parametrosA
    (92) parametrosA -> . factor
    (93) parametrosA -> . factor COMMA parametrosA
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    NUMBER          shift and go to state 27
    STRING          shift and go to state 33
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 75
    LPAR            shift and go to state 25

    factor                         shift and go to state 130
    parametrosA                    shift and go to state 170

state 155

    (71) parametros -> VARIABLE COMMA parametros .

    RPAR            reduce using rule 71 (parametros -> VARIABLE COMMA parametros .)


state 156

    (85) addValueHash -> VARIABLE LCOR expression RCOR ASIGN . expression
    (86) modValueHash -> VARIABLE LCOR expression RCOR ASIGN . expression
    (41) expression -> . term
    (42) expression -> . boleano
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (79) boleano -> . TRUE
    (80) boleano -> . FALSE
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    NUMBER          shift and go to state 27
    STRING          shift and go to state 33
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 75
    LPAR            shift and go to state 25

    expression                     shift and go to state 171
    term                           shift and go to state 20
    boleano                        shift and go to state 21
    factor                         shift and go to state 29

state 157

    (87) deleteValueHash -> VARIABLE POINT DELETE LPAR expression . RPAR
    (49) expression -> expression . PLUS term
    (50) expression -> expression . MINUS term

    RPAR            shift and go to state 172
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36


state 158

    (97) insertArray -> VARIABLE POINT INSERT LPAR argumentosA . RPAR

    RPAR            shift and go to state 173


state 159

    (96) argumentosA -> NUMBER . COMMA factor

    COMMA           shift and go to state 174


state 160

    (98) deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER . RPAR

    RPAR            shift and go to state 175


state 161

    (104) searchStack -> VARIABLE POINT SEARCH LPAR factor . RPAR

    RPAR            shift and go to state 176


state 162

    (105) pushStack -> VARIABLE POINT PUSH LPAR factor . RPAR

    RPAR            shift and go to state 177


state 163

    (76) funciones -> encabezado cuerpo RETURN expression END .

    $end            reduce using rule 76 (funciones -> encabezado cuerpo RETURN expression END .)


state 164

    (65) condicional -> IF comparacion D_POINT repCuerpo END .
    (66) condicional -> IF comparacion D_POINT repCuerpo END . cond_else
    (67) cond_else -> . ELSE D_POINT repCuerpo END

    $end            reduce using rule 65 (condicional -> IF comparacion D_POINT repCuerpo END .)
    RETURN          reduce using rule 65 (condicional -> IF comparacion D_POINT repCuerpo END .)
    VARIABLE        reduce using rule 65 (condicional -> IF comparacion D_POINT repCuerpo END .)
    IF              reduce using rule 65 (condicional -> IF comparacion D_POINT repCuerpo END .)
    PUTS            reduce using rule 65 (condicional -> IF comparacion D_POINT repCuerpo END .)
    FOR             reduce using rule 65 (condicional -> IF comparacion D_POINT repCuerpo END .)
    WHILE           reduce using rule 65 (condicional -> IF comparacion D_POINT repCuerpo END .)
    TRUE            reduce using rule 65 (condicional -> IF comparacion D_POINT repCuerpo END .)
    FALSE           reduce using rule 65 (condicional -> IF comparacion D_POINT repCuerpo END .)
    NUMBER          reduce using rule 65 (condicional -> IF comparacion D_POINT repCuerpo END .)
    STRING          reduce using rule 65 (condicional -> IF comparacion D_POINT repCuerpo END .)
    FLOAT           reduce using rule 65 (condicional -> IF comparacion D_POINT repCuerpo END .)
    LPAR            reduce using rule 65 (condicional -> IF comparacion D_POINT repCuerpo END .)
    END             reduce using rule 65 (condicional -> IF comparacion D_POINT repCuerpo END .)
    ELSE            shift and go to state 179

    cond_else                      shift and go to state 178

state 165

    (88) while -> WHILE LPAR comparacion RPAR repCuerpo . END
    (89) while -> WHILE LPAR comparacion RPAR repCuerpo . END while

    END             shift and go to state 180


state 166

    (99) for -> FOR VARIABLE IN NUMBER POINT . POINT NUMBER DO repCuerpo END
    (100) for -> FOR VARIABLE IN NUMBER POINT . POINT NUMBER DO repCuerpo END for

    POINT           shift and go to state 181


state 167

    (73) encabezado -> DEF VARIABLE LPAR parametros RPAR .

    RETURN          reduce using rule 73 (encabezado -> DEF VARIABLE LPAR parametros RPAR .)
    VARIABLE        reduce using rule 73 (encabezado -> DEF VARIABLE LPAR parametros RPAR .)
    IF              reduce using rule 73 (encabezado -> DEF VARIABLE LPAR parametros RPAR .)
    PUTS            reduce using rule 73 (encabezado -> DEF VARIABLE LPAR parametros RPAR .)
    FOR             reduce using rule 73 (encabezado -> DEF VARIABLE LPAR parametros RPAR .)
    WHILE           reduce using rule 73 (encabezado -> DEF VARIABLE LPAR parametros RPAR .)
    TRUE            reduce using rule 73 (encabezado -> DEF VARIABLE LPAR parametros RPAR .)
    FALSE           reduce using rule 73 (encabezado -> DEF VARIABLE LPAR parametros RPAR .)
    NUMBER          reduce using rule 73 (encabezado -> DEF VARIABLE LPAR parametros RPAR .)
    STRING          reduce using rule 73 (encabezado -> DEF VARIABLE LPAR parametros RPAR .)
    FLOAT           reduce using rule 73 (encabezado -> DEF VARIABLE LPAR parametros RPAR .)
    LPAR            reduce using rule 73 (encabezado -> DEF VARIABLE LPAR parametros RPAR .)


state 168

    (84) getValueHash -> VARIABLE LCOR expression RCOR .

    $end            reduce using rule 84 (getValueHash -> VARIABLE LCOR expression RCOR .)
    RETURN          reduce using rule 84 (getValueHash -> VARIABLE LCOR expression RCOR .)
    VARIABLE        reduce using rule 84 (getValueHash -> VARIABLE LCOR expression RCOR .)
    IF              reduce using rule 84 (getValueHash -> VARIABLE LCOR expression RCOR .)
    PUTS            reduce using rule 84 (getValueHash -> VARIABLE LCOR expression RCOR .)
    FOR             reduce using rule 84 (getValueHash -> VARIABLE LCOR expression RCOR .)
    WHILE           reduce using rule 84 (getValueHash -> VARIABLE LCOR expression RCOR .)
    TRUE            reduce using rule 84 (getValueHash -> VARIABLE LCOR expression RCOR .)
    FALSE           reduce using rule 84 (getValueHash -> VARIABLE LCOR expression RCOR .)
    NUMBER          reduce using rule 84 (getValueHash -> VARIABLE LCOR expression RCOR .)
    STRING          reduce using rule 84 (getValueHash -> VARIABLE LCOR expression RCOR .)
    FLOAT           reduce using rule 84 (getValueHash -> VARIABLE LCOR expression RCOR .)
    LPAR            reduce using rule 84 (getValueHash -> VARIABLE LCOR expression RCOR .)
    END             reduce using rule 84 (getValueHash -> VARIABLE LCOR expression RCOR .)


state 169

    (82) cuerpoHash -> expression ASIGN GREATER . expression
    (83) cuerpoHash -> expression ASIGN GREATER . expression COMMA cuerpoHash
    (41) expression -> . term
    (42) expression -> . boleano
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (79) boleano -> . TRUE
    (80) boleano -> . FALSE
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    NUMBER          shift and go to state 27
    STRING          shift and go to state 33
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 75
    LPAR            shift and go to state 25

    expression                     shift and go to state 182
    term                           shift and go to state 20
    boleano                        shift and go to state 21
    factor                         shift and go to state 29

state 170

    (93) parametrosA -> factor COMMA parametrosA .

    RCOR            reduce using rule 93 (parametrosA -> factor COMMA parametrosA .)


state 171

    (85) addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .
    (86) modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .
    (49) expression -> expression . PLUS term
    (50) expression -> expression . MINUS term

  ! reduce/reduce conflict for $end resolved using rule 85 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
  ! reduce/reduce conflict for RETURN resolved using rule 85 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
  ! reduce/reduce conflict for VARIABLE resolved using rule 85 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
  ! reduce/reduce conflict for IF resolved using rule 85 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
  ! reduce/reduce conflict for PUTS resolved using rule 85 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
  ! reduce/reduce conflict for FOR resolved using rule 85 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
  ! reduce/reduce conflict for WHILE resolved using rule 85 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
  ! reduce/reduce conflict for TRUE resolved using rule 85 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
  ! reduce/reduce conflict for FALSE resolved using rule 85 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
  ! reduce/reduce conflict for NUMBER resolved using rule 85 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
  ! reduce/reduce conflict for STRING resolved using rule 85 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
  ! reduce/reduce conflict for FLOAT resolved using rule 85 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
  ! reduce/reduce conflict for LPAR resolved using rule 85 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
  ! reduce/reduce conflict for END resolved using rule 85 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
    $end            reduce using rule 85 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
    RETURN          reduce using rule 85 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
    VARIABLE        reduce using rule 85 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
    IF              reduce using rule 85 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
    PUTS            reduce using rule 85 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
    FOR             reduce using rule 85 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
    WHILE           reduce using rule 85 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
    TRUE            reduce using rule 85 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
    FALSE           reduce using rule 85 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
    NUMBER          reduce using rule 85 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
    STRING          reduce using rule 85 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
    FLOAT           reduce using rule 85 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
    LPAR            reduce using rule 85 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
    END             reduce using rule 85 (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .)
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36

  ! $end            [ reduce using rule 86 (modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .) ]
  ! RETURN          [ reduce using rule 86 (modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .) ]
  ! VARIABLE        [ reduce using rule 86 (modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .) ]
  ! IF              [ reduce using rule 86 (modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .) ]
  ! PUTS            [ reduce using rule 86 (modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .) ]
  ! FOR             [ reduce using rule 86 (modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .) ]
  ! WHILE           [ reduce using rule 86 (modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .) ]
  ! TRUE            [ reduce using rule 86 (modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .) ]
  ! FALSE           [ reduce using rule 86 (modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .) ]
  ! NUMBER          [ reduce using rule 86 (modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .) ]
  ! STRING          [ reduce using rule 86 (modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .) ]
  ! FLOAT           [ reduce using rule 86 (modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .) ]
  ! LPAR            [ reduce using rule 86 (modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .) ]
  ! END             [ reduce using rule 86 (modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression .) ]


state 172

    (87) deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR .

    $end            reduce using rule 87 (deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR .)
    RETURN          reduce using rule 87 (deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR .)
    VARIABLE        reduce using rule 87 (deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR .)
    IF              reduce using rule 87 (deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR .)
    PUTS            reduce using rule 87 (deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR .)
    FOR             reduce using rule 87 (deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR .)
    WHILE           reduce using rule 87 (deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR .)
    TRUE            reduce using rule 87 (deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR .)
    FALSE           reduce using rule 87 (deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR .)
    NUMBER          reduce using rule 87 (deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR .)
    STRING          reduce using rule 87 (deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR .)
    FLOAT           reduce using rule 87 (deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR .)
    LPAR            reduce using rule 87 (deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR .)
    END             reduce using rule 87 (deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR .)


state 173

    (97) insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR .

    $end            reduce using rule 97 (insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR .)
    RETURN          reduce using rule 97 (insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR .)
    VARIABLE        reduce using rule 97 (insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR .)
    IF              reduce using rule 97 (insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR .)
    PUTS            reduce using rule 97 (insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR .)
    FOR             reduce using rule 97 (insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR .)
    WHILE           reduce using rule 97 (insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR .)
    TRUE            reduce using rule 97 (insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR .)
    FALSE           reduce using rule 97 (insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR .)
    NUMBER          reduce using rule 97 (insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR .)
    STRING          reduce using rule 97 (insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR .)
    FLOAT           reduce using rule 97 (insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR .)
    LPAR            reduce using rule 97 (insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR .)
    END             reduce using rule 97 (insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR .)


state 174

    (96) argumentosA -> NUMBER COMMA . factor
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    NUMBER          shift and go to state 27
    STRING          shift and go to state 33
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 75
    LPAR            shift and go to state 25

    factor                         shift and go to state 183

state 175

    (98) deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR .

    $end            reduce using rule 98 (deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR .)
    RETURN          reduce using rule 98 (deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR .)
    VARIABLE        reduce using rule 98 (deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR .)
    IF              reduce using rule 98 (deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR .)
    PUTS            reduce using rule 98 (deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR .)
    FOR             reduce using rule 98 (deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR .)
    WHILE           reduce using rule 98 (deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR .)
    TRUE            reduce using rule 98 (deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR .)
    FALSE           reduce using rule 98 (deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR .)
    NUMBER          reduce using rule 98 (deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR .)
    STRING          reduce using rule 98 (deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR .)
    FLOAT           reduce using rule 98 (deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR .)
    LPAR            reduce using rule 98 (deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR .)
    END             reduce using rule 98 (deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR .)


state 176

    (104) searchStack -> VARIABLE POINT SEARCH LPAR factor RPAR .

    $end            reduce using rule 104 (searchStack -> VARIABLE POINT SEARCH LPAR factor RPAR .)
    RETURN          reduce using rule 104 (searchStack -> VARIABLE POINT SEARCH LPAR factor RPAR .)
    VARIABLE        reduce using rule 104 (searchStack -> VARIABLE POINT SEARCH LPAR factor RPAR .)
    IF              reduce using rule 104 (searchStack -> VARIABLE POINT SEARCH LPAR factor RPAR .)
    PUTS            reduce using rule 104 (searchStack -> VARIABLE POINT SEARCH LPAR factor RPAR .)
    FOR             reduce using rule 104 (searchStack -> VARIABLE POINT SEARCH LPAR factor RPAR .)
    WHILE           reduce using rule 104 (searchStack -> VARIABLE POINT SEARCH LPAR factor RPAR .)
    TRUE            reduce using rule 104 (searchStack -> VARIABLE POINT SEARCH LPAR factor RPAR .)
    FALSE           reduce using rule 104 (searchStack -> VARIABLE POINT SEARCH LPAR factor RPAR .)
    NUMBER          reduce using rule 104 (searchStack -> VARIABLE POINT SEARCH LPAR factor RPAR .)
    STRING          reduce using rule 104 (searchStack -> VARIABLE POINT SEARCH LPAR factor RPAR .)
    FLOAT           reduce using rule 104 (searchStack -> VARIABLE POINT SEARCH LPAR factor RPAR .)
    LPAR            reduce using rule 104 (searchStack -> VARIABLE POINT SEARCH LPAR factor RPAR .)
    END             reduce using rule 104 (searchStack -> VARIABLE POINT SEARCH LPAR factor RPAR .)


state 177

    (105) pushStack -> VARIABLE POINT PUSH LPAR factor RPAR .

    $end            reduce using rule 105 (pushStack -> VARIABLE POINT PUSH LPAR factor RPAR .)
    RETURN          reduce using rule 105 (pushStack -> VARIABLE POINT PUSH LPAR factor RPAR .)
    VARIABLE        reduce using rule 105 (pushStack -> VARIABLE POINT PUSH LPAR factor RPAR .)
    IF              reduce using rule 105 (pushStack -> VARIABLE POINT PUSH LPAR factor RPAR .)
    PUTS            reduce using rule 105 (pushStack -> VARIABLE POINT PUSH LPAR factor RPAR .)
    FOR             reduce using rule 105 (pushStack -> VARIABLE POINT PUSH LPAR factor RPAR .)
    WHILE           reduce using rule 105 (pushStack -> VARIABLE POINT PUSH LPAR factor RPAR .)
    TRUE            reduce using rule 105 (pushStack -> VARIABLE POINT PUSH LPAR factor RPAR .)
    FALSE           reduce using rule 105 (pushStack -> VARIABLE POINT PUSH LPAR factor RPAR .)
    NUMBER          reduce using rule 105 (pushStack -> VARIABLE POINT PUSH LPAR factor RPAR .)
    STRING          reduce using rule 105 (pushStack -> VARIABLE POINT PUSH LPAR factor RPAR .)
    FLOAT           reduce using rule 105 (pushStack -> VARIABLE POINT PUSH LPAR factor RPAR .)
    LPAR            reduce using rule 105 (pushStack -> VARIABLE POINT PUSH LPAR factor RPAR .)
    END             reduce using rule 105 (pushStack -> VARIABLE POINT PUSH LPAR factor RPAR .)


state 178

    (66) condicional -> IF comparacion D_POINT repCuerpo END cond_else .

    $end            reduce using rule 66 (condicional -> IF comparacion D_POINT repCuerpo END cond_else .)
    RETURN          reduce using rule 66 (condicional -> IF comparacion D_POINT repCuerpo END cond_else .)
    VARIABLE        reduce using rule 66 (condicional -> IF comparacion D_POINT repCuerpo END cond_else .)
    IF              reduce using rule 66 (condicional -> IF comparacion D_POINT repCuerpo END cond_else .)
    PUTS            reduce using rule 66 (condicional -> IF comparacion D_POINT repCuerpo END cond_else .)
    FOR             reduce using rule 66 (condicional -> IF comparacion D_POINT repCuerpo END cond_else .)
    WHILE           reduce using rule 66 (condicional -> IF comparacion D_POINT repCuerpo END cond_else .)
    TRUE            reduce using rule 66 (condicional -> IF comparacion D_POINT repCuerpo END cond_else .)
    FALSE           reduce using rule 66 (condicional -> IF comparacion D_POINT repCuerpo END cond_else .)
    NUMBER          reduce using rule 66 (condicional -> IF comparacion D_POINT repCuerpo END cond_else .)
    STRING          reduce using rule 66 (condicional -> IF comparacion D_POINT repCuerpo END cond_else .)
    FLOAT           reduce using rule 66 (condicional -> IF comparacion D_POINT repCuerpo END cond_else .)
    LPAR            reduce using rule 66 (condicional -> IF comparacion D_POINT repCuerpo END cond_else .)
    END             reduce using rule 66 (condicional -> IF comparacion D_POINT repCuerpo END cond_else .)


state 179

    (67) cond_else -> ELSE . D_POINT repCuerpo END

    D_POINT         shift and go to state 184


state 180

    (88) while -> WHILE LPAR comparacion RPAR repCuerpo END .
    (89) while -> WHILE LPAR comparacion RPAR repCuerpo END . while
    (88) while -> . WHILE LPAR comparacion RPAR repCuerpo END
    (89) while -> . WHILE LPAR comparacion RPAR repCuerpo END while

  ! shift/reduce conflict for WHILE resolved as shift
    $end            reduce using rule 88 (while -> WHILE LPAR comparacion RPAR repCuerpo END .)
    RETURN          reduce using rule 88 (while -> WHILE LPAR comparacion RPAR repCuerpo END .)
    VARIABLE        reduce using rule 88 (while -> WHILE LPAR comparacion RPAR repCuerpo END .)
    IF              reduce using rule 88 (while -> WHILE LPAR comparacion RPAR repCuerpo END .)
    PUTS            reduce using rule 88 (while -> WHILE LPAR comparacion RPAR repCuerpo END .)
    FOR             reduce using rule 88 (while -> WHILE LPAR comparacion RPAR repCuerpo END .)
    TRUE            reduce using rule 88 (while -> WHILE LPAR comparacion RPAR repCuerpo END .)
    FALSE           reduce using rule 88 (while -> WHILE LPAR comparacion RPAR repCuerpo END .)
    NUMBER          reduce using rule 88 (while -> WHILE LPAR comparacion RPAR repCuerpo END .)
    STRING          reduce using rule 88 (while -> WHILE LPAR comparacion RPAR repCuerpo END .)
    FLOAT           reduce using rule 88 (while -> WHILE LPAR comparacion RPAR repCuerpo END .)
    LPAR            reduce using rule 88 (while -> WHILE LPAR comparacion RPAR repCuerpo END .)
    END             reduce using rule 88 (while -> WHILE LPAR comparacion RPAR repCuerpo END .)
    WHILE           shift and go to state 24

  ! WHILE           [ reduce using rule 88 (while -> WHILE LPAR comparacion RPAR repCuerpo END .) ]

    while                          shift and go to state 185

state 181

    (99) for -> FOR VARIABLE IN NUMBER POINT POINT . NUMBER DO repCuerpo END
    (100) for -> FOR VARIABLE IN NUMBER POINT POINT . NUMBER DO repCuerpo END for

    NUMBER          shift and go to state 186


state 182

    (82) cuerpoHash -> expression ASIGN GREATER expression .
    (83) cuerpoHash -> expression ASIGN GREATER expression . COMMA cuerpoHash
    (49) expression -> expression . PLUS term
    (50) expression -> expression . MINUS term

    RKEY            reduce using rule 82 (cuerpoHash -> expression ASIGN GREATER expression .)
    COMMA           shift and go to state 187
    PLUS            shift and go to state 35
    MINUS           shift and go to state 36


state 183

    (96) argumentosA -> NUMBER COMMA factor .

    RPAR            reduce using rule 96 (argumentosA -> NUMBER COMMA factor .)


state 184

    (67) cond_else -> ELSE D_POINT . repCuerpo END
    (90) repCuerpo -> . cuerpo
    (91) repCuerpo -> . cuerpo repCuerpo
    (18) cuerpo -> . asignacion
    (19) cuerpo -> . expression
    (20) cuerpo -> . comparacion
    (21) cuerpo -> . condicional
    (22) cuerpo -> . impresion
    (23) cuerpo -> . for
    (24) cuerpo -> . while
    (25) cuerpo -> . input
    (26) cuerpo -> . callFuncion
    (27) cuerpo -> . addValueHash
    (28) cuerpo -> . modValueHash
    (29) cuerpo -> . deleteValueHash
    (30) cuerpo -> . insertArray
    (31) cuerpo -> . deleteArray
    (32) cuerpo -> . pushStack
    (33) cuerpo -> . searchStack
    (34) asignacion -> . VARIABLE ASIGN expression
    (35) asignacion -> . VARIABLE ASIGN comparacion
    (36) asignacion -> . VARIABLE ASIGN callFuncion
    (37) asignacion -> . VARIABLE ASIGN diccionario
    (38) asignacion -> . VARIABLE ASIGN getValueHash
    (39) asignacion -> . VARIABLE ASIGN array
    (40) asignacion -> . VARIABLE ASIGN stack
    (41) expression -> . term
    (42) expression -> . boleano
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (54) comparacion -> . expression comparador expression
    (55) comparacion -> . expression comparador expression AND comparacion
    (56) comparacion -> . expression comparador expression OR comparacion
    (57) comparacion -> . expression AND expression
    (58) comparacion -> . expression OR expression
    (65) condicional -> . IF comparacion D_POINT repCuerpo END
    (66) condicional -> . IF comparacion D_POINT repCuerpo END cond_else
    (68) impresion -> . PUTS factor
    (99) for -> . FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END
    (100) for -> . FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for
    (88) while -> . WHILE LPAR comparacion RPAR repCuerpo END
    (89) while -> . WHILE LPAR comparacion RPAR repCuerpo END while
    (69) input -> . VARIABLE ASIGN GETS
    (77) callFuncion -> . VARIABLE LPAR RPAR
    (78) callFuncion -> . VARIABLE LPAR parametros RPAR
    (85) addValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (86) modValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (87) deleteValueHash -> . VARIABLE POINT DELETE LPAR expression RPAR
    (97) insertArray -> . VARIABLE POINT INSERT LPAR argumentosA RPAR
    (98) deleteArray -> . VARIABLE POINT DELETE_AT LPAR NUMBER RPAR
    (105) pushStack -> . VARIABLE POINT PUSH LPAR factor RPAR
    (104) searchStack -> . VARIABLE POINT SEARCH LPAR factor RPAR
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (79) boleano -> . TRUE
    (80) boleano -> . FALSE
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    VARIABLE        shift and go to state 72
    IF              shift and go to state 23
    PUTS            shift and go to state 28
    FOR             shift and go to state 26
    WHILE           shift and go to state 24
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    NUMBER          shift and go to state 27
    STRING          shift and go to state 33
    FLOAT           shift and go to state 34
    LPAR            shift and go to state 25

    repCuerpo                      shift and go to state 188
    cuerpo                         shift and go to state 113
    asignacion                     shift and go to state 57
    expression                     shift and go to state 55
    comparacion                    shift and go to state 58
    condicional                    shift and go to state 59
    impresion                      shift and go to state 60
    for                            shift and go to state 61
    while                          shift and go to state 62
    input                          shift and go to state 63
    callFuncion                    shift and go to state 64
    addValueHash                   shift and go to state 65
    modValueHash                   shift and go to state 66
    deleteValueHash                shift and go to state 67
    insertArray                    shift and go to state 68
    deleteArray                    shift and go to state 69
    pushStack                      shift and go to state 70
    searchStack                    shift and go to state 71
    term                           shift and go to state 20
    boleano                        shift and go to state 21
    factor                         shift and go to state 29

state 185

    (89) while -> WHILE LPAR comparacion RPAR repCuerpo END while .

    $end            reduce using rule 89 (while -> WHILE LPAR comparacion RPAR repCuerpo END while .)
    RETURN          reduce using rule 89 (while -> WHILE LPAR comparacion RPAR repCuerpo END while .)
    VARIABLE        reduce using rule 89 (while -> WHILE LPAR comparacion RPAR repCuerpo END while .)
    IF              reduce using rule 89 (while -> WHILE LPAR comparacion RPAR repCuerpo END while .)
    PUTS            reduce using rule 89 (while -> WHILE LPAR comparacion RPAR repCuerpo END while .)
    FOR             reduce using rule 89 (while -> WHILE LPAR comparacion RPAR repCuerpo END while .)
    WHILE           reduce using rule 89 (while -> WHILE LPAR comparacion RPAR repCuerpo END while .)
    TRUE            reduce using rule 89 (while -> WHILE LPAR comparacion RPAR repCuerpo END while .)
    FALSE           reduce using rule 89 (while -> WHILE LPAR comparacion RPAR repCuerpo END while .)
    NUMBER          reduce using rule 89 (while -> WHILE LPAR comparacion RPAR repCuerpo END while .)
    STRING          reduce using rule 89 (while -> WHILE LPAR comparacion RPAR repCuerpo END while .)
    FLOAT           reduce using rule 89 (while -> WHILE LPAR comparacion RPAR repCuerpo END while .)
    LPAR            reduce using rule 89 (while -> WHILE LPAR comparacion RPAR repCuerpo END while .)
    END             reduce using rule 89 (while -> WHILE LPAR comparacion RPAR repCuerpo END while .)


state 186

    (99) for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER . DO repCuerpo END
    (100) for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER . DO repCuerpo END for

    DO              shift and go to state 189


state 187

    (83) cuerpoHash -> expression ASIGN GREATER expression COMMA . cuerpoHash
    (82) cuerpoHash -> . expression ASIGN GREATER expression
    (83) cuerpoHash -> . expression ASIGN GREATER expression COMMA cuerpoHash
    (41) expression -> . term
    (42) expression -> . boleano
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (79) boleano -> . TRUE
    (80) boleano -> . FALSE
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    NUMBER          shift and go to state 27
    STRING          shift and go to state 33
    FLOAT           shift and go to state 34
    VARIABLE        shift and go to state 75
    LPAR            shift and go to state 25

    expression                     shift and go to state 126
    cuerpoHash                     shift and go to state 190
    term                           shift and go to state 20
    boleano                        shift and go to state 21
    factor                         shift and go to state 29

state 188

    (67) cond_else -> ELSE D_POINT repCuerpo . END

    END             shift and go to state 191


state 189

    (99) for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO . repCuerpo END
    (100) for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO . repCuerpo END for
    (90) repCuerpo -> . cuerpo
    (91) repCuerpo -> . cuerpo repCuerpo
    (18) cuerpo -> . asignacion
    (19) cuerpo -> . expression
    (20) cuerpo -> . comparacion
    (21) cuerpo -> . condicional
    (22) cuerpo -> . impresion
    (23) cuerpo -> . for
    (24) cuerpo -> . while
    (25) cuerpo -> . input
    (26) cuerpo -> . callFuncion
    (27) cuerpo -> . addValueHash
    (28) cuerpo -> . modValueHash
    (29) cuerpo -> . deleteValueHash
    (30) cuerpo -> . insertArray
    (31) cuerpo -> . deleteArray
    (32) cuerpo -> . pushStack
    (33) cuerpo -> . searchStack
    (34) asignacion -> . VARIABLE ASIGN expression
    (35) asignacion -> . VARIABLE ASIGN comparacion
    (36) asignacion -> . VARIABLE ASIGN callFuncion
    (37) asignacion -> . VARIABLE ASIGN diccionario
    (38) asignacion -> . VARIABLE ASIGN getValueHash
    (39) asignacion -> . VARIABLE ASIGN array
    (40) asignacion -> . VARIABLE ASIGN stack
    (41) expression -> . term
    (42) expression -> . boleano
    (49) expression -> . expression PLUS term
    (50) expression -> . expression MINUS term
    (54) comparacion -> . expression comparador expression
    (55) comparacion -> . expression comparador expression AND comparacion
    (56) comparacion -> . expression comparador expression OR comparacion
    (57) comparacion -> . expression AND expression
    (58) comparacion -> . expression OR expression
    (65) condicional -> . IF comparacion D_POINT repCuerpo END
    (66) condicional -> . IF comparacion D_POINT repCuerpo END cond_else
    (68) impresion -> . PUTS factor
    (99) for -> . FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END
    (100) for -> . FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for
    (88) while -> . WHILE LPAR comparacion RPAR repCuerpo END
    (89) while -> . WHILE LPAR comparacion RPAR repCuerpo END while
    (69) input -> . VARIABLE ASIGN GETS
    (77) callFuncion -> . VARIABLE LPAR RPAR
    (78) callFuncion -> . VARIABLE LPAR parametros RPAR
    (85) addValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (86) modValueHash -> . VARIABLE LCOR expression RCOR ASIGN expression
    (87) deleteValueHash -> . VARIABLE POINT DELETE LPAR expression RPAR
    (97) insertArray -> . VARIABLE POINT INSERT LPAR argumentosA RPAR
    (98) deleteArray -> . VARIABLE POINT DELETE_AT LPAR NUMBER RPAR
    (105) pushStack -> . VARIABLE POINT PUSH LPAR factor RPAR
    (104) searchStack -> . VARIABLE POINT SEARCH LPAR factor RPAR
    (43) term -> . factor
    (51) term -> . term TIMES factor
    (52) term -> . term DIVIDE factor
    (53) term -> . term EXPONENTIATION factor
    (79) boleano -> . TRUE
    (80) boleano -> . FALSE
    (44) factor -> . NUMBER
    (45) factor -> . STRING
    (46) factor -> . FLOAT
    (47) factor -> . VARIABLE
    (48) factor -> . LPAR expression RPAR

    VARIABLE        shift and go to state 72
    IF              shift and go to state 23
    PUTS            shift and go to state 28
    FOR             shift and go to state 26
    WHILE           shift and go to state 24
    TRUE            shift and go to state 30
    FALSE           shift and go to state 31
    NUMBER          shift and go to state 27
    STRING          shift and go to state 33
    FLOAT           shift and go to state 34
    LPAR            shift and go to state 25

    repCuerpo                      shift and go to state 192
    for                            shift and go to state 61
    cuerpo                         shift and go to state 113
    asignacion                     shift and go to state 57
    expression                     shift and go to state 55
    comparacion                    shift and go to state 58
    condicional                    shift and go to state 59
    impresion                      shift and go to state 60
    while                          shift and go to state 62
    input                          shift and go to state 63
    callFuncion                    shift and go to state 64
    addValueHash                   shift and go to state 65
    modValueHash                   shift and go to state 66
    deleteValueHash                shift and go to state 67
    insertArray                    shift and go to state 68
    deleteArray                    shift and go to state 69
    pushStack                      shift and go to state 70
    searchStack                    shift and go to state 71
    term                           shift and go to state 20
    boleano                        shift and go to state 21
    factor                         shift and go to state 29

state 190

    (83) cuerpoHash -> expression ASIGN GREATER expression COMMA cuerpoHash .

    RKEY            reduce using rule 83 (cuerpoHash -> expression ASIGN GREATER expression COMMA cuerpoHash .)


state 191

    (67) cond_else -> ELSE D_POINT repCuerpo END .

    $end            reduce using rule 67 (cond_else -> ELSE D_POINT repCuerpo END .)
    RETURN          reduce using rule 67 (cond_else -> ELSE D_POINT repCuerpo END .)
    VARIABLE        reduce using rule 67 (cond_else -> ELSE D_POINT repCuerpo END .)
    IF              reduce using rule 67 (cond_else -> ELSE D_POINT repCuerpo END .)
    PUTS            reduce using rule 67 (cond_else -> ELSE D_POINT repCuerpo END .)
    FOR             reduce using rule 67 (cond_else -> ELSE D_POINT repCuerpo END .)
    WHILE           reduce using rule 67 (cond_else -> ELSE D_POINT repCuerpo END .)
    TRUE            reduce using rule 67 (cond_else -> ELSE D_POINT repCuerpo END .)
    FALSE           reduce using rule 67 (cond_else -> ELSE D_POINT repCuerpo END .)
    NUMBER          reduce using rule 67 (cond_else -> ELSE D_POINT repCuerpo END .)
    STRING          reduce using rule 67 (cond_else -> ELSE D_POINT repCuerpo END .)
    FLOAT           reduce using rule 67 (cond_else -> ELSE D_POINT repCuerpo END .)
    LPAR            reduce using rule 67 (cond_else -> ELSE D_POINT repCuerpo END .)
    END             reduce using rule 67 (cond_else -> ELSE D_POINT repCuerpo END .)


state 192

    (99) for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo . END
    (100) for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo . END for

    END             shift and go to state 193


state 193

    (99) for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END .
    (100) for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END . for
    (99) for -> . FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END
    (100) for -> . FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for

  ! shift/reduce conflict for FOR resolved as shift
    $end            reduce using rule 99 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END .)
    RETURN          reduce using rule 99 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END .)
    VARIABLE        reduce using rule 99 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END .)
    IF              reduce using rule 99 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END .)
    PUTS            reduce using rule 99 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END .)
    WHILE           reduce using rule 99 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END .)
    TRUE            reduce using rule 99 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END .)
    FALSE           reduce using rule 99 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END .)
    NUMBER          reduce using rule 99 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END .)
    STRING          reduce using rule 99 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END .)
    FLOAT           reduce using rule 99 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END .)
    LPAR            reduce using rule 99 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END .)
    END             reduce using rule 99 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END .)
    FOR             shift and go to state 26

  ! FOR             [ reduce using rule 99 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END .) ]

    for                            shift and go to state 194

state 194

    (100) for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for .

    $end            reduce using rule 100 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for .)
    RETURN          reduce using rule 100 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for .)
    VARIABLE        reduce using rule 100 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for .)
    IF              reduce using rule 100 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for .)
    PUTS            reduce using rule 100 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for .)
    FOR             reduce using rule 100 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for .)
    WHILE           reduce using rule 100 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for .)
    TRUE            reduce using rule 100 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for .)
    FALSE           reduce using rule 100 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for .)
    NUMBER          reduce using rule 100 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for .)
    STRING          reduce using rule 100 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for .)
    FLOAT           reduce using rule 100 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for .)
    LPAR            reduce using rule 100 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for .)
    END             reduce using rule 100 (for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ASIGN in state 19 resolved as shift
WARNING: shift/reduce conflict for ASIGN in state 72 resolved as shift
WARNING: shift/reduce conflict for LPAR in state 72 resolved as shift
WARNING: shift/reduce conflict for LPAR in state 88 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 180 resolved as shift
WARNING: shift/reduce conflict for FOR in state 193 resolved as shift
WARNING: reduce/reduce conflict in state 152 resolved using rule (array -> LCOR parametrosA RCOR)
WARNING: rejected rule (stack -> LCOR parametrosA RCOR) in state 152
WARNING: reduce/reduce conflict in state 171 resolved using rule (addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression)
WARNING: rejected rule (modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression) in state 171
WARNING: Rule (stack -> LCOR parametrosA RCOR) is never reduced
WARNING: Rule (modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression) is never reduced
