
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASIGN COMMA DEF DELETE DELETE_AT DIVIDE DO D_POINT ELSE END EXPONENTIATION FALSE FLOAT FOR GETS GREATER GREATER_OR_EQUAL IF IN INSERT LCOR LKEY LPAR MINOR MINOR_OR_EQUAL MINUS NOT NUMBER OR PLUS POINT PUSH PUTS QUESTION RCOR RETURN RKEY RPAR SEARCH STRING TIMES TRUE VARIABLE WHILEinstrucciones : asignacion\n                    | expression\n                    | funciones\n                    | comparacion\n                    | condicional\n                    | while\n                    | for\n                    | impresion\n                    | input\n                    | callFuncion\n                    | addValueHash\n                    | modValueHash\n                    | deleteValueHash\n                    | insertArray\n                    | deleteArray\n                    | searchStack\n                    | pushStack\n                    \n    \n     cuerpo : asignacion\n                | expression\n                | comparacion\n                | condicional\n                | impresion\n                | for\n                | while\n                | input\n                | callFuncion\n                | addValueHash\n                | modValueHash\n                | deleteValueHash\n                | insertArray\n                | deleteArray\n                | pushStack\n                | searchStack\n    asignacion : VARIABLE ASIGN expression\n                | VARIABLE ASIGN comparacion\n                | VARIABLE ASIGN callFuncion\n                | VARIABLE ASIGN diccionario\n                | VARIABLE ASIGN getValueHash\n                | VARIABLE ASIGN array\n                | VARIABLE ASIGN stack\n                | VARIABLE tipo_asignacion factor\n    tipo_asignacion : PLUS ASIGN\n                        | MINUS ASIGN \n                        | TIMES ASIGN \n                        | DIVIDE ASIGN \n                        | EXPONENTIATION ASIGN \n    expression : term \n                    | boleano\n    term : factorfactor : NUMBER\n                | STRING\n                | FLOAT\n                | VARIABLE\n    factor : LPAR expression RPARexpression : expression PLUS termexpression : expression MINUS termterm : term TIMES factorterm : term DIVIDE factorterm : term EXPONENTIATION factorcomparacion : expression comparador expression\n                    | expression comparador expression AND comparacion\n                    | expression comparador expression OR comparacion\n                    | expression AND expression\n                    | expression OR expression\n    \n    comparador : GREATER \n                | GREATER_OR_EQUAL\n                | MINOR\n                | MINOR_OR_EQUAL\n                | ASIGN ASIGN\n                | NOT ASIGN\n    condicional : IF comparacion D_POINT repCuerpo END\n                    | IF comparacion D_POINT repCuerpo END cond_else\n    cond_else : ELSE D_POINT repCuerpo ENDimpresion : PUTS factorinput : VARIABLE ASIGN GETS parametros : VARIABLE\n                    | VARIABLE COMMA parametros\n    encabezado : DEF VARIABLE LPAR RPAR\n                    | DEF VARIABLE LPAR parametros RPAR\n    funciones : encabezado repCuerpo END\n                | encabezado RETURN expression END\n                | encabezado repCuerpo RETURN expression END\n    callFuncion : VARIABLE LPAR RPAR\n                | VARIABLE LPAR parametros RPAR\n    boleano : TRUE \n                | FALSE\n    diccionario : LKEY cuerpoHash RKEYcuerpoHash : expression ASIGN GREATER expression\n                    | expression ASIGN GREATER expression COMMA cuerpoHash\n    getValueHash : VARIABLE LCOR expression RCORaddValueHash : VARIABLE LCOR expression RCOR ASIGN expressionmodValueHash : VARIABLE LCOR expression RCOR ASIGN expressiondeleteValueHash : VARIABLE POINT DELETE LPAR expression RPARwhile : WHILE LPAR comparacion RPAR repCuerpo END\n            | WHILE LPAR comparacion RPAR repCuerpo END while\n    repCuerpo : cuerpo \n                | cuerpo repCuerpo\n     parametrosA : factor\n                    | factor COMMA parametrosA\n    array : LCOR parametrosA RCOR\n             | LCOR RCOR\n    argumentosA : NUMBER COMMA factor\n    insertArray : VARIABLE POINT INSERT LPAR argumentosA RPAR\n    deleteArray : VARIABLE POINT DELETE_AT LPAR NUMBER RPAR\n    for : FOR VARIABLE IN NUMBER POINT POINT NUMBER  DO repCuerpo END\n            | FOR VARIABLE IN NUMBER POINT POINT NUMBER  DO repCuerpo END for\n    vacio : ""stack : LCOR parametrosA RCOR\n            | LCOR vacio RCOR\n    searchStack : VARIABLE POINT SEARCH LPAR factor RPAR\n    pushStack : VARIABLE POINT PUSH LPAR factor RPAR\n    '
    
_lr_action_items = {'VARIABLE':([0,20,21,22,23,24,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,49,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,82,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,115,116,117,118,119,120,121,122,124,128,130,132,133,134,135,139,143,144,146,149,150,154,156,158,159,161,163,164,165,167,175,178,179,180,182,183,184,185,186,187,188,189,191,195,196,198,200,202,204,205,],[19,-49,-47,-48,78,81,81,84,-50,81,-85,-86,86,-51,-52,81,81,81,81,81,-65,-66,-67,-68,94,81,106,81,81,81,81,81,-19,78,-18,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-53,-53,81,-74,-55,-56,-60,-63,-64,-69,-70,-53,-34,-35,-36,-37,-38,-39,-40,-75,81,81,-41,-83,-42,-43,-44,-45,-46,-57,-58,-59,81,78,-54,106,81,81,81,-101,106,-84,81,81,81,78,-78,-61,-62,-87,-100,-109,81,81,-71,-79,-90,81,-91,-93,-103,81,-104,-110,-111,-72,-94,78,-95,81,78,-73,-105,-106,]),'IF':([0,20,21,22,23,28,30,31,33,34,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,85,87,88,89,90,91,94,95,96,97,98,99,100,101,102,105,107,120,121,122,128,130,139,144,154,156,158,159,161,163,164,175,178,179,182,183,184,186,187,188,189,191,195,196,200,202,204,205,],[24,-49,-47,-48,24,-50,-85,-86,-51,-52,-19,24,-18,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-53,-53,-74,-55,-56,-60,-63,-64,-53,-34,-35,-36,-37,-38,-39,-40,-75,-41,-83,-57,-58,-59,24,-54,-101,-84,24,-78,-61,-62,-87,-100,-109,-71,-79,-90,-91,-93,-103,-104,-110,-111,-72,-94,24,-95,24,-73,-105,-106,]),'WHILE':([0,20,21,22,23,28,30,31,33,34,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,85,87,88,89,90,91,94,95,96,97,98,99,100,101,102,105,107,120,121,122,128,130,139,144,154,156,158,159,161,163,164,175,178,179,182,183,184,186,187,188,189,191,195,196,200,202,204,205,],[25,-49,-47,-48,25,-50,-85,-86,-51,-52,-19,25,-18,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-53,-53,-74,-55,-56,-60,-63,-64,-53,-34,-35,-36,-37,-38,-39,-40,-75,-41,-83,-57,-58,-59,25,-54,-101,-84,25,-78,-61,-62,-87,-100,-109,-71,-79,-90,-91,-93,-103,-104,-110,-111,-72,25,25,-95,25,-73,-105,-106,]),'FOR':([0,20,21,22,23,28,30,31,33,34,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,85,87,88,89,90,91,94,95,96,97,98,99,100,101,102,105,107,120,121,122,128,130,139,144,154,156,158,159,161,163,164,175,178,179,182,183,184,186,187,188,189,191,195,196,200,202,204,205,],[27,-49,-47,-48,27,-50,-85,-86,-51,-52,-19,27,-18,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-53,-53,-74,-55,-56,-60,-63,-64,-53,-34,-35,-36,-37,-38,-39,-40,-75,-41,-83,-57,-58,-59,27,-54,-101,-84,27,-78,-61,-62,-87,-100,-109,-71,-79,-90,-91,-93,-103,-104,-110,-111,-72,-94,27,-95,27,-73,27,-106,]),'PUTS':([0,20,21,22,23,28,30,31,33,34,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,85,87,88,89,90,91,94,95,96,97,98,99,100,101,102,105,107,120,121,122,128,130,139,144,154,156,158,159,161,163,164,175,178,179,182,183,184,186,187,188,189,191,195,196,200,202,204,205,],[29,-49,-47,-48,29,-50,-85,-86,-51,-52,-19,29,-18,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-53,-53,-74,-55,-56,-60,-63,-64,-53,-34,-35,-36,-37,-38,-39,-40,-75,-41,-83,-57,-58,-59,29,-54,-101,-84,29,-78,-61,-62,-87,-100,-109,-71,-79,-90,-91,-93,-103,-104,-110,-111,-72,-94,29,-95,29,-73,-105,-106,]),'TRUE':([0,20,21,22,23,24,26,28,30,31,33,34,37,38,39,40,41,42,43,46,49,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,82,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,107,120,121,122,124,128,130,133,134,135,139,144,146,154,156,158,159,161,163,164,167,175,178,179,180,182,183,184,186,187,188,189,191,195,196,198,200,202,204,205,],[30,-49,-47,-48,30,30,30,-50,-85,-86,-51,-52,30,30,30,-65,-66,-67,-68,30,30,30,-19,30,-18,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-53,-53,30,-74,-55,-56,-60,-63,-64,-69,-70,-53,-34,-35,-36,-37,-38,-39,-40,-75,30,-41,-83,-57,-58,-59,30,30,-54,30,30,30,-101,-84,30,30,-78,-61,-62,-87,-100,-109,30,-71,-79,-90,30,-91,-93,-103,-104,-110,-111,-72,-94,30,-95,30,30,-73,-105,-106,]),'FALSE':([0,20,21,22,23,24,26,28,30,31,33,34,37,38,39,40,41,42,43,46,49,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,82,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,105,107,120,121,122,124,128,130,133,134,135,139,144,146,154,156,158,159,161,163,164,167,175,178,179,180,182,183,184,186,187,188,189,191,195,196,198,200,202,204,205,],[31,-49,-47,-48,31,31,31,-50,-85,-86,-51,-52,31,31,31,-65,-66,-67,-68,31,31,31,-19,31,-18,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-53,-53,31,-74,-55,-56,-60,-63,-64,-69,-70,-53,-34,-35,-36,-37,-38,-39,-40,-75,31,-41,-83,-57,-58,-59,31,31,-54,31,31,31,-101,-84,31,31,-78,-61,-62,-87,-100,-109,31,-71,-79,-90,31,-91,-93,-103,-104,-110,-111,-72,-94,31,-95,31,31,-73,-105,-106,]),'DEF':([0,],[32,]),'NUMBER':([0,20,21,22,23,24,26,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,46,47,49,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,82,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,115,116,117,118,119,120,121,122,124,128,130,131,133,134,135,139,144,146,147,148,149,150,154,156,158,159,161,163,164,165,167,175,178,179,180,182,183,184,185,186,187,188,189,191,192,195,196,198,200,202,204,205,],[28,-49,-47,-48,28,28,28,-50,28,-85,-86,-51,-52,28,28,28,28,28,-65,-66,-67,-68,28,28,28,28,28,28,28,-19,28,-18,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-53,-53,28,-74,-55,-56,-60,-63,-64,-69,-70,-53,-34,-35,-36,-37,-38,-39,-40,-75,28,28,-41,-83,-42,-43,-44,-45,-46,-57,-58,-59,28,28,-54,155,28,28,28,-101,-84,28,170,171,28,28,28,-78,-61,-62,-87,-100,-109,28,28,-71,-79,-90,28,-91,-93,-103,28,-104,-110,-111,-72,-94,197,28,-95,28,28,-73,-105,-106,]),'STRING':([0,20,21,22,23,24,26,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,46,47,49,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,82,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,115,116,117,118,119,120,121,122,124,128,130,133,134,135,139,144,146,149,150,154,156,158,159,161,163,164,165,167,175,178,179,180,182,183,184,185,186,187,188,189,191,195,196,198,200,202,204,205,],[33,-49,-47,-48,33,33,33,-50,33,-85,-86,-51,-52,33,33,33,33,33,-65,-66,-67,-68,33,33,33,33,33,33,33,-19,33,-18,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-53,-53,33,-74,-55,-56,-60,-63,-64,-69,-70,-53,-34,-35,-36,-37,-38,-39,-40,-75,33,33,-41,-83,-42,-43,-44,-45,-46,-57,-58,-59,33,33,-54,33,33,33,-101,-84,33,33,33,33,-78,-61,-62,-87,-100,-109,33,33,-71,-79,-90,33,-91,-93,-103,33,-104,-110,-111,-72,-94,33,-95,33,33,-73,-105,-106,]),'FLOAT':([0,20,21,22,23,24,26,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,46,47,49,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,82,85,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,115,116,117,118,119,120,121,122,124,128,130,133,134,135,139,144,146,149,150,154,156,158,159,161,163,164,165,167,175,178,179,180,182,183,184,185,186,187,188,189,191,195,196,198,200,202,204,205,],[34,-49,-47,-48,34,34,34,-50,34,-85,-86,-51,-52,34,34,34,34,34,-65,-66,-67,-68,34,34,34,34,34,34,34,-19,34,-18,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-53,-53,34,-74,-55,-56,-60,-63,-64,-69,-70,-53,-34,-35,-36,-37,-38,-39,-40,-75,34,34,-41,-83,-42,-43,-44,-45,-46,-57,-58,-59,34,34,-54,34,34,34,-101,-84,34,34,34,34,-78,-61,-62,-87,-100,-109,34,34,-71,-79,-90,34,-91,-93,-103,34,-104,-110,-111,-72,-94,34,-95,34,34,-73,-105,-106,]),'LPAR':([0,19,20,21,22,23,24,25,26,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,46,47,49,56,57,58,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,82,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,107,110,111,112,113,114,115,116,117,118,119,120,121,122,124,128,130,133,134,135,139,144,146,149,150,154,156,158,159,161,163,164,165,167,175,178,179,180,182,183,184,185,186,187,188,189,191,195,196,198,200,202,204,205,],[26,48,-49,-47,-48,26,26,82,26,-50,26,-85,-86,-51,-52,26,26,26,26,26,-65,-66,-67,-68,26,26,26,26,26,26,26,-19,26,-18,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,48,-53,26,-74,132,-55,-56,-60,-63,-64,-69,-70,48,-34,-35,-36,-37,-38,-39,-40,-75,26,26,-41,-83,146,147,148,149,150,-42,-43,-44,-45,-46,-57,-58,-59,26,26,-54,26,26,26,-101,-84,26,26,26,26,-78,-61,-62,-87,-100,-109,26,26,-71,-79,-90,26,-91,-93,-103,26,-104,-110,-111,-72,-94,26,-95,26,26,-73,-105,-106,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,28,30,31,33,34,81,85,87,88,89,90,91,94,95,96,97,98,99,100,101,102,105,107,120,121,122,123,130,139,144,152,158,159,161,163,164,174,175,179,182,183,184,186,187,188,189,191,196,202,204,205,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-53,-49,-47,-48,-50,-85,-86,-51,-52,-53,-74,-55,-56,-60,-63,-64,-53,-34,-35,-36,-37,-38,-39,-40,-75,-41,-83,-57,-58,-59,-80,-54,-101,-84,-81,-61,-62,-87,-100,-109,-82,-71,-90,-91,-93,-103,-104,-110,-111,-72,-94,-95,-73,-105,-106,]),'PLUS':([3,19,20,21,22,28,30,31,33,34,61,78,80,81,83,87,88,89,90,91,94,95,109,120,121,122,125,130,137,151,160,168,182,193,],[35,51,-49,-47,-48,-50,-85,-86,-51,-52,35,51,35,-53,35,-55,-56,35,35,35,-53,35,35,-57,-58,-59,35,-54,35,35,35,35,35,35,]),'MINUS':([3,19,20,21,22,28,30,31,33,34,61,78,80,81,83,87,88,89,90,91,94,95,109,120,121,122,125,130,137,151,160,168,182,193,],[36,52,-49,-47,-48,-50,-85,-86,-51,-52,36,52,36,-53,36,-55,-56,36,36,36,-53,36,36,-57,-58,-59,36,-54,36,36,36,36,36,36,]),'AND':([3,19,20,21,22,28,30,31,33,34,61,78,80,81,87,88,89,94,95,120,121,122,130,],[38,-53,-49,-47,-48,-50,-85,-86,-51,-52,38,-53,38,-53,-55,-56,133,-53,38,-57,-58,-59,-54,]),'OR':([3,19,20,21,22,28,30,31,33,34,61,78,80,81,87,88,89,94,95,120,121,122,130,],[39,-53,-49,-47,-48,-50,-85,-86,-51,-52,39,-53,39,-53,-55,-56,134,-53,39,-57,-58,-59,-54,]),'GREATER':([3,19,20,21,22,28,30,31,33,34,61,78,80,81,87,88,94,95,120,121,122,130,162,],[40,-53,-49,-47,-48,-50,-85,-86,-51,-52,40,-53,40,-53,-55,-56,-53,40,-57,-58,-59,-54,180,]),'GREATER_OR_EQUAL':([3,19,20,21,22,28,30,31,33,34,61,78,80,81,87,88,94,95,120,121,122,130,],[41,-53,-49,-47,-48,-50,-85,-86,-51,-52,41,-53,41,-53,-55,-56,-53,41,-57,-58,-59,-54,]),'MINOR':([3,19,20,21,22,28,30,31,33,34,61,78,80,81,87,88,94,95,120,121,122,130,],[42,-53,-49,-47,-48,-50,-85,-86,-51,-52,42,-53,42,-53,-55,-56,-53,42,-57,-58,-59,-54,]),'MINOR_OR_EQUAL':([3,19,20,21,22,28,30,31,33,34,61,78,80,81,87,88,94,95,120,121,122,130,],[43,-53,-49,-47,-48,-50,-85,-86,-51,-52,43,-53,43,-53,-55,-56,-53,43,-57,-58,-59,-54,]),'ASIGN':([3,19,20,21,22,28,30,31,33,34,44,45,51,52,53,54,55,61,78,80,81,87,88,94,95,120,121,122,130,137,145,],[44,46,-49,-47,-48,-50,-85,-86,-51,-52,92,93,115,116,117,118,119,44,46,44,-53,-55,-56,-53,44,-57,-58,-59,-54,162,167,]),'NOT':([3,19,20,21,22,28,30,31,33,34,61,78,80,81,87,88,94,95,120,121,122,130,],[45,-53,-49,-47,-48,-50,-85,-86,-51,-52,45,-53,45,-53,-55,-56,-53,45,-57,-58,-59,-54,]),'LCOR':([19,46,78,94,],[49,104,49,135,]),'POINT':([19,78,155,177,],[50,127,177,192,]),'TIMES':([19,20,21,28,33,34,78,81,87,88,94,120,121,122,130,],[53,-49,56,-50,-51,-52,53,-53,56,56,-53,-57,-58,-59,-54,]),'DIVIDE':([19,20,21,28,33,34,78,81,87,88,94,120,121,122,130,],[54,-49,57,-50,-51,-52,54,-53,57,57,-53,-57,-58,-59,-54,]),'EXPONENTIATION':([19,20,21,28,33,34,78,81,87,88,94,120,121,122,130,],[55,-49,58,-50,-51,-52,55,-53,58,58,-53,-57,-58,-59,-54,]),'END':([20,21,22,28,30,31,33,34,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,85,87,88,89,90,91,94,95,96,97,98,99,100,101,102,105,107,120,121,122,125,126,130,139,144,151,153,158,159,161,163,164,175,176,179,182,183,184,186,187,188,189,191,196,199,202,203,204,205,],[-49,-47,-48,-50,-85,-86,-51,-52,123,-19,-96,-18,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-53,-53,-74,-55,-56,-60,-63,-64,-53,-34,-35,-36,-37,-38,-39,-40,-75,-41,-83,-57,-58,-59,152,-97,-54,-101,-84,174,175,-61,-62,-87,-100,-109,-71,191,-90,-91,-93,-103,-104,-110,-111,-72,-94,-95,202,-73,204,-105,-106,]),'RETURN':([20,21,22,23,28,30,31,33,34,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,81,85,87,88,89,90,91,94,95,96,97,98,99,100,101,102,105,107,120,121,122,126,130,139,144,156,158,159,161,163,164,175,178,179,182,183,184,186,187,188,189,191,196,202,204,205,],[-49,-47,-48,60,-50,-85,-86,-51,-52,124,-19,-96,-18,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-53,-53,-74,-55,-56,-60,-63,-64,-53,-34,-35,-36,-37,-38,-39,-40,-75,-41,-83,-57,-58,-59,-97,-54,-101,-84,-78,-61,-62,-87,-100,-109,-71,-79,-90,-91,-93,-103,-104,-110,-111,-72,-94,-95,-73,-105,-106,]),'RPAR':([20,21,22,28,30,31,33,34,48,81,83,87,88,89,90,91,106,108,120,121,122,129,130,132,157,158,159,166,168,169,171,172,173,194,],[-49,-47,-48,-50,-85,-86,-51,-52,107,-53,130,-55,-56,-60,-63,-64,-76,144,-57,-58,-59,154,-54,156,178,-61,-62,-77,183,184,186,187,188,-102,]),'D_POINT':([20,21,22,28,30,31,33,34,79,81,87,88,89,90,91,120,121,122,130,158,159,190,],[-49,-47,-48,-50,-85,-86,-51,-52,128,-53,-55,-56,-60,-63,-64,-57,-58,-59,-54,-61,-62,195,]),'RCOR':([20,21,22,28,30,31,33,34,81,87,88,104,109,120,121,122,130,138,140,141,142,160,181,],[-49,-47,-48,-50,-85,-86,-51,-52,-53,-55,-56,139,145,-57,-58,-59,-54,163,164,-98,-107,179,-99,]),'COMMA':([20,21,22,28,30,31,33,34,81,87,88,106,120,121,122,130,141,170,193,],[-49,-47,-48,-50,-85,-86,-51,-52,-53,-55,-56,143,-57,-58,-59,-54,165,185,198,]),'RKEY':([20,21,22,28,30,31,33,34,81,87,88,120,121,122,130,136,193,201,],[-49,-47,-48,-50,-85,-86,-51,-52,-53,-55,-56,-57,-58,-59,-54,161,-88,-89,]),'GETS':([46,],[102,]),'LKEY':([46,],[103,]),'DELETE':([50,127,],[110,110,]),'INSERT':([50,127,],[111,111,]),'DELETE_AT':([50,127,],[112,112,]),'SEARCH':([50,127,],[113,113,]),'PUSH':([50,127,],[114,114,]),'IN':([84,],[131,]),'':([104,],[142,]),'ELSE':([175,],[190,]),'DO':([197,],[200,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instrucciones':([0,],[1,]),'asignacion':([0,23,62,128,154,195,200,],[2,63,63,63,63,63,63,]),'expression':([0,23,24,26,37,38,39,46,49,60,62,82,103,124,128,133,134,135,146,154,167,180,195,198,200,],[3,61,80,83,89,90,91,95,109,125,61,80,137,151,61,80,80,160,168,61,182,193,61,137,61,]),'funciones':([0,],[4,]),'comparacion':([0,23,24,46,62,82,128,133,134,154,195,200,],[5,64,79,96,64,129,64,158,159,64,64,64,]),'condicional':([0,23,62,128,154,195,200,],[6,65,65,65,65,65,65,]),'while':([0,23,62,128,154,191,195,200,],[7,68,68,68,68,196,68,68,]),'for':([0,23,62,128,154,195,200,204,],[8,67,67,67,67,67,67,205,]),'impresion':([0,23,62,128,154,195,200,],[9,66,66,66,66,66,66,]),'input':([0,23,62,128,154,195,200,],[10,69,69,69,69,69,69,]),'callFuncion':([0,23,46,62,128,154,195,200,],[11,70,97,70,70,70,70,70,]),'addValueHash':([0,23,62,128,154,195,200,],[12,71,71,71,71,71,71,]),'modValueHash':([0,23,62,128,154,195,200,],[13,72,72,72,72,72,72,]),'deleteValueHash':([0,23,62,128,154,195,200,],[14,73,73,73,73,73,73,]),'insertArray':([0,23,62,128,154,195,200,],[15,74,74,74,74,74,74,]),'deleteArray':([0,23,62,128,154,195,200,],[16,75,75,75,75,75,75,]),'searchStack':([0,23,62,128,154,195,200,],[17,77,77,77,77,77,77,]),'pushStack':([0,23,62,128,154,195,200,],[18,76,76,76,76,76,76,]),'factor':([0,23,24,26,29,35,36,37,38,39,46,47,49,56,57,58,60,62,82,103,104,124,128,133,134,135,146,149,150,154,165,167,180,185,195,198,200,],[20,20,20,20,85,20,20,20,20,20,20,105,20,120,121,122,20,20,20,20,141,20,20,20,20,20,20,172,173,20,141,20,20,194,20,20,20,]),'term':([0,23,24,26,35,36,37,38,39,46,49,60,62,82,103,124,128,133,134,135,146,154,167,180,195,198,200,],[21,21,21,21,87,88,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'boleano':([0,23,24,26,37,38,39,46,49,60,62,82,103,124,128,133,134,135,146,154,167,180,195,198,200,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'encabezado':([0,],[23,]),'comparador':([3,61,80,95,],[37,37,37,37,]),'tipo_asignacion':([19,78,],[47,47,]),'repCuerpo':([23,62,128,154,195,200,],[59,126,153,176,199,203,]),'cuerpo':([23,62,128,154,195,200,],[62,62,62,62,62,62,]),'diccionario':([46,],[98,]),'getValueHash':([46,],[99,]),'array':([46,],[100,]),'stack':([46,],[101,]),'parametros':([48,132,143,],[108,157,166,]),'cuerpoHash':([103,198,],[136,201,]),'parametrosA':([104,165,],[138,181,]),'vacio':([104,],[140,]),'argumentosA':([147,],[169,]),'cond_else':([175,],[189,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> instrucciones","S'",1,None,None,None),
  ('instrucciones -> asignacion','instrucciones',1,'p_instrucciones','sintactico.py',6),
  ('instrucciones -> expression','instrucciones',1,'p_instrucciones','sintactico.py',7),
  ('instrucciones -> funciones','instrucciones',1,'p_instrucciones','sintactico.py',8),
  ('instrucciones -> comparacion','instrucciones',1,'p_instrucciones','sintactico.py',9),
  ('instrucciones -> condicional','instrucciones',1,'p_instrucciones','sintactico.py',10),
  ('instrucciones -> while','instrucciones',1,'p_instrucciones','sintactico.py',11),
  ('instrucciones -> for','instrucciones',1,'p_instrucciones','sintactico.py',12),
  ('instrucciones -> impresion','instrucciones',1,'p_instrucciones','sintactico.py',13),
  ('instrucciones -> input','instrucciones',1,'p_instrucciones','sintactico.py',14),
  ('instrucciones -> callFuncion','instrucciones',1,'p_instrucciones','sintactico.py',15),
  ('instrucciones -> addValueHash','instrucciones',1,'p_instrucciones','sintactico.py',16),
  ('instrucciones -> modValueHash','instrucciones',1,'p_instrucciones','sintactico.py',17),
  ('instrucciones -> deleteValueHash','instrucciones',1,'p_instrucciones','sintactico.py',18),
  ('instrucciones -> insertArray','instrucciones',1,'p_instrucciones','sintactico.py',19),
  ('instrucciones -> deleteArray','instrucciones',1,'p_instrucciones','sintactico.py',20),
  ('instrucciones -> searchStack','instrucciones',1,'p_instrucciones','sintactico.py',21),
  ('instrucciones -> pushStack','instrucciones',1,'p_instrucciones','sintactico.py',22),
  ('cuerpo -> asignacion','cuerpo',1,'p_body','sintactico.py',28),
  ('cuerpo -> expression','cuerpo',1,'p_body','sintactico.py',29),
  ('cuerpo -> comparacion','cuerpo',1,'p_body','sintactico.py',30),
  ('cuerpo -> condicional','cuerpo',1,'p_body','sintactico.py',31),
  ('cuerpo -> impresion','cuerpo',1,'p_body','sintactico.py',32),
  ('cuerpo -> for','cuerpo',1,'p_body','sintactico.py',33),
  ('cuerpo -> while','cuerpo',1,'p_body','sintactico.py',34),
  ('cuerpo -> input','cuerpo',1,'p_body','sintactico.py',35),
  ('cuerpo -> callFuncion','cuerpo',1,'p_body','sintactico.py',36),
  ('cuerpo -> addValueHash','cuerpo',1,'p_body','sintactico.py',37),
  ('cuerpo -> modValueHash','cuerpo',1,'p_body','sintactico.py',38),
  ('cuerpo -> deleteValueHash','cuerpo',1,'p_body','sintactico.py',39),
  ('cuerpo -> insertArray','cuerpo',1,'p_body','sintactico.py',40),
  ('cuerpo -> deleteArray','cuerpo',1,'p_body','sintactico.py',41),
  ('cuerpo -> pushStack','cuerpo',1,'p_body','sintactico.py',42),
  ('cuerpo -> searchStack','cuerpo',1,'p_body','sintactico.py',43),
  ('asignacion -> VARIABLE ASIGN expression','asignacion',3,'p_asignacion','sintactico.py',47),
  ('asignacion -> VARIABLE ASIGN comparacion','asignacion',3,'p_asignacion','sintactico.py',48),
  ('asignacion -> VARIABLE ASIGN callFuncion','asignacion',3,'p_asignacion','sintactico.py',49),
  ('asignacion -> VARIABLE ASIGN diccionario','asignacion',3,'p_asignacion','sintactico.py',50),
  ('asignacion -> VARIABLE ASIGN getValueHash','asignacion',3,'p_asignacion','sintactico.py',51),
  ('asignacion -> VARIABLE ASIGN array','asignacion',3,'p_asignacion','sintactico.py',52),
  ('asignacion -> VARIABLE ASIGN stack','asignacion',3,'p_asignacion','sintactico.py',53),
  ('asignacion -> VARIABLE tipo_asignacion factor','asignacion',3,'p_asignacion','sintactico.py',54),
  ('tipo_asignacion -> PLUS ASIGN','tipo_asignacion',2,'p_tipo_asignacion','sintactico.py',57),
  ('tipo_asignacion -> MINUS ASIGN','tipo_asignacion',2,'p_tipo_asignacion','sintactico.py',58),
  ('tipo_asignacion -> TIMES ASIGN','tipo_asignacion',2,'p_tipo_asignacion','sintactico.py',59),
  ('tipo_asignacion -> DIVIDE ASIGN','tipo_asignacion',2,'p_tipo_asignacion','sintactico.py',60),
  ('tipo_asignacion -> EXPONENTIATION ASIGN','tipo_asignacion',2,'p_tipo_asignacion','sintactico.py',61),
  ('expression -> term','expression',1,'p_expression_term','sintactico.py',66),
  ('expression -> boleano','expression',1,'p_expression_term','sintactico.py',67),
  ('term -> factor','term',1,'p_term_factor','sintactico.py',71),
  ('factor -> NUMBER','factor',1,'p_factor_num','sintactico.py',74),
  ('factor -> STRING','factor',1,'p_factor_num','sintactico.py',75),
  ('factor -> FLOAT','factor',1,'p_factor_num','sintactico.py',76),
  ('factor -> VARIABLE','factor',1,'p_factor_num','sintactico.py',77),
  ('factor -> LPAR expression RPAR','factor',3,'p_factor_expr','sintactico.py',81),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','sintactico.py',85),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','sintactico.py',88),
  ('term -> term TIMES factor','term',3,'p_term_times','sintactico.py',91),
  ('term -> term DIVIDE factor','term',3,'p_term_div','sintactico.py',94),
  ('term -> term EXPONENTIATION factor','term',3,'p_term_exp','sintactico.py',97),
  ('comparacion -> expression comparador expression','comparacion',3,'p_comparacion','sintactico.py',101),
  ('comparacion -> expression comparador expression AND comparacion','comparacion',5,'p_comparacion','sintactico.py',102),
  ('comparacion -> expression comparador expression OR comparacion','comparacion',5,'p_comparacion','sintactico.py',103),
  ('comparacion -> expression AND expression','comparacion',3,'p_comparacion','sintactico.py',104),
  ('comparacion -> expression OR expression','comparacion',3,'p_comparacion','sintactico.py',105),
  ('comparador -> GREATER','comparador',1,'p_comparador','sintactico.py',110),
  ('comparador -> GREATER_OR_EQUAL','comparador',1,'p_comparador','sintactico.py',111),
  ('comparador -> MINOR','comparador',1,'p_comparador','sintactico.py',112),
  ('comparador -> MINOR_OR_EQUAL','comparador',1,'p_comparador','sintactico.py',113),
  ('comparador -> ASIGN ASIGN','comparador',2,'p_comparador','sintactico.py',114),
  ('comparador -> NOT ASIGN','comparador',2,'p_comparador','sintactico.py',115),
  ('condicional -> IF comparacion D_POINT repCuerpo END','condicional',5,'p_cond_if','sintactico.py',120),
  ('condicional -> IF comparacion D_POINT repCuerpo END cond_else','condicional',6,'p_cond_if','sintactico.py',121),
  ('cond_else -> ELSE D_POINT repCuerpo END','cond_else',4,'p_cond_else','sintactico.py',125),
  ('impresion -> PUTS factor','impresion',2,'p_puts','sintactico.py',129),
  ('input -> VARIABLE ASIGN GETS','input',3,'p_gets','sintactico.py',132),
  ('parametros -> VARIABLE','parametros',1,'p_par_function','sintactico.py',136),
  ('parametros -> VARIABLE COMMA parametros','parametros',3,'p_par_function','sintactico.py',137),
  ('encabezado -> DEF VARIABLE LPAR RPAR','encabezado',4,'p_header_function','sintactico.py',141),
  ('encabezado -> DEF VARIABLE LPAR parametros RPAR','encabezado',5,'p_header_function','sintactico.py',142),
  ('funciones -> encabezado repCuerpo END','funciones',3,'p_function','sintactico.py',146),
  ('funciones -> encabezado RETURN expression END','funciones',4,'p_function','sintactico.py',147),
  ('funciones -> encabezado repCuerpo RETURN expression END','funciones',5,'p_function','sintactico.py',148),
  ('callFuncion -> VARIABLE LPAR RPAR','callFuncion',3,'p_call_function','sintactico.py',152),
  ('callFuncion -> VARIABLE LPAR parametros RPAR','callFuncion',4,'p_call_function','sintactico.py',153),
  ('boleano -> TRUE','boleano',1,'p_boolean','sintactico.py',157),
  ('boleano -> FALSE','boleano',1,'p_boolean','sintactico.py',158),
  ('diccionario -> LKEY cuerpoHash RKEY','diccionario',3,'p_hash','sintactico.py',163),
  ('cuerpoHash -> expression ASIGN GREATER expression','cuerpoHash',4,'p_body_hash','sintactico.py',166),
  ('cuerpoHash -> expression ASIGN GREATER expression COMMA cuerpoHash','cuerpoHash',6,'p_body_hash','sintactico.py',167),
  ('getValueHash -> VARIABLE LCOR expression RCOR','getValueHash',4,'p_get_hash','sintactico.py',171),
  ('addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression','addValueHash',6,'p_add_hash','sintactico.py',174),
  ('modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression','modValueHash',6,'p_mod_hash','sintactico.py',177),
  ('deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR','deleteValueHash',6,'p_del_hash','sintactico.py',180),
  ('while -> WHILE LPAR comparacion RPAR repCuerpo END','while',6,'p_while','sintactico.py',187),
  ('while -> WHILE LPAR comparacion RPAR repCuerpo END while','while',7,'p_while','sintactico.py',188),
  ('repCuerpo -> cuerpo','repCuerpo',1,'p_repCuerpo','sintactico.py',191),
  ('repCuerpo -> cuerpo repCuerpo','repCuerpo',2,'p_repCuerpo','sintactico.py',192),
  ('parametrosA -> factor','parametrosA',1,'p_parA_function','sintactico.py',197),
  ('parametrosA -> factor COMMA parametrosA','parametrosA',3,'p_parA_function','sintactico.py',198),
  ('array -> LCOR parametrosA RCOR','array',3,'p_array','sintactico.py',201),
  ('array -> LCOR RCOR','array',2,'p_array','sintactico.py',202),
  ('argumentosA -> NUMBER COMMA factor','argumentosA',3,'p_argumentos_array','sintactico.py',206),
  ('insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR','insertArray',6,'p_insert_array','sintactico.py',209),
  ('deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR','deleteArray',6,'p_delete_array','sintactico.py',213),
  ('for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END','for',10,'p_for','sintactico.py',221),
  ('for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for','for',11,'p_for','sintactico.py',222),
  ('vacio -> ','vacio',1,'p_vacio','sintactico.py',226),
  ('stack -> LCOR parametrosA RCOR','stack',3,'p_stack','sintactico.py',228),
  ('stack -> LCOR vacio RCOR','stack',3,'p_stack','sintactico.py',229),
  ('searchStack -> VARIABLE POINT SEARCH LPAR factor RPAR','searchStack',6,'p_search_stack','sintactico.py',232),
  ('pushStack -> VARIABLE POINT PUSH LPAR factor RPAR','pushStack',6,'p_push_stack','sintactico.py',235),
]
