
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASIGN COMMA DEF DELETE DELETE_AT DIVIDE DO D_POINT ELSE END EXPONENTIATION FALSE FLOAT FOR GETS GREATER GREATER_OR_EQUAL IF IN INSERT LCOR LKEY LPAR MINOR MINOR_OR_EQUAL MINUS NOT NUMBER OR PLUS POINT PUSH PUTS QUESTION RCOR RETURN RKEY RPAR SEARCH STRING TIMES TRUE VARIABLE WHILEinstrucciones : asignacion\n                    | expression\n                    | funciones\n                    | comparacion\n                    | condicional\n                    | while\n                    | for\n                    | impresion\n                    | input\n                    | callFuncion\n                    | addValueHash\n                    | modValueHash\n                    | deleteValueHash\n                    | insertArray\n                    | deleteArray\n                    | searchStack\n                    | pushStack    \n                    | metodoBoleano    \n                    | opMatematicas \n     cuerpo : asignacion\n                | expression\n                | comparacion\n                | condicional\n                | impresion\n                | for\n                | while\n                | input\n                | callFuncion\n                | addValueHash\n                | modValueHash\n                | deleteValueHash\n                | insertArray\n                | deleteArray\n                | pushStack\n                | searchStack\n                | opMatematicas\n    asignacion : VARIABLE ASIGN expression\n                | VARIABLE ASIGN comparacion\n                | VARIABLE ASIGN callFuncion\n                | VARIABLE ASIGN diccionario\n                | VARIABLE ASIGN getValueHash\n                | VARIABLE ASIGN array\n                | VARIABLE ASIGN stack\n                | VARIABLE tipo_asignacion factor\n                | VARIABLE ASIGN opMatematicas\n    tipo_asignacion : PLUS ASIGN\n                        | MINUS ASIGN \n                        | TIMES ASIGN \n                        | DIVIDE ASIGN \n                        | EXPONENTIATION ASIGN \n    expression : term \n                    | boleano\n    term : factorfactor : NUMBER\n                | STRING\n                | FLOAT\n                | VARIABLE\n    factor : LPAR expression RPARcomparacion : expression comparador expression\n                    | expression comparador expression AND comparacion\n                    | expression comparador expression OR comparacion\n                    | expression AND expression\n                    | expression OR expression\n    \n    comparador : GREATER \n                | GREATER_OR_EQUAL\n                | MINOR\n                | MINOR_OR_EQUAL\n                | ASIGN ASIGN\n                | NOT ASIGN\n    condicional : IF comparacion D_POINT repCuerpo END\n                    | IF comparacion D_POINT repCuerpo END cond_else\n    cond_else : ELSE D_POINT repCuerpo ENDimpresion : PUTS factorinput : VARIABLE ASIGN GETS parametros : VARIABLE\n                    | VARIABLE COMMA parametros\n    encabezado : DEF VARIABLE LPAR RPAR\n                    | DEF VARIABLE LPAR parametros RPAR\n    funciones : encabezado repCuerpo END\n                | encabezado RETURN expression END\n                | encabezado repCuerpo RETURN expression END\n    callFuncion : VARIABLE LPAR RPAR\n                | VARIABLE LPAR parametros RPAR\n    boleano : TRUE \n                | FALSE\n    diccionario : LKEY cuerpoHash RKEYcuerpoHash : expression ASIGN GREATER expression\n                    | expression ASIGN GREATER expression COMMA cuerpoHash\n    getValueHash : VARIABLE LCOR expression RCORaddValueHash : VARIABLE LCOR expression RCOR ASIGN expressionmodValueHash : VARIABLE LCOR expression RCOR ASIGN expressiondeleteValueHash : VARIABLE POINT DELETE LPAR expression RPARmetodoBoleano : VARIABLE POINT VARIABLE QUESTION LPAR expression RPAR\n                    | VARIABLE POINT VARIABLE QUESTION LPAR RPAR\n    while : WHILE LPAR comparacion RPAR repCuerpo END\n            | WHILE LPAR comparacion RPAR repCuerpo END while\n    repCuerpo : cuerpo \n                | cuerpo repCuerpo\n     parametrosA : factor\n                    | factor COMMA parametrosA\n    array : LCOR parametrosA RCOR\n             | LCOR RCOR\n    argumentosA : NUMBER COMMA factor\n    insertArray : VARIABLE POINT INSERT LPAR argumentosA RPAR\n    deleteArray : VARIABLE POINT DELETE_AT LPAR NUMBER RPAR\n    for : FOR VARIABLE IN NUMBER POINT POINT NUMBER  DO repCuerpo END\n            | FOR VARIABLE IN NUMBER POINT POINT NUMBER  DO repCuerpo END for\n    vacio : ""stack : LCOR parametrosA RCOR\n            | LCOR vacio RCOR\n    searchStack : VARIABLE POINT SEARCH LPAR factor RPAR\n    pushStack : VARIABLE POINT PUSH LPAR factor RPAR\n     opMatematicas : suma\n                    | resta\n                    | multiplicacion\n                    | division\n                    | exponenciacion\n    suma : operadores PLUS operadores\n            | operadores PLUS opMatematicas\n            | operadores PLUS LPAR operadores RPAR\n            | operadores PLUS LPAR opMatematicas RPAR\n    resta : operadores MINUS operadores\n            | operadores MINUS opMatematicas\n            | operadores MINUS LPAR operadores RPAR\n            | operadores MINUS LPAR opMatematicas RPAR\n     multiplicacion : operadores TIMES operadores\n                    | operadores TIMES LPAR operadores RPAR\n                    | operadores TIMES LPAR opMatematicas RPAR\n     division : operadores DIVIDE operadores\n                | operadores DIVIDE LPAR operadores RPAR\n                | operadores DIVIDE LPAR opMatematicas RPAR\n     exponenciacion : operadores EXPONENTIATION operadores\n                    | LPAR operadores RPAR EXPONENTIATION operadores\n                    | LPAR opMatematicas RPAR EXPONENTIATION operadores\n     operadores : enteros\n                | FLOAT  \n     enteros : NUMBER\n                | MINUS NUMBER\n    '
    
_lr_action_items = {'VARIABLE':([0,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,42,43,44,45,46,47,48,49,50,51,54,55,56,57,58,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,90,91,98,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,134,135,136,137,138,140,144,148,150,151,152,154,155,156,157,159,161,163,164,165,166,170,174,175,178,181,182,186,190,201,202,204,206,207,208,210,211,219,221,222,224,225,226,227,228,229,230,231,232,233,234,236,239,240,241,242,243,244,245,247,252,253,255,257,259,261,262,],[21,-53,-51,-52,84,89,89,97,-54,89,-113,-114,-115,-116,-117,-84,-85,99,-55,-56,-135,89,89,89,-64,-65,-66,-67,111,89,124,89,128,89,-21,84,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-57,-54,-56,-57,89,89,-73,-138,-59,-62,-63,-68,-69,-57,-37,-38,-39,-40,-41,-42,-43,-45,-74,89,89,-44,-82,-46,-47,-48,-49,-50,89,84,-58,124,-118,-119,-136,-137,-122,-123,-126,-129,-132,89,89,89,-102,124,-83,89,89,89,84,-77,-60,-61,-86,-101,-110,89,89,89,-70,-133,-134,-78,-120,-121,-124,-125,-127,-128,-130,-131,-89,89,-90,-92,-104,89,-105,-111,-112,-71,-95,84,-96,89,84,-72,-106,-107,]),'IF':([0,22,23,24,25,30,32,33,34,35,36,37,38,42,43,44,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,98,105,106,107,108,111,112,113,114,115,116,117,118,119,120,123,125,144,148,151,152,154,155,156,157,159,161,163,170,175,186,190,201,202,204,206,207,219,221,222,224,225,226,227,228,229,230,231,232,233,236,239,240,242,243,244,245,247,252,253,257,259,261,262,],[26,-53,-51,-52,26,-54,-113,-114,-115,-116,-117,-84,-85,-55,-56,-135,-21,26,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-57,-54,-56,-57,-73,-138,-59,-62,-63,-57,-37,-38,-39,-40,-41,-42,-43,-45,-74,-44,-82,26,-58,-118,-119,-136,-137,-122,-123,-126,-129,-132,-102,-83,26,-77,-60,-61,-86,-101,-110,-70,-133,-134,-78,-120,-121,-124,-125,-127,-128,-130,-131,-89,-90,-92,-104,-105,-111,-112,-71,-95,26,-96,26,-72,-106,-107,]),'WHILE':([0,22,23,24,25,30,32,33,34,35,36,37,38,42,43,44,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,98,105,106,107,108,111,112,113,114,115,116,117,118,119,120,123,125,144,148,151,152,154,155,156,157,159,161,163,170,175,186,190,201,202,204,206,207,219,221,222,224,225,226,227,228,229,230,231,232,233,236,239,240,242,243,244,245,247,252,253,257,259,261,262,],[27,-53,-51,-52,27,-54,-113,-114,-115,-116,-117,-84,-85,-55,-56,-135,-21,27,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-57,-54,-56,-57,-73,-138,-59,-62,-63,-57,-37,-38,-39,-40,-41,-42,-43,-45,-74,-44,-82,27,-58,-118,-119,-136,-137,-122,-123,-126,-129,-132,-102,-83,27,-77,-60,-61,-86,-101,-110,-70,-133,-134,-78,-120,-121,-124,-125,-127,-128,-130,-131,-89,-90,-92,-104,-105,-111,-112,-71,27,27,-96,27,-72,-106,-107,]),'FOR':([0,22,23,24,25,30,32,33,34,35,36,37,38,42,43,44,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,98,105,106,107,108,111,112,113,114,115,116,117,118,119,120,123,125,144,148,151,152,154,155,156,157,159,161,163,170,175,186,190,201,202,204,206,207,219,221,222,224,225,226,227,228,229,230,231,232,233,236,239,240,242,243,244,245,247,252,253,257,259,261,262,],[29,-53,-51,-52,29,-54,-113,-114,-115,-116,-117,-84,-85,-55,-56,-135,-21,29,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-57,-54,-56,-57,-73,-138,-59,-62,-63,-57,-37,-38,-39,-40,-41,-42,-43,-45,-74,-44,-82,29,-58,-118,-119,-136,-137,-122,-123,-126,-129,-132,-102,-83,29,-77,-60,-61,-86,-101,-110,-70,-133,-134,-78,-120,-121,-124,-125,-127,-128,-130,-131,-89,-90,-92,-104,-105,-111,-112,-71,-95,29,-96,29,-72,29,-107,]),'PUTS':([0,22,23,24,25,30,32,33,34,35,36,37,38,42,43,44,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,98,105,106,107,108,111,112,113,114,115,116,117,118,119,120,123,125,144,148,151,152,154,155,156,157,159,161,163,170,175,186,190,201,202,204,206,207,219,221,222,224,225,226,227,228,229,230,231,232,233,236,239,240,242,243,244,245,247,252,253,257,259,261,262,],[31,-53,-51,-52,31,-54,-113,-114,-115,-116,-117,-84,-85,-55,-56,-135,-21,31,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-57,-54,-56,-57,-73,-138,-59,-62,-63,-57,-37,-38,-39,-40,-41,-42,-43,-45,-74,-44,-82,31,-58,-118,-119,-136,-137,-122,-123,-126,-129,-132,-102,-83,31,-77,-60,-61,-86,-101,-110,-70,-133,-134,-78,-120,-121,-124,-125,-127,-128,-130,-131,-89,-90,-92,-104,-105,-111,-112,-71,-95,31,-96,31,-72,-106,-107,]),'TRUE':([0,22,23,24,25,26,28,30,32,33,34,35,36,37,38,42,43,44,45,46,47,48,49,50,51,54,57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,90,91,98,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,140,144,148,151,152,154,155,156,157,159,161,163,164,165,166,170,175,178,186,190,201,202,204,206,207,210,211,219,221,222,224,225,226,227,228,229,230,231,232,233,234,236,239,240,242,243,244,245,247,252,253,255,257,259,261,262,],[37,-53,-51,-52,37,37,37,-54,-113,-114,-115,-116,-117,-84,-85,-55,-56,-135,37,37,37,-64,-65,-66,-67,37,37,37,-21,37,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-57,-54,-56,-57,37,37,-73,-138,-59,-62,-63,-68,-69,-57,-37,-38,-39,-40,-41,-42,-43,-45,-74,37,-44,-82,37,37,-58,-118,-119,-136,-137,-122,-123,-126,-129,-132,37,37,37,-102,-83,37,37,-77,-60,-61,-86,-101,-110,37,37,-70,-133,-134,-78,-120,-121,-124,-125,-127,-128,-130,-131,-89,37,-90,-92,-104,-105,-111,-112,-71,-95,37,-96,37,37,-72,-106,-107,]),'FALSE':([0,22,23,24,25,26,28,30,32,33,34,35,36,37,38,42,43,44,45,46,47,48,49,50,51,54,57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,90,91,98,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,140,144,148,151,152,154,155,156,157,159,161,163,164,165,166,170,175,178,186,190,201,202,204,206,207,210,211,219,221,222,224,225,226,227,228,229,230,231,232,233,234,236,239,240,242,243,244,245,247,252,253,255,257,259,261,262,],[38,-53,-51,-52,38,38,38,-54,-113,-114,-115,-116,-117,-84,-85,-55,-56,-135,38,38,38,-64,-65,-66,-67,38,38,38,-21,38,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-57,-54,-56,-57,38,38,-73,-138,-59,-62,-63,-68,-69,-57,-37,-38,-39,-40,-41,-42,-43,-45,-74,38,-44,-82,38,38,-58,-118,-119,-136,-137,-122,-123,-126,-129,-132,38,38,38,-102,-83,38,38,-77,-60,-61,-86,-101,-110,38,38,-70,-133,-134,-78,-120,-121,-124,-125,-127,-128,-130,-131,-89,38,-90,-92,-104,-105,-111,-112,-71,-95,38,-96,38,38,-72,-106,-107,]),'DEF':([0,],[39,]),'LPAR':([0,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,42,43,44,45,46,47,48,49,50,51,54,55,57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,90,91,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,129,130,131,132,133,134,135,136,137,138,140,144,148,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,170,175,177,178,181,182,186,190,193,201,202,204,206,207,208,210,211,219,221,222,224,225,226,227,228,229,230,231,232,233,234,236,239,240,241,242,243,244,245,247,252,253,255,257,259,261,262,],[28,56,-53,-51,-52,28,90,91,28,-54,90,-113,-114,-115,-116,-117,-84,-85,-55,-56,-135,90,90,90,-64,-65,-66,-67,28,90,90,90,-21,28,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,56,-54,-56,-57,90,90,-73,150,153,158,160,162,-138,-59,-62,-63,-68,-69,56,-37,-38,-39,-40,-41,-42,-43,-45,-74,90,90,-44,-82,178,179,180,181,182,-46,-47,-48,-49,-50,90,28,-58,-118,-119,193,-136,-137,-122,-123,193,-126,193,-129,193,-132,90,90,90,-102,-83,211,90,90,90,28,-77,193,-60,-61,-86,-101,-110,90,90,90,-70,-133,-134,-78,-120,-121,-124,-125,-127,-128,-130,-131,-89,90,-90,-92,-104,90,-105,-111,-112,-71,-95,28,-96,90,28,-72,-106,-107,]),'NUMBER':([0,22,23,24,25,26,28,30,31,32,33,34,35,36,37,38,41,42,43,44,45,46,47,48,49,50,51,54,55,57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,90,91,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,134,135,136,137,138,140,144,148,149,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,170,175,178,179,180,181,182,186,187,188,190,193,201,202,204,206,207,208,210,211,219,221,222,224,225,226,227,228,229,230,231,232,233,234,236,239,240,241,242,243,244,245,247,248,252,253,255,257,259,261,262,],[30,-53,-51,-52,30,87,96,-54,87,-113,-114,-115,-116,-117,-84,-85,105,-55,-56,-135,87,87,87,-64,-65,-66,-67,30,87,87,87,-21,30,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-57,-54,-56,-57,87,87,-73,155,155,155,155,155,-138,-59,-62,-63,-68,-69,-57,-37,-38,-39,-40,-41,-42,-43,-45,-74,87,87,-44,-82,-46,-47,-48,-49,-50,87,30,-58,189,-118,-119,155,-136,-137,-122,-123,155,-126,155,-129,155,-132,87,87,87,-102,-83,87,214,215,87,87,30,155,155,-77,155,-60,-61,-86,-101,-110,87,87,87,-70,-133,-134,-78,-120,-121,-124,-125,-127,-128,-130,-131,-89,87,-90,-92,-104,87,-105,-111,-112,-71,-95,254,30,-96,87,30,-72,-106,-107,]),'STRING':([0,22,23,24,25,26,28,30,31,32,33,34,35,36,37,38,42,43,44,45,46,47,48,49,50,51,54,55,57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,90,91,98,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,134,135,136,137,138,140,144,148,151,152,154,155,156,157,159,161,163,164,165,166,170,175,178,181,182,186,190,201,202,204,206,207,208,210,211,219,221,222,224,225,226,227,228,229,230,231,232,233,234,236,239,240,241,242,243,244,245,247,252,253,255,257,259,261,262,],[42,-53,-51,-52,42,42,42,-54,42,-113,-114,-115,-116,-117,-84,-85,-55,-56,-135,42,42,42,-64,-65,-66,-67,42,42,42,42,-21,42,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-57,-54,-56,-57,42,42,-73,-138,-59,-62,-63,-68,-69,-57,-37,-38,-39,-40,-41,-42,-43,-45,-74,42,42,-44,-82,-46,-47,-48,-49,-50,42,42,-58,-118,-119,-136,-137,-122,-123,-126,-129,-132,42,42,42,-102,-83,42,42,42,42,-77,-60,-61,-86,-101,-110,42,42,42,-70,-133,-134,-78,-120,-121,-124,-125,-127,-128,-130,-131,-89,42,-90,-92,-104,42,-105,-111,-112,-71,-95,42,-96,42,42,-72,-106,-107,]),'FLOAT':([0,22,23,24,25,26,28,30,31,32,33,34,35,36,37,38,42,43,44,45,46,47,48,49,50,51,54,55,57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,90,91,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,134,135,136,137,138,140,144,148,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,170,175,178,181,182,186,187,188,190,193,201,202,204,206,207,208,210,211,219,221,222,224,225,226,227,228,229,230,231,232,233,234,236,239,240,241,242,243,244,245,247,252,253,255,257,259,261,262,],[43,-53,-51,-52,43,88,95,-54,88,-113,-114,-115,-116,-117,-84,-85,-55,-56,-135,88,88,88,-64,-65,-66,-67,43,88,88,88,-21,43,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-57,-54,-56,-57,88,88,-73,154,154,154,154,154,-138,-59,-62,-63,-68,-69,-57,-37,-38,-39,-40,-41,-42,-43,-45,-74,88,88,-44,-82,-46,-47,-48,-49,-50,88,43,-58,-118,-119,154,-136,-137,-122,-123,154,-126,154,-129,154,-132,88,88,88,-102,-83,88,88,88,43,154,154,-77,154,-60,-61,-86,-101,-110,88,88,88,-70,-133,-134,-78,-120,-121,-124,-125,-127,-128,-130,-131,-89,88,-90,-92,-104,88,-105,-111,-112,-71,-95,43,-96,88,43,-72,-106,-107,]),'MINUS':([0,21,22,23,24,25,28,30,32,33,34,35,36,37,38,40,42,43,44,54,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,92,95,96,98,100,101,102,103,104,105,106,107,108,111,112,113,114,115,116,117,118,119,120,123,125,144,148,151,152,153,154,155,156,157,158,159,160,161,162,163,170,175,186,187,188,190,192,193,195,197,199,201,202,204,206,207,219,221,222,224,225,226,227,228,229,230,231,232,233,236,239,240,242,243,244,245,247,252,253,257,259,261,262,],[41,60,-53,-51,-52,41,41,-54,-113,-114,-115,-116,-117,-84,-85,101,-55,-56,-135,41,-21,41,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,60,-54,-56,-57,101,-136,-137,-73,41,41,41,41,41,-138,-59,-62,-63,-57,-37,-38,-39,-40,-41,-42,-43,-45,-74,-44,-82,41,-58,101,-119,41,-136,-137,101,-123,41,-126,41,-129,41,-132,-102,-83,41,41,41,-77,101,41,101,101,101,-60,-61,-86,-101,-110,-70,-133,-134,-78,-120,-121,-124,-125,-127,-128,-130,-131,-89,-90,-92,-104,-105,-111,-112,-71,-95,41,-96,41,-72,-106,-107,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,30,32,33,34,35,36,37,38,42,43,44,87,88,89,98,105,106,107,108,111,112,113,114,115,116,117,118,119,120,123,125,139,148,151,152,154,155,156,157,159,161,163,170,175,184,201,202,204,206,207,218,219,221,222,225,226,227,228,229,230,231,232,233,236,238,239,240,242,243,244,245,247,250,253,259,261,262,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-57,-53,-51,-52,-54,-113,-114,-115,-116,-117,-84,-85,-55,-56,-135,-54,-56,-57,-73,-138,-59,-62,-63,-57,-37,-38,-39,-40,-41,-42,-43,-45,-74,-44,-82,-79,-58,-118,-119,-136,-137,-122,-123,-126,-129,-132,-102,-83,-80,-60,-61,-86,-101,-110,-81,-70,-133,-134,-120,-121,-124,-125,-127,-128,-130,-131,-89,-90,-94,-92,-104,-105,-111,-112,-71,-95,-93,-96,-72,-106,-107,]),'AND':([3,21,22,23,24,30,37,38,42,43,66,84,86,87,88,89,106,111,112,148,],[46,-57,-53,-51,-52,-54,-84,-85,-55,-56,46,-57,46,-54,-56,-57,164,-57,46,-58,]),'OR':([3,21,22,23,24,30,37,38,42,43,66,84,86,87,88,89,106,111,112,148,],[47,-57,-53,-51,-52,-54,-84,-85,-55,-56,47,-57,47,-54,-56,-57,165,-57,47,-58,]),'GREATER':([3,21,22,23,24,30,37,38,42,43,66,84,86,87,88,89,111,112,148,205,],[48,-57,-53,-51,-52,-54,-84,-85,-55,-56,48,-57,48,-54,-56,-57,-57,48,-58,234,]),'GREATER_OR_EQUAL':([3,21,22,23,24,30,37,38,42,43,66,84,86,87,88,89,111,112,148,],[49,-57,-53,-51,-52,-54,-84,-85,-55,-56,49,-57,49,-54,-56,-57,-57,49,-58,]),'MINOR':([3,21,22,23,24,30,37,38,42,43,66,84,86,87,88,89,111,112,148,],[50,-57,-53,-51,-52,-54,-84,-85,-55,-56,50,-57,50,-54,-56,-57,-57,50,-58,]),'MINOR_OR_EQUAL':([3,21,22,23,24,30,37,38,42,43,66,84,86,87,88,89,111,112,148,],[51,-57,-53,-51,-52,-54,-84,-85,-55,-56,51,-57,51,-54,-56,-57,-57,51,-58,]),'ASIGN':([3,21,22,23,24,30,37,38,42,43,52,53,59,60,61,62,63,66,84,86,87,88,89,111,112,148,168,176,],[52,54,-53,-51,-52,-54,-84,-85,-55,-56,109,110,134,135,136,137,138,52,54,52,-54,-56,-57,-57,52,-58,205,210,]),'NOT':([3,21,22,23,24,30,37,38,42,43,66,84,86,87,88,89,111,112,148,],[53,-57,-53,-51,-52,-54,-84,-85,-55,-56,53,-57,53,-54,-56,-57,-57,53,-58,]),'LCOR':([21,54,84,111,],[57,122,57,166,]),'POINT':([21,84,189,223,],[58,143,223,248,]),'PLUS':([21,30,40,43,44,84,92,95,96,105,151,154,155,156,192,195,197,199,],[59,-137,100,-136,-135,59,100,-136,-137,-138,100,-136,-137,100,100,100,100,100,]),'TIMES':([21,30,40,43,44,84,92,95,96,105,151,154,155,156,192,195,197,199,],[61,-137,102,-136,-135,61,102,-136,-137,-138,102,-136,-137,102,102,102,102,102,]),'DIVIDE':([21,30,40,43,44,84,92,95,96,105,151,154,155,156,192,195,197,199,],[62,-137,103,-136,-135,62,103,-136,-137,-138,103,-136,-137,103,103,103,103,103,]),'EXPONENTIATION':([21,30,40,43,44,84,92,95,96,105,146,147,151,154,155,156,192,195,197,199,225,226,227,228,],[63,-137,104,-136,-135,63,104,-136,-137,-138,187,188,104,-136,-137,104,104,104,104,104,187,188,187,188,]),'END':([22,23,24,30,32,33,34,35,36,37,38,42,43,44,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,98,105,106,107,108,111,112,113,114,115,116,117,118,119,120,123,125,141,142,148,151,152,154,155,156,157,159,161,163,170,175,183,185,201,202,204,206,207,219,220,221,222,225,226,227,228,229,230,231,232,233,236,239,240,242,243,244,245,247,253,256,259,260,261,262,],[-53,-51,-52,-54,-113,-114,-115,-116,-117,-84,-85,-55,-56,-135,139,-21,-97,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-57,-54,-56,-57,-73,-138,-59,-62,-63,-57,-37,-38,-39,-40,-41,-42,-43,-45,-74,-44,-82,184,-98,-58,-118,-119,-136,-137,-122,-123,-126,-129,-132,-102,-83,218,219,-60,-61,-86,-101,-110,-70,247,-133,-134,-120,-121,-124,-125,-127,-128,-130,-131,-89,-90,-92,-104,-105,-111,-112,-71,-95,-96,259,-72,261,-106,-107,]),'RETURN':([22,23,24,25,30,32,33,34,35,36,37,38,42,43,44,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,98,105,106,107,108,111,112,113,114,115,116,117,118,119,120,123,125,142,148,151,152,154,155,156,157,159,161,163,170,175,190,201,202,204,206,207,219,221,222,224,225,226,227,228,229,230,231,232,233,236,239,240,242,243,244,245,247,253,259,261,262,],[-53,-51,-52,65,-54,-113,-114,-115,-116,-117,-84,-85,-55,-56,-135,140,-21,-97,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-57,-54,-56,-57,-73,-138,-59,-62,-63,-57,-37,-38,-39,-40,-41,-42,-43,-45,-74,-44,-82,-98,-58,-118,-119,-136,-137,-122,-123,-126,-129,-132,-102,-83,-77,-60,-61,-86,-101,-110,-70,-133,-134,-78,-120,-121,-124,-125,-127,-128,-130,-131,-89,-90,-92,-104,-105,-111,-112,-71,-95,-96,-72,-106,-107,]),'RPAR':([22,23,24,32,33,34,35,36,37,38,42,44,56,87,88,89,92,93,94,95,96,105,106,107,108,124,126,145,148,150,151,152,154,155,156,157,159,161,163,191,192,194,195,196,197,198,199,200,201,202,209,211,212,213,215,216,217,221,222,225,226,227,228,229,230,231,232,237,251,],[-53,-51,-52,-113,-114,-115,-116,-117,-84,-85,-55,-135,125,-54,-56,-57,146,147,148,-56,-54,-138,-59,-62,-63,-75,175,186,-58,190,-118,-119,-136,-137,-122,-123,-126,-129,-132,224,225,226,227,228,229,230,231,232,-60,-61,-76,238,239,240,242,243,244,-133,-134,-120,-121,-124,-125,-127,-128,-130,-131,250,-103,]),'D_POINT':([22,23,24,37,38,42,85,87,88,89,106,107,108,148,201,202,246,],[-53,-51,-52,-84,-85,-55,144,-54,-56,-57,-59,-62,-63,-58,-60,-61,252,]),'RCOR':([22,23,24,37,38,42,87,88,89,122,127,148,169,171,172,173,203,235,],[-53,-51,-52,-84,-85,-55,-54,-56,-57,170,176,-58,206,207,-99,-108,233,-100,]),'COMMA':([22,23,24,37,38,42,87,88,89,124,148,172,214,249,],[-53,-51,-52,-84,-85,-55,-54,-56,-57,174,-58,208,241,255,]),'RKEY':([22,23,24,37,38,42,87,88,89,148,167,249,258,],[-53,-51,-52,-84,-85,-55,-54,-56,-57,-58,204,-87,-88,]),'GETS':([54,],[120,]),'LKEY':([54,],[121,]),'DELETE':([58,143,],[129,129,]),'INSERT':([58,143,],[130,130,]),'DELETE_AT':([58,143,],[131,131,]),'SEARCH':([58,143,],[132,132,]),'PUSH':([58,143,],[133,133,]),'IN':([97,],[149,]),'':([122,],[173,]),'QUESTION':([128,],[177,]),'ELSE':([219,],[246,]),'DO':([254,],[257,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instrucciones':([0,],[1,]),'asignacion':([0,25,67,144,186,252,257,],[2,68,68,68,68,68,68,]),'expression':([0,25,26,28,45,46,47,54,57,65,67,90,91,121,140,144,164,165,166,178,186,210,211,234,252,255,257,],[3,66,86,94,106,107,108,112,127,141,66,94,86,168,183,66,86,86,203,212,66,236,237,249,66,168,66,]),'funciones':([0,],[4,]),'comparacion':([0,25,26,54,67,91,144,164,165,186,252,257,],[5,69,85,113,69,145,69,201,202,69,69,69,]),'condicional':([0,25,67,144,186,252,257,],[6,70,70,70,70,70,70,]),'while':([0,25,67,144,186,247,252,257,],[7,73,73,73,73,253,73,73,]),'for':([0,25,67,144,186,252,257,261,],[8,72,72,72,72,72,72,262,]),'impresion':([0,25,67,144,186,252,257,],[9,71,71,71,71,71,71,]),'input':([0,25,67,144,186,252,257,],[10,74,74,74,74,74,74,]),'callFuncion':([0,25,54,67,144,186,252,257,],[11,75,114,75,75,75,75,75,]),'addValueHash':([0,25,67,144,186,252,257,],[12,76,76,76,76,76,76,]),'modValueHash':([0,25,67,144,186,252,257,],[13,77,77,77,77,77,77,]),'deleteValueHash':([0,25,67,144,186,252,257,],[14,78,78,78,78,78,78,]),'insertArray':([0,25,67,144,186,252,257,],[15,79,79,79,79,79,79,]),'deleteArray':([0,25,67,144,186,252,257,],[16,80,80,80,80,80,80,]),'searchStack':([0,25,67,144,186,252,257,],[17,82,82,82,82,82,82,]),'pushStack':([0,25,67,144,186,252,257,],[18,81,81,81,81,81,81,]),'metodoBoleano':([0,],[19,]),'opMatematicas':([0,25,28,54,67,100,101,144,153,158,160,162,186,193,252,257,],[20,83,93,119,83,152,157,83,194,196,198,200,83,93,83,83,]),'factor':([0,25,26,28,31,45,46,47,54,55,57,65,67,90,91,121,122,140,144,164,165,166,178,181,182,186,208,210,211,234,241,252,255,257,],[22,22,22,22,98,22,22,22,22,123,22,22,22,22,22,22,172,22,22,22,22,22,22,216,217,22,172,22,22,22,251,22,22,22,]),'term':([0,25,26,28,45,46,47,54,57,65,67,90,91,121,140,144,164,165,166,178,186,210,211,234,252,255,257,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'boleano':([0,25,26,28,45,46,47,54,57,65,67,90,91,121,140,144,164,165,166,178,186,210,211,234,252,255,257,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'encabezado':([0,],[25,]),'suma':([0,25,28,54,67,100,101,144,153,158,160,162,186,193,252,257,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'resta':([0,25,28,54,67,100,101,144,153,158,160,162,186,193,252,257,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'multiplicacion':([0,25,28,54,67,100,101,144,153,158,160,162,186,193,252,257,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'division':([0,25,28,54,67,100,101,144,153,158,160,162,186,193,252,257,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'exponenciacion':([0,25,28,54,67,100,101,144,153,158,160,162,186,193,252,257,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'operadores':([0,25,28,54,67,100,101,102,103,104,144,153,158,160,162,186,187,188,193,252,257,],[40,40,92,40,40,151,156,159,161,163,40,192,195,197,199,40,221,222,92,40,40,]),'enteros':([0,25,28,54,67,100,101,102,103,104,144,153,158,160,162,186,187,188,193,252,257,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'comparador':([3,66,86,112,],[45,45,45,45,]),'tipo_asignacion':([21,84,],[55,55,]),'repCuerpo':([25,67,144,186,252,257,],[64,142,185,220,256,260,]),'cuerpo':([25,67,144,186,252,257,],[67,67,67,67,67,67,]),'diccionario':([54,],[115,]),'getValueHash':([54,],[116,]),'array':([54,],[117,]),'stack':([54,],[118,]),'parametros':([56,150,174,],[126,191,209,]),'cuerpoHash':([121,255,],[167,258,]),'parametrosA':([122,208,],[169,235,]),'vacio':([122,],[171,]),'argumentosA':([179,],[213,]),'cond_else':([219,],[245,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> instrucciones","S'",1,None,None,None),
  ('instrucciones -> asignacion','instrucciones',1,'p_instrucciones','sintactico.py',6),
  ('instrucciones -> expression','instrucciones',1,'p_instrucciones','sintactico.py',7),
  ('instrucciones -> funciones','instrucciones',1,'p_instrucciones','sintactico.py',8),
  ('instrucciones -> comparacion','instrucciones',1,'p_instrucciones','sintactico.py',9),
  ('instrucciones -> condicional','instrucciones',1,'p_instrucciones','sintactico.py',10),
  ('instrucciones -> while','instrucciones',1,'p_instrucciones','sintactico.py',11),
  ('instrucciones -> for','instrucciones',1,'p_instrucciones','sintactico.py',12),
  ('instrucciones -> impresion','instrucciones',1,'p_instrucciones','sintactico.py',13),
  ('instrucciones -> input','instrucciones',1,'p_instrucciones','sintactico.py',14),
  ('instrucciones -> callFuncion','instrucciones',1,'p_instrucciones','sintactico.py',15),
  ('instrucciones -> addValueHash','instrucciones',1,'p_instrucciones','sintactico.py',16),
  ('instrucciones -> modValueHash','instrucciones',1,'p_instrucciones','sintactico.py',17),
  ('instrucciones -> deleteValueHash','instrucciones',1,'p_instrucciones','sintactico.py',18),
  ('instrucciones -> insertArray','instrucciones',1,'p_instrucciones','sintactico.py',19),
  ('instrucciones -> deleteArray','instrucciones',1,'p_instrucciones','sintactico.py',20),
  ('instrucciones -> searchStack','instrucciones',1,'p_instrucciones','sintactico.py',21),
  ('instrucciones -> pushStack','instrucciones',1,'p_instrucciones','sintactico.py',22),
  ('instrucciones -> metodoBoleano','instrucciones',1,'p_instrucciones','sintactico.py',23),
  ('instrucciones -> opMatematicas','instrucciones',1,'p_instrucciones','sintactico.py',24),
  ('cuerpo -> asignacion','cuerpo',1,'p_body','sintactico.py',28),
  ('cuerpo -> expression','cuerpo',1,'p_body','sintactico.py',29),
  ('cuerpo -> comparacion','cuerpo',1,'p_body','sintactico.py',30),
  ('cuerpo -> condicional','cuerpo',1,'p_body','sintactico.py',31),
  ('cuerpo -> impresion','cuerpo',1,'p_body','sintactico.py',32),
  ('cuerpo -> for','cuerpo',1,'p_body','sintactico.py',33),
  ('cuerpo -> while','cuerpo',1,'p_body','sintactico.py',34),
  ('cuerpo -> input','cuerpo',1,'p_body','sintactico.py',35),
  ('cuerpo -> callFuncion','cuerpo',1,'p_body','sintactico.py',36),
  ('cuerpo -> addValueHash','cuerpo',1,'p_body','sintactico.py',37),
  ('cuerpo -> modValueHash','cuerpo',1,'p_body','sintactico.py',38),
  ('cuerpo -> deleteValueHash','cuerpo',1,'p_body','sintactico.py',39),
  ('cuerpo -> insertArray','cuerpo',1,'p_body','sintactico.py',40),
  ('cuerpo -> deleteArray','cuerpo',1,'p_body','sintactico.py',41),
  ('cuerpo -> pushStack','cuerpo',1,'p_body','sintactico.py',42),
  ('cuerpo -> searchStack','cuerpo',1,'p_body','sintactico.py',43),
  ('cuerpo -> opMatematicas','cuerpo',1,'p_body','sintactico.py',44),
  ('asignacion -> VARIABLE ASIGN expression','asignacion',3,'p_asignacion','sintactico.py',48),
  ('asignacion -> VARIABLE ASIGN comparacion','asignacion',3,'p_asignacion','sintactico.py',49),
  ('asignacion -> VARIABLE ASIGN callFuncion','asignacion',3,'p_asignacion','sintactico.py',50),
  ('asignacion -> VARIABLE ASIGN diccionario','asignacion',3,'p_asignacion','sintactico.py',51),
  ('asignacion -> VARIABLE ASIGN getValueHash','asignacion',3,'p_asignacion','sintactico.py',52),
  ('asignacion -> VARIABLE ASIGN array','asignacion',3,'p_asignacion','sintactico.py',53),
  ('asignacion -> VARIABLE ASIGN stack','asignacion',3,'p_asignacion','sintactico.py',54),
  ('asignacion -> VARIABLE tipo_asignacion factor','asignacion',3,'p_asignacion','sintactico.py',55),
  ('asignacion -> VARIABLE ASIGN opMatematicas','asignacion',3,'p_asignacion','sintactico.py',56),
  ('tipo_asignacion -> PLUS ASIGN','tipo_asignacion',2,'p_tipo_asignacion','sintactico.py',59),
  ('tipo_asignacion -> MINUS ASIGN','tipo_asignacion',2,'p_tipo_asignacion','sintactico.py',60),
  ('tipo_asignacion -> TIMES ASIGN','tipo_asignacion',2,'p_tipo_asignacion','sintactico.py',61),
  ('tipo_asignacion -> DIVIDE ASIGN','tipo_asignacion',2,'p_tipo_asignacion','sintactico.py',62),
  ('tipo_asignacion -> EXPONENTIATION ASIGN','tipo_asignacion',2,'p_tipo_asignacion','sintactico.py',63),
  ('expression -> term','expression',1,'p_expression_term','sintactico.py',68),
  ('expression -> boleano','expression',1,'p_expression_term','sintactico.py',69),
  ('term -> factor','term',1,'p_term_factor','sintactico.py',73),
  ('factor -> NUMBER','factor',1,'p_factor_num','sintactico.py',76),
  ('factor -> STRING','factor',1,'p_factor_num','sintactico.py',77),
  ('factor -> FLOAT','factor',1,'p_factor_num','sintactico.py',78),
  ('factor -> VARIABLE','factor',1,'p_factor_num','sintactico.py',79),
  ('factor -> LPAR expression RPAR','factor',3,'p_factor_expr','sintactico.py',83),
  ('comparacion -> expression comparador expression','comparacion',3,'p_comparacion','sintactico.py',87),
  ('comparacion -> expression comparador expression AND comparacion','comparacion',5,'p_comparacion','sintactico.py',88),
  ('comparacion -> expression comparador expression OR comparacion','comparacion',5,'p_comparacion','sintactico.py',89),
  ('comparacion -> expression AND expression','comparacion',3,'p_comparacion','sintactico.py',90),
  ('comparacion -> expression OR expression','comparacion',3,'p_comparacion','sintactico.py',91),
  ('comparador -> GREATER','comparador',1,'p_comparador','sintactico.py',96),
  ('comparador -> GREATER_OR_EQUAL','comparador',1,'p_comparador','sintactico.py',97),
  ('comparador -> MINOR','comparador',1,'p_comparador','sintactico.py',98),
  ('comparador -> MINOR_OR_EQUAL','comparador',1,'p_comparador','sintactico.py',99),
  ('comparador -> ASIGN ASIGN','comparador',2,'p_comparador','sintactico.py',100),
  ('comparador -> NOT ASIGN','comparador',2,'p_comparador','sintactico.py',101),
  ('condicional -> IF comparacion D_POINT repCuerpo END','condicional',5,'p_cond_if','sintactico.py',106),
  ('condicional -> IF comparacion D_POINT repCuerpo END cond_else','condicional',6,'p_cond_if','sintactico.py',107),
  ('cond_else -> ELSE D_POINT repCuerpo END','cond_else',4,'p_cond_else','sintactico.py',111),
  ('impresion -> PUTS factor','impresion',2,'p_puts','sintactico.py',115),
  ('input -> VARIABLE ASIGN GETS','input',3,'p_gets','sintactico.py',118),
  ('parametros -> VARIABLE','parametros',1,'p_par_function','sintactico.py',122),
  ('parametros -> VARIABLE COMMA parametros','parametros',3,'p_par_function','sintactico.py',123),
  ('encabezado -> DEF VARIABLE LPAR RPAR','encabezado',4,'p_header_function','sintactico.py',127),
  ('encabezado -> DEF VARIABLE LPAR parametros RPAR','encabezado',5,'p_header_function','sintactico.py',128),
  ('funciones -> encabezado repCuerpo END','funciones',3,'p_function','sintactico.py',132),
  ('funciones -> encabezado RETURN expression END','funciones',4,'p_function','sintactico.py',133),
  ('funciones -> encabezado repCuerpo RETURN expression END','funciones',5,'p_function','sintactico.py',134),
  ('callFuncion -> VARIABLE LPAR RPAR','callFuncion',3,'p_call_function','sintactico.py',138),
  ('callFuncion -> VARIABLE LPAR parametros RPAR','callFuncion',4,'p_call_function','sintactico.py',139),
  ('boleano -> TRUE','boleano',1,'p_boolean','sintactico.py',143),
  ('boleano -> FALSE','boleano',1,'p_boolean','sintactico.py',144),
  ('diccionario -> LKEY cuerpoHash RKEY','diccionario',3,'p_hash','sintactico.py',149),
  ('cuerpoHash -> expression ASIGN GREATER expression','cuerpoHash',4,'p_body_hash','sintactico.py',152),
  ('cuerpoHash -> expression ASIGN GREATER expression COMMA cuerpoHash','cuerpoHash',6,'p_body_hash','sintactico.py',153),
  ('getValueHash -> VARIABLE LCOR expression RCOR','getValueHash',4,'p_get_hash','sintactico.py',157),
  ('addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression','addValueHash',6,'p_add_hash','sintactico.py',160),
  ('modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression','modValueHash',6,'p_mod_hash','sintactico.py',163),
  ('deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR','deleteValueHash',6,'p_del_hash','sintactico.py',166),
  ('metodoBoleano -> VARIABLE POINT VARIABLE QUESTION LPAR expression RPAR','metodoBoleano',7,'p_boolean_method','sintactico.py',170),
  ('metodoBoleano -> VARIABLE POINT VARIABLE QUESTION LPAR RPAR','metodoBoleano',6,'p_boolean_method','sintactico.py',171),
  ('while -> WHILE LPAR comparacion RPAR repCuerpo END','while',6,'p_while','sintactico.py',179),
  ('while -> WHILE LPAR comparacion RPAR repCuerpo END while','while',7,'p_while','sintactico.py',180),
  ('repCuerpo -> cuerpo','repCuerpo',1,'p_repCuerpo','sintactico.py',183),
  ('repCuerpo -> cuerpo repCuerpo','repCuerpo',2,'p_repCuerpo','sintactico.py',184),
  ('parametrosA -> factor','parametrosA',1,'p_parA_function','sintactico.py',189),
  ('parametrosA -> factor COMMA parametrosA','parametrosA',3,'p_parA_function','sintactico.py',190),
  ('array -> LCOR parametrosA RCOR','array',3,'p_array','sintactico.py',193),
  ('array -> LCOR RCOR','array',2,'p_array','sintactico.py',194),
  ('argumentosA -> NUMBER COMMA factor','argumentosA',3,'p_argumentos_array','sintactico.py',198),
  ('insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR','insertArray',6,'p_insert_array','sintactico.py',201),
  ('deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR','deleteArray',6,'p_delete_array','sintactico.py',205),
  ('for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END','for',10,'p_for','sintactico.py',213),
  ('for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for','for',11,'p_for','sintactico.py',214),
  ('vacio -> ','vacio',1,'p_vacio','sintactico.py',218),
  ('stack -> LCOR parametrosA RCOR','stack',3,'p_stack','sintactico.py',220),
  ('stack -> LCOR vacio RCOR','stack',3,'p_stack','sintactico.py',221),
  ('searchStack -> VARIABLE POINT SEARCH LPAR factor RPAR','searchStack',6,'p_search_stack','sintactico.py',224),
  ('pushStack -> VARIABLE POINT PUSH LPAR factor RPAR','pushStack',6,'p_push_stack','sintactico.py',227),
  ('opMatematicas -> suma','opMatematicas',1,'p_opMatematicas','sintactico.py',242),
  ('opMatematicas -> resta','opMatematicas',1,'p_opMatematicas','sintactico.py',243),
  ('opMatematicas -> multiplicacion','opMatematicas',1,'p_opMatematicas','sintactico.py',244),
  ('opMatematicas -> division','opMatematicas',1,'p_opMatematicas','sintactico.py',245),
  ('opMatematicas -> exponenciacion','opMatematicas',1,'p_opMatematicas','sintactico.py',246),
  ('suma -> operadores PLUS operadores','suma',3,'p_suma','sintactico.py',250),
  ('suma -> operadores PLUS opMatematicas','suma',3,'p_suma','sintactico.py',251),
  ('suma -> operadores PLUS LPAR operadores RPAR','suma',5,'p_suma','sintactico.py',252),
  ('suma -> operadores PLUS LPAR opMatematicas RPAR','suma',5,'p_suma','sintactico.py',253),
  ('resta -> operadores MINUS operadores','resta',3,'p_resta','sintactico.py',257),
  ('resta -> operadores MINUS opMatematicas','resta',3,'p_resta','sintactico.py',258),
  ('resta -> operadores MINUS LPAR operadores RPAR','resta',5,'p_resta','sintactico.py',259),
  ('resta -> operadores MINUS LPAR opMatematicas RPAR','resta',5,'p_resta','sintactico.py',260),
  ('multiplicacion -> operadores TIMES operadores','multiplicacion',3,'p_multiplicacion','sintactico.py',264),
  ('multiplicacion -> operadores TIMES LPAR operadores RPAR','multiplicacion',5,'p_multiplicacion','sintactico.py',265),
  ('multiplicacion -> operadores TIMES LPAR opMatematicas RPAR','multiplicacion',5,'p_multiplicacion','sintactico.py',266),
  ('division -> operadores DIVIDE operadores','division',3,'p_divicion','sintactico.py',270),
  ('division -> operadores DIVIDE LPAR operadores RPAR','division',5,'p_divicion','sintactico.py',271),
  ('division -> operadores DIVIDE LPAR opMatematicas RPAR','division',5,'p_divicion','sintactico.py',272),
  ('exponenciacion -> operadores EXPONENTIATION operadores','exponenciacion',3,'p_exponenciacion','sintactico.py',276),
  ('exponenciacion -> LPAR operadores RPAR EXPONENTIATION operadores','exponenciacion',5,'p_exponenciacion','sintactico.py',277),
  ('exponenciacion -> LPAR opMatematicas RPAR EXPONENTIATION operadores','exponenciacion',5,'p_exponenciacion','sintactico.py',278),
  ('operadores -> enteros','operadores',1,'p_operadores','sintactico.py',282),
  ('operadores -> FLOAT','operadores',1,'p_operadores','sintactico.py',283),
  ('enteros -> NUMBER','enteros',1,'p_enteros','sintactico.py',287),
  ('enteros -> MINUS NUMBER','enteros',2,'p_enteros','sintactico.py',288),
]
