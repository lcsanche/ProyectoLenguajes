
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASIGN COMMA DEF DELETE DELETE_AT DIVIDE DO D_POINT ELSE END EXPONENTIATION FALSE FLOAT FOR GETS GREATER GREATER_OR_EQUAL IF IN INSERT LCOR LKEY LPAR MINOR MINOR_OR_EQUAL MINUS NOT NUMBER OR PLUS POINT PUSH PUTS QUESTION RCOR RETURN RKEY RPAR SEARCH STRING TIMES TRUE VARIABLE WHILEinstrucciones : asignacion\n                    | expression\n                    | funciones\n                    | comparacion\n                    | condicional\n                    | while\n                    | for\n                    | impresion\n                    | input\n                    | callFuncion\n                    | addValueHash\n                    | modValueHash\n                    | deleteValueHash\n                    | insertArray\n                    | deleteArray\n                    | searchStack\n                    | pushStack    \n                    | metodoBoleano    \n                    | opMatematicas \n     cuerpo : asignacion\n                | expression\n                | comparacion\n                | condicional\n                | impresion\n                | for\n                | while\n                | input\n                | callFuncion\n                | addValueHash\n                | modValueHash\n                | deleteValueHash\n                | insertArray\n                | deleteArray\n                | pushStack\n                | searchStack\n    asignacion : VARIABLE ASIGN expression\n                | VARIABLE ASIGN comparacion\n                | VARIABLE ASIGN callFuncion\n                | VARIABLE ASIGN diccionario\n                | VARIABLE ASIGN getValueHash\n                | VARIABLE ASIGN array\n                | VARIABLE ASIGN stack\n                | VARIABLE tipo_asignacion factor\n                | VARIABLE ASIGN opMatematicas\n    tipo_asignacion : PLUS ASIGN\n                        | MINUS ASIGN \n                        | TIMES ASIGN \n                        | DIVIDE ASIGN \n                        | EXPONENTIATION ASIGN \n    expression : term \n                    | boleano\n    term : factorfactor : NUMBER\n                | STRING\n                | FLOAT\n                | VARIABLE\n    factor : LPAR expression RPARcomparacion : expression comparador expression\n                    | expression comparador expression AND comparacion\n                    | expression comparador expression OR comparacion\n                    | expression AND expression\n                    | expression OR expression\n    \n    comparador : GREATER \n                | GREATER_OR_EQUAL\n                | MINOR\n                | MINOR_OR_EQUAL\n                | ASIGN ASIGN\n                | NOT ASIGN\n    impresion : PUTS factorinput : VARIABLE ASIGN GETSboleano : TRUE \n                | FALSE\n    diccionario : LKEY cuerpoHash RKEYcuerpoHash : expression ASIGN GREATER expression\n                    | expression ASIGN GREATER expression COMMA cuerpoHash\n    getValueHash : VARIABLE LCOR expression RCORaddValueHash : VARIABLE LCOR expression RCOR ASIGN expressionmodValueHash : VARIABLE LCOR expression RCOR ASIGN expressiondeleteValueHash : VARIABLE POINT DELETE LPAR expression RPARmetodoBoleano : VARIABLE POINT VARIABLE QUESTION LPAR expression RPAR\n                    | VARIABLE POINT VARIABLE QUESTION LPAR RPAR\n    while : WHILE LPAR comparacion RPAR repCuerpo END\n            | WHILE LPAR comparacion RPAR repCuerpo END while\n    repCuerpo : cuerpo \n                | cuerpo repCuerpo\n     parametrosA : factor\n                    | factor COMMA parametrosA\n    array : LCOR parametrosA RCOR\n             | LCOR RCOR\n    argumentosA : NUMBER COMMA factor\n    insertArray : VARIABLE POINT INSERT LPAR argumentosA RPAR\n    deleteArray : VARIABLE POINT DELETE_AT LPAR NUMBER RPAR\n    for : FOR VARIABLE IN NUMBER POINT POINT NUMBER  DO repCuerpo END\n            | FOR VARIABLE IN NUMBER POINT POINT NUMBER  DO repCuerpo END for\n    vacio : ""stack : LCOR parametrosA RCOR\n            | LCOR vacio RCOR\n    searchStack : VARIABLE POINT SEARCH LPAR factor RPAR\n    pushStack : VARIABLE POINT PUSH LPAR factor RPAR\n     opMatematicas : suma\n                    | resta\n                    | multiplicacion\n                    | division\n                    | exponenciacion\n    suma : VARIABLE PLUS NUMBER\n            | operadores PLUS operadores\n            | operadores PLUS opMatematicas\n            | operadores PLUS LPAR operadores RPAR\n            | operadores PLUS LPAR opMatematicas RPAR\n    resta : VARIABLE MINUS NUMBER \n            | operadores MINUS operadores\n            | operadores MINUS opMatematicas\n            | operadores MINUS LPAR operadores RPAR\n            | operadores MINUS LPAR opMatematicas RPAR\n     multiplicacion : operadores TIMES operadores\n                    | operadores TIMES LPAR operadores RPAR\n                    | operadores TIMES LPAR opMatematicas RPAR\n     division : operadores DIVIDE operadores\n                | operadores DIVIDE LPAR operadores RPAR\n                | operadores DIVIDE LPAR opMatematicas RPAR\n     exponenciacion : operadores EXPONENTIATION operadores\n                    | LPAR operadores RPAR EXPONENTIATION operadores\n                    | LPAR opMatematicas RPAR EXPONENTIATION operadores\n     operadores : enteros\n                | FLOAT  \n     enteros : NUMBER\n                | MINUS NUMBER\n     parametros : VARIABLE\n                    | VARIABLE COMMA parametros\n    encabezado : DEF VARIABLE LPAR RPAR\n                    | DEF VARIABLE LPAR parametros RPAR\n    funciones : encabezado repCuerpo END\n                | encabezado RETURN expression END\n                | encabezado repCuerpo RETURN expression END\n    callFuncion : VARIABLE LPAR RPAR\n                | VARIABLE LPAR parametros RPAR\n    condicional : IF comparacion D_POINT repCuerpo END\n                    | IF comparacion D_POINT repCuerpo END cond_else\n    cond_else : ELSE D_POINT repCuerpo END'
    
_lr_action_items = {'VARIABLE':([0,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,42,43,44,45,46,47,48,49,50,51,54,55,56,57,58,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,89,90,98,100,101,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,134,135,136,137,138,139,140,142,148,152,156,157,158,159,160,161,163,164,165,166,167,168,169,170,171,172,173,177,181,182,185,188,189,193,197,200,208,209,211,213,214,215,217,218,226,228,229,231,232,233,234,235,236,237,238,239,240,241,243,246,247,248,249,250,251,252,254,259,260,262,264,266,268,269,],[21,-52,-50,-51,83,89,96,97,-53,89,-100,-101,-102,-103,-104,-71,-72,99,-54,-55,-124,89,89,89,-63,-64,-65,-66,111,89,124,89,128,89,-21,83,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-56,-53,89,-55,-56,89,-69,162,162,-127,-58,-61,-62,-67,-68,-56,-36,-37,-38,-39,-40,-41,-42,-44,-70,89,89,-43,-135,-105,-45,-110,-46,-47,-48,-49,89,83,-57,124,-106,-107,162,-125,-126,-111,-112,162,-115,162,-118,162,-121,89,89,89,-89,124,-136,89,89,89,83,-130,162,-59,-60,-73,-88,-97,89,89,89,-137,-122,-123,-131,-108,-109,-113,-114,-116,-117,-119,-120,-76,89,-77,-79,-91,89,-92,-98,-99,-138,-82,83,-83,89,83,-139,-93,-94,]),'IF':([0,22,23,24,25,30,32,33,34,35,36,37,38,42,43,44,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,89,98,105,106,107,108,111,112,113,114,115,116,117,118,119,120,123,125,134,136,148,152,157,158,160,161,163,164,166,168,170,177,182,193,197,208,209,211,213,214,226,228,229,231,232,233,234,235,236,237,238,239,240,243,246,247,249,250,251,252,254,259,260,264,266,268,269,],[26,-52,-50,-51,26,-53,-100,-101,-102,-103,-104,-71,-72,-54,-55,-124,-21,26,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-56,-53,-55,-56,-69,-127,-58,-61,-62,-56,-36,-37,-38,-39,-40,-41,-42,-44,-70,-43,-135,-105,-110,26,-57,-106,-107,-125,-126,-111,-112,-115,-118,-121,-89,-136,26,-130,-59,-60,-73,-88,-97,-137,-122,-123,-131,-108,-109,-113,-114,-116,-117,-119,-120,-76,-77,-79,-91,-92,-98,-99,-138,-82,26,-83,26,-139,-93,-94,]),'WHILE':([0,22,23,24,25,30,32,33,34,35,36,37,38,42,43,44,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,89,98,105,106,107,108,111,112,113,114,115,116,117,118,119,120,123,125,134,136,148,152,157,158,160,161,163,164,166,168,170,177,182,193,197,208,209,211,213,214,226,228,229,231,232,233,234,235,236,237,238,239,240,243,246,247,249,250,251,252,254,259,260,264,266,268,269,],[27,-52,-50,-51,27,-53,-100,-101,-102,-103,-104,-71,-72,-54,-55,-124,-21,27,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-56,-53,-55,-56,-69,-127,-58,-61,-62,-56,-36,-37,-38,-39,-40,-41,-42,-44,-70,-43,-135,-105,-110,27,-57,-106,-107,-125,-126,-111,-112,-115,-118,-121,-89,-136,27,-130,-59,-60,-73,-88,-97,-137,-122,-123,-131,-108,-109,-113,-114,-116,-117,-119,-120,-76,-77,-79,-91,-92,-98,-99,-138,27,27,-83,27,-139,-93,-94,]),'FOR':([0,22,23,24,25,30,32,33,34,35,36,37,38,42,43,44,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,89,98,105,106,107,108,111,112,113,114,115,116,117,118,119,120,123,125,134,136,148,152,157,158,160,161,163,164,166,168,170,177,182,193,197,208,209,211,213,214,226,228,229,231,232,233,234,235,236,237,238,239,240,243,246,247,249,250,251,252,254,259,260,264,266,268,269,],[29,-52,-50,-51,29,-53,-100,-101,-102,-103,-104,-71,-72,-54,-55,-124,-21,29,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-56,-53,-55,-56,-69,-127,-58,-61,-62,-56,-36,-37,-38,-39,-40,-41,-42,-44,-70,-43,-135,-105,-110,29,-57,-106,-107,-125,-126,-111,-112,-115,-118,-121,-89,-136,29,-130,-59,-60,-73,-88,-97,-137,-122,-123,-131,-108,-109,-113,-114,-116,-117,-119,-120,-76,-77,-79,-91,-92,-98,-99,-138,-82,29,-83,29,-139,29,-94,]),'PUTS':([0,22,23,24,25,30,32,33,34,35,36,37,38,42,43,44,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,89,98,105,106,107,108,111,112,113,114,115,116,117,118,119,120,123,125,134,136,148,152,157,158,160,161,163,164,166,168,170,177,182,193,197,208,209,211,213,214,226,228,229,231,232,233,234,235,236,237,238,239,240,243,246,247,249,250,251,252,254,259,260,264,266,268,269,],[31,-52,-50,-51,31,-53,-100,-101,-102,-103,-104,-71,-72,-54,-55,-124,-21,31,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-56,-53,-55,-56,-69,-127,-58,-61,-62,-56,-36,-37,-38,-39,-40,-41,-42,-44,-70,-43,-135,-105,-110,31,-57,-106,-107,-125,-126,-111,-112,-115,-118,-121,-89,-136,31,-130,-59,-60,-73,-88,-97,-137,-122,-123,-131,-108,-109,-113,-114,-116,-117,-119,-120,-76,-77,-79,-91,-92,-98,-99,-138,-82,31,-83,31,-139,-93,-94,]),'TRUE':([0,22,23,24,25,26,28,30,32,33,34,35,36,37,38,42,43,44,45,46,47,48,49,50,51,54,57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,89,90,98,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,134,136,142,148,152,157,158,160,161,163,164,166,168,170,171,172,173,177,182,185,193,197,208,209,211,213,214,217,218,226,228,229,231,232,233,234,235,236,237,238,239,240,241,243,246,247,249,250,251,252,254,259,260,262,264,266,268,269,],[37,-52,-50,-51,37,37,37,-53,-100,-101,-102,-103,-104,-71,-72,-54,-55,-124,37,37,37,-63,-64,-65,-66,37,37,37,-21,37,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-56,-53,37,-55,-56,37,-69,-127,-58,-61,-62,-67,-68,-56,-36,-37,-38,-39,-40,-41,-42,-44,-70,37,-43,-135,-105,-110,37,37,-57,-106,-107,-125,-126,-111,-112,-115,-118,-121,37,37,37,-89,-136,37,37,-130,-59,-60,-73,-88,-97,37,37,-137,-122,-123,-131,-108,-109,-113,-114,-116,-117,-119,-120,-76,37,-77,-79,-91,-92,-98,-99,-138,-82,37,-83,37,37,-139,-93,-94,]),'FALSE':([0,22,23,24,25,26,28,30,32,33,34,35,36,37,38,42,43,44,45,46,47,48,49,50,51,54,57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,89,90,98,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,123,125,134,136,142,148,152,157,158,160,161,163,164,166,168,170,171,172,173,177,182,185,193,197,208,209,211,213,214,217,218,226,228,229,231,232,233,234,235,236,237,238,239,240,241,243,246,247,249,250,251,252,254,259,260,262,264,266,268,269,],[38,-52,-50,-51,38,38,38,-53,-100,-101,-102,-103,-104,-71,-72,-54,-55,-124,38,38,38,-63,-64,-65,-66,38,38,38,-21,38,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-56,-53,38,-55,-56,38,-69,-127,-58,-61,-62,-67,-68,-56,-36,-37,-38,-39,-40,-41,-42,-44,-70,38,-43,-135,-105,-110,38,38,-57,-106,-107,-125,-126,-111,-112,-115,-118,-121,38,38,38,-89,-136,38,38,-130,-59,-60,-73,-88,-97,38,38,-137,-122,-123,-131,-108,-109,-113,-114,-116,-117,-119,-120,-76,38,-77,-79,-91,-92,-98,-99,-138,-82,38,-83,38,38,-139,-93,-94,]),'DEF':([0,],[39,]),'LPAR':([0,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,42,43,44,45,46,47,48,49,50,51,54,55,57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,89,90,98,99,100,101,102,103,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,129,130,131,132,133,134,135,136,137,138,139,140,142,148,152,157,158,159,160,161,163,164,165,166,167,168,169,170,171,172,173,177,182,184,185,188,189,193,197,200,208,209,211,213,214,215,217,218,226,228,229,231,232,233,234,235,236,237,238,239,240,241,243,246,247,248,249,250,251,252,254,259,260,262,264,266,268,269,],[28,56,-52,-50,-51,85,85,90,28,-53,85,-100,-101,-102,-103,-104,-71,-72,-54,-55,-124,85,85,85,-63,-64,-65,-66,28,85,85,85,-21,85,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,56,-53,85,-55,-56,85,-69,156,159,165,167,169,-127,-58,-61,-62,-67,-68,56,-36,-37,-38,-39,-40,-41,-42,-44,-70,85,85,-43,-135,185,186,187,188,189,-105,-45,-110,-46,-47,-48,-49,85,85,-57,-106,-107,200,-125,-126,-111,-112,200,-115,200,-118,200,-121,85,85,85,-89,-136,218,85,85,85,85,-130,200,-59,-60,-73,-88,-97,85,85,85,-137,-122,-123,-131,-108,-109,-113,-114,-116,-117,-119,-120,-76,85,-77,-79,-91,85,-92,-98,-99,-138,-82,85,-83,85,85,-139,-93,-94,]),'NUMBER':([0,22,23,24,25,26,28,30,31,32,33,34,35,36,37,38,41,42,43,44,45,46,47,48,49,50,51,54,55,57,59,60,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,89,90,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,134,135,136,137,138,139,140,142,148,152,153,154,155,157,158,159,160,161,163,164,165,166,167,168,169,170,171,172,173,177,182,185,186,187,188,189,193,194,195,197,200,208,209,211,213,214,215,217,218,226,228,229,231,232,233,234,235,236,237,238,239,240,241,243,246,247,248,249,250,251,252,254,255,259,260,262,264,266,268,269,],[30,-52,-50,-51,84,84,95,-53,84,-100,-101,-102,-103,-104,-71,-72,105,-54,-55,-124,84,84,84,-63,-64,-65,-66,30,84,84,134,136,84,-21,84,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-56,-53,84,-55,-56,84,-69,161,161,161,161,161,-127,-58,-61,-62,-67,-68,-56,-36,-37,-38,-39,-40,-41,-42,-44,-70,84,84,-43,-135,-105,-45,-110,-46,-47,-48,-49,84,84,-57,134,136,196,-106,-107,161,-125,-126,-111,-112,161,-115,161,-118,161,-121,84,84,84,-89,-136,84,221,222,84,84,84,161,161,-130,161,-59,-60,-73,-88,-97,84,84,84,-137,-122,-123,-131,-108,-109,-113,-114,-116,-117,-119,-120,-76,84,-77,-79,-91,84,-92,-98,-99,-138,-82,261,84,-83,84,84,-139,-93,-94,]),'STRING':([0,22,23,24,25,26,28,30,31,32,33,34,35,36,37,38,42,43,44,45,46,47,48,49,50,51,54,55,57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,89,90,98,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,134,135,136,137,138,139,140,142,148,152,157,158,160,161,163,164,166,168,170,171,172,173,177,182,185,188,189,193,197,208,209,211,213,214,215,217,218,226,228,229,231,232,233,234,235,236,237,238,239,240,241,243,246,247,248,249,250,251,252,254,259,260,262,264,266,268,269,],[42,-52,-50,-51,42,42,42,-53,42,-100,-101,-102,-103,-104,-71,-72,-54,-55,-124,42,42,42,-63,-64,-65,-66,42,42,42,42,-21,42,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-56,-53,42,-55,-56,42,-69,-127,-58,-61,-62,-67,-68,-56,-36,-37,-38,-39,-40,-41,-42,-44,-70,42,42,-43,-135,-105,-45,-110,-46,-47,-48,-49,42,42,-57,-106,-107,-125,-126,-111,-112,-115,-118,-121,42,42,42,-89,-136,42,42,42,42,-130,-59,-60,-73,-88,-97,42,42,42,-137,-122,-123,-131,-108,-109,-113,-114,-116,-117,-119,-120,-76,42,-77,-79,-91,42,-92,-98,-99,-138,-82,42,-83,42,42,-139,-93,-94,]),'FLOAT':([0,22,23,24,25,26,28,30,31,32,33,34,35,36,37,38,42,43,44,45,46,47,48,49,50,51,54,55,57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,89,90,98,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,125,134,135,136,137,138,139,140,142,148,152,157,158,159,160,161,163,164,165,166,167,168,169,170,171,172,173,177,182,185,188,189,193,194,195,197,200,208,209,211,213,214,215,217,218,226,228,229,231,232,233,234,235,236,237,238,239,240,241,243,246,247,248,249,250,251,252,254,259,260,262,264,266,268,269,],[43,-52,-50,-51,86,86,94,-53,86,-100,-101,-102,-103,-104,-71,-72,-54,-55,-124,86,86,86,-63,-64,-65,-66,43,86,86,86,-21,86,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-56,-53,86,-55,-56,86,-69,160,160,160,160,160,-127,-58,-61,-62,-67,-68,-56,-36,-37,-38,-39,-40,-41,-42,-44,-70,86,86,-43,-135,-105,-45,-110,-46,-47,-48,-49,86,86,-57,-106,-107,160,-125,-126,-111,-112,160,-115,160,-118,160,-121,86,86,86,-89,-136,86,86,86,86,160,160,-130,160,-59,-60,-73,-88,-97,86,86,86,-137,-122,-123,-131,-108,-109,-113,-114,-116,-117,-119,-120,-76,86,-77,-79,-91,86,-92,-98,-99,-138,-82,86,-83,86,86,-139,-93,-94,]),'MINUS':([0,21,28,30,40,43,44,54,83,91,94,95,96,100,101,102,103,104,105,111,157,159,160,161,162,163,165,167,169,194,195,199,200,202,204,206,],[41,60,41,-126,101,-125,-124,41,147,101,-125,-126,154,41,41,41,41,41,-127,154,101,41,-125,-126,154,101,41,41,41,41,41,101,41,101,101,101,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,30,32,33,34,35,36,37,38,42,43,44,84,86,89,98,105,106,107,108,111,112,113,114,115,116,117,118,119,120,123,125,134,136,141,152,157,158,160,161,163,164,166,168,170,177,182,191,208,209,211,213,214,225,226,228,229,232,233,234,235,236,237,238,239,240,243,245,246,247,249,250,251,252,254,257,260,266,268,269,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-56,-52,-50,-51,-53,-100,-101,-102,-103,-104,-71,-72,-54,-55,-124,-53,-55,-56,-69,-127,-58,-61,-62,-56,-36,-37,-38,-39,-40,-41,-42,-44,-70,-43,-135,-105,-110,-132,-57,-106,-107,-125,-126,-111,-112,-115,-118,-121,-89,-136,-133,-59,-60,-73,-88,-97,-134,-137,-122,-123,-108,-109,-113,-114,-116,-117,-119,-120,-76,-77,-81,-79,-91,-92,-98,-99,-138,-82,-80,-83,-139,-93,-94,]),'AND':([3,21,22,23,24,30,37,38,42,43,66,83,84,86,88,89,106,111,112,152,],[46,-56,-52,-50,-51,-53,-71,-72,-54,-55,46,-56,-53,-55,46,-56,171,-56,46,-57,]),'OR':([3,21,22,23,24,30,37,38,42,43,66,83,84,86,88,89,106,111,112,152,],[47,-56,-52,-50,-51,-53,-71,-72,-54,-55,47,-56,-53,-55,47,-56,172,-56,47,-57,]),'GREATER':([3,21,22,23,24,30,37,38,42,43,66,83,84,86,88,89,111,112,152,212,],[48,-56,-52,-50,-51,-53,-71,-72,-54,-55,48,-56,-53,-55,48,-56,-56,48,-57,241,]),'GREATER_OR_EQUAL':([3,21,22,23,24,30,37,38,42,43,66,83,84,86,88,89,111,112,152,],[49,-56,-52,-50,-51,-53,-71,-72,-54,-55,49,-56,-53,-55,49,-56,-56,49,-57,]),'MINOR':([3,21,22,23,24,30,37,38,42,43,66,83,84,86,88,89,111,112,152,],[50,-56,-52,-50,-51,-53,-71,-72,-54,-55,50,-56,-53,-55,50,-56,-56,50,-57,]),'MINOR_OR_EQUAL':([3,21,22,23,24,30,37,38,42,43,66,83,84,86,88,89,111,112,152,],[51,-56,-52,-50,-51,-53,-71,-72,-54,-55,51,-56,-53,-55,51,-56,-56,51,-57,]),'ASIGN':([3,21,22,23,24,30,37,38,42,43,52,53,59,60,61,62,63,66,83,84,86,88,89,111,112,146,147,152,175,183,],[52,54,-52,-50,-51,-53,-71,-72,-54,-55,109,110,135,137,138,139,140,52,54,-53,-55,52,-56,-56,52,135,137,-57,212,217,]),'NOT':([3,21,22,23,24,30,37,38,42,43,66,83,84,86,88,89,111,112,152,],[53,-56,-52,-50,-51,-53,-71,-72,-54,-55,53,-56,-53,-55,53,-56,-56,53,-57,]),'LCOR':([21,54,83,111,],[57,122,57,173,]),'POINT':([21,83,196,230,],[58,145,230,255,]),'PLUS':([21,30,40,43,44,83,91,94,95,96,105,111,157,160,161,162,163,199,202,204,206,],[59,-126,100,-125,-124,146,100,-125,-126,153,-127,153,100,-125,-126,153,100,100,100,100,100,]),'TIMES':([21,30,40,43,44,83,91,94,95,105,157,160,161,163,199,202,204,206,],[61,-126,102,-125,-124,61,102,-125,-126,-127,102,-125,-126,102,102,102,102,102,]),'DIVIDE':([21,30,40,43,44,83,91,94,95,105,157,160,161,163,199,202,204,206,],[62,-126,103,-125,-124,62,103,-125,-126,-127,103,-125,-126,103,103,103,103,103,]),'EXPONENTIATION':([21,30,40,43,44,83,91,94,95,105,150,151,157,160,161,163,199,202,204,206,232,233,234,235,],[63,-126,104,-125,-124,63,104,-125,-126,-127,194,195,104,-125,-126,104,104,104,104,104,194,195,194,195,]),'END':([22,23,24,30,32,33,34,35,36,37,38,42,43,44,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,89,98,105,106,107,108,111,112,113,114,115,116,117,118,119,120,123,125,134,136,143,144,152,157,158,160,161,163,164,166,168,170,177,182,190,192,208,209,211,213,214,226,227,228,229,232,233,234,235,236,237,238,239,240,243,246,247,249,250,251,252,254,260,263,266,267,268,269,],[-52,-50,-51,-53,-100,-101,-102,-103,-104,-71,-72,-54,-55,-124,141,-21,-84,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-56,-53,-55,-56,-69,-127,-58,-61,-62,-56,-36,-37,-38,-39,-40,-41,-42,-44,-70,-43,-135,-105,-110,191,-85,-57,-106,-107,-125,-126,-111,-112,-115,-118,-121,-89,-136,225,226,-59,-60,-73,-88,-97,-137,254,-122,-123,-108,-109,-113,-114,-116,-117,-119,-120,-76,-77,-79,-91,-92,-98,-99,-138,-82,-83,266,-139,268,-93,-94,]),'RETURN':([22,23,24,25,30,32,33,34,35,36,37,38,42,43,44,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,89,98,105,106,107,108,111,112,113,114,115,116,117,118,119,120,123,125,134,136,144,152,157,158,160,161,163,164,166,168,170,177,182,197,208,209,211,213,214,226,228,229,231,232,233,234,235,236,237,238,239,240,243,246,247,249,250,251,252,254,260,266,268,269,],[-52,-50,-51,65,-53,-100,-101,-102,-103,-104,-71,-72,-54,-55,-124,142,-21,-84,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-56,-53,-55,-56,-69,-127,-58,-61,-62,-56,-36,-37,-38,-39,-40,-41,-42,-44,-70,-43,-135,-105,-110,-85,-57,-106,-107,-125,-126,-111,-112,-115,-118,-121,-89,-136,-130,-59,-60,-73,-88,-97,-137,-122,-123,-131,-108,-109,-113,-114,-116,-117,-119,-120,-76,-77,-79,-91,-92,-98,-99,-138,-82,-83,-139,-93,-94,]),'RPAR':([22,23,24,32,33,34,35,36,37,38,42,44,56,84,86,89,91,92,93,94,95,96,105,106,107,108,124,126,134,136,149,152,156,157,158,160,161,163,164,166,168,170,198,199,201,202,203,204,205,206,207,208,209,216,218,219,220,222,223,224,228,229,232,233,234,235,236,237,238,239,244,258,],[-52,-50,-51,-100,-101,-102,-103,-104,-71,-72,-54,-124,125,-53,-55,-56,150,151,152,-55,-53,-56,-127,-58,-61,-62,-128,182,-105,-110,193,-57,197,-106,-107,-125,-126,-111,-112,-115,-118,-121,231,232,233,234,235,236,237,238,239,-59,-60,-129,245,246,247,249,250,251,-122,-123,-108,-109,-113,-114,-116,-117,-119,-120,257,-90,]),'D_POINT':([22,23,24,37,38,42,84,86,87,89,106,107,108,152,208,209,253,],[-52,-50,-51,-71,-72,-54,-53,-55,148,-56,-58,-61,-62,-57,-59,-60,259,]),'RCOR':([22,23,24,37,38,42,84,86,89,122,127,152,176,178,179,180,210,242,],[-52,-50,-51,-71,-72,-54,-53,-55,-56,177,183,-57,213,214,-86,-95,240,-87,]),'COMMA':([22,23,24,37,38,42,84,86,89,124,152,179,221,256,],[-52,-50,-51,-71,-72,-54,-53,-55,-56,181,-57,215,248,262,]),'RKEY':([22,23,24,37,38,42,84,86,89,152,174,256,265,],[-52,-50,-51,-71,-72,-54,-53,-55,-56,-57,211,-74,-75,]),'GETS':([54,],[120,]),'LKEY':([54,],[121,]),'DELETE':([58,145,],[129,129,]),'INSERT':([58,145,],[130,130,]),'DELETE_AT':([58,145,],[131,131,]),'SEARCH':([58,145,],[132,132,]),'PUSH':([58,145,],[133,133,]),'IN':([97,],[155,]),'':([122,],[180,]),'QUESTION':([128,],[184,]),'ELSE':([226,],[253,]),'DO':([261,],[264,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instrucciones':([0,],[1,]),'asignacion':([0,25,67,148,193,259,264,],[2,68,68,68,68,68,68,]),'expression':([0,25,26,28,45,46,47,54,57,65,67,85,90,121,142,148,171,172,173,185,193,217,218,241,259,262,264,],[3,66,88,93,106,107,108,112,127,143,66,93,88,175,190,66,88,88,210,219,66,243,244,256,66,175,66,]),'funciones':([0,],[4,]),'comparacion':([0,25,26,54,67,90,148,171,172,193,259,264,],[5,69,87,113,69,149,69,208,209,69,69,69,]),'condicional':([0,25,67,148,193,259,264,],[6,70,70,70,70,70,70,]),'while':([0,25,67,148,193,254,259,264,],[7,73,73,73,73,260,73,73,]),'for':([0,25,67,148,193,259,264,268,],[8,72,72,72,72,72,72,269,]),'impresion':([0,25,67,148,193,259,264,],[9,71,71,71,71,71,71,]),'input':([0,25,67,148,193,259,264,],[10,74,74,74,74,74,74,]),'callFuncion':([0,25,54,67,148,193,259,264,],[11,75,114,75,75,75,75,75,]),'addValueHash':([0,25,67,148,193,259,264,],[12,76,76,76,76,76,76,]),'modValueHash':([0,25,67,148,193,259,264,],[13,77,77,77,77,77,77,]),'deleteValueHash':([0,25,67,148,193,259,264,],[14,78,78,78,78,78,78,]),'insertArray':([0,25,67,148,193,259,264,],[15,79,79,79,79,79,79,]),'deleteArray':([0,25,67,148,193,259,264,],[16,80,80,80,80,80,80,]),'searchStack':([0,25,67,148,193,259,264,],[17,82,82,82,82,82,82,]),'pushStack':([0,25,67,148,193,259,264,],[18,81,81,81,81,81,81,]),'metodoBoleano':([0,],[19,]),'opMatematicas':([0,28,54,100,101,159,165,167,169,200,],[20,92,119,158,164,201,203,205,207,92,]),'factor':([0,25,26,28,31,45,46,47,54,55,57,65,67,85,90,121,122,142,148,171,172,173,185,188,189,193,215,217,218,241,248,259,262,264,],[22,22,22,22,98,22,22,22,22,123,22,22,22,22,22,22,179,22,22,22,22,22,22,223,224,22,179,22,22,22,258,22,22,22,]),'term':([0,25,26,28,45,46,47,54,57,65,67,85,90,121,142,148,171,172,173,185,193,217,218,241,259,262,264,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'boleano':([0,25,26,28,45,46,47,54,57,65,67,85,90,121,142,148,171,172,173,185,193,217,218,241,259,262,264,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'encabezado':([0,],[25,]),'suma':([0,28,54,100,101,159,165,167,169,200,],[32,32,32,32,32,32,32,32,32,32,]),'resta':([0,28,54,100,101,159,165,167,169,200,],[33,33,33,33,33,33,33,33,33,33,]),'multiplicacion':([0,28,54,100,101,159,165,167,169,200,],[34,34,34,34,34,34,34,34,34,34,]),'division':([0,28,54,100,101,159,165,167,169,200,],[35,35,35,35,35,35,35,35,35,35,]),'exponenciacion':([0,28,54,100,101,159,165,167,169,200,],[36,36,36,36,36,36,36,36,36,36,]),'operadores':([0,28,54,100,101,102,103,104,159,165,167,169,194,195,200,],[40,91,40,157,163,166,168,170,199,202,204,206,228,229,91,]),'enteros':([0,28,54,100,101,102,103,104,159,165,167,169,194,195,200,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'comparador':([3,66,88,112,],[45,45,45,45,]),'tipo_asignacion':([21,83,],[55,55,]),'repCuerpo':([25,67,148,193,259,264,],[64,144,192,227,263,267,]),'cuerpo':([25,67,148,193,259,264,],[67,67,67,67,67,67,]),'diccionario':([54,],[115,]),'getValueHash':([54,],[116,]),'array':([54,],[117,]),'stack':([54,],[118,]),'parametros':([56,156,181,],[126,198,216,]),'cuerpoHash':([121,262,],[174,265,]),'parametrosA':([122,215,],[176,242,]),'vacio':([122,],[178,]),'argumentosA':([186,],[220,]),'cond_else':([226,],[252,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> instrucciones","S'",1,None,None,None),
  ('instrucciones -> asignacion','instrucciones',1,'p_instrucciones','sintactico.py',6),
  ('instrucciones -> expression','instrucciones',1,'p_instrucciones','sintactico.py',7),
  ('instrucciones -> funciones','instrucciones',1,'p_instrucciones','sintactico.py',8),
  ('instrucciones -> comparacion','instrucciones',1,'p_instrucciones','sintactico.py',9),
  ('instrucciones -> condicional','instrucciones',1,'p_instrucciones','sintactico.py',10),
  ('instrucciones -> while','instrucciones',1,'p_instrucciones','sintactico.py',11),
  ('instrucciones -> for','instrucciones',1,'p_instrucciones','sintactico.py',12),
  ('instrucciones -> impresion','instrucciones',1,'p_instrucciones','sintactico.py',13),
  ('instrucciones -> input','instrucciones',1,'p_instrucciones','sintactico.py',14),
  ('instrucciones -> callFuncion','instrucciones',1,'p_instrucciones','sintactico.py',15),
  ('instrucciones -> addValueHash','instrucciones',1,'p_instrucciones','sintactico.py',16),
  ('instrucciones -> modValueHash','instrucciones',1,'p_instrucciones','sintactico.py',17),
  ('instrucciones -> deleteValueHash','instrucciones',1,'p_instrucciones','sintactico.py',18),
  ('instrucciones -> insertArray','instrucciones',1,'p_instrucciones','sintactico.py',19),
  ('instrucciones -> deleteArray','instrucciones',1,'p_instrucciones','sintactico.py',20),
  ('instrucciones -> searchStack','instrucciones',1,'p_instrucciones','sintactico.py',21),
  ('instrucciones -> pushStack','instrucciones',1,'p_instrucciones','sintactico.py',22),
  ('instrucciones -> metodoBoleano','instrucciones',1,'p_instrucciones','sintactico.py',23),
  ('instrucciones -> opMatematicas','instrucciones',1,'p_instrucciones','sintactico.py',24),
  ('cuerpo -> asignacion','cuerpo',1,'p_body','sintactico.py',28),
  ('cuerpo -> expression','cuerpo',1,'p_body','sintactico.py',29),
  ('cuerpo -> comparacion','cuerpo',1,'p_body','sintactico.py',30),
  ('cuerpo -> condicional','cuerpo',1,'p_body','sintactico.py',31),
  ('cuerpo -> impresion','cuerpo',1,'p_body','sintactico.py',32),
  ('cuerpo -> for','cuerpo',1,'p_body','sintactico.py',33),
  ('cuerpo -> while','cuerpo',1,'p_body','sintactico.py',34),
  ('cuerpo -> input','cuerpo',1,'p_body','sintactico.py',35),
  ('cuerpo -> callFuncion','cuerpo',1,'p_body','sintactico.py',36),
  ('cuerpo -> addValueHash','cuerpo',1,'p_body','sintactico.py',37),
  ('cuerpo -> modValueHash','cuerpo',1,'p_body','sintactico.py',38),
  ('cuerpo -> deleteValueHash','cuerpo',1,'p_body','sintactico.py',39),
  ('cuerpo -> insertArray','cuerpo',1,'p_body','sintactico.py',40),
  ('cuerpo -> deleteArray','cuerpo',1,'p_body','sintactico.py',41),
  ('cuerpo -> pushStack','cuerpo',1,'p_body','sintactico.py',42),
  ('cuerpo -> searchStack','cuerpo',1,'p_body','sintactico.py',43),
  ('asignacion -> VARIABLE ASIGN expression','asignacion',3,'p_asignacion','sintactico.py',47),
  ('asignacion -> VARIABLE ASIGN comparacion','asignacion',3,'p_asignacion','sintactico.py',48),
  ('asignacion -> VARIABLE ASIGN callFuncion','asignacion',3,'p_asignacion','sintactico.py',49),
  ('asignacion -> VARIABLE ASIGN diccionario','asignacion',3,'p_asignacion','sintactico.py',50),
  ('asignacion -> VARIABLE ASIGN getValueHash','asignacion',3,'p_asignacion','sintactico.py',51),
  ('asignacion -> VARIABLE ASIGN array','asignacion',3,'p_asignacion','sintactico.py',52),
  ('asignacion -> VARIABLE ASIGN stack','asignacion',3,'p_asignacion','sintactico.py',53),
  ('asignacion -> VARIABLE tipo_asignacion factor','asignacion',3,'p_asignacion','sintactico.py',54),
  ('asignacion -> VARIABLE ASIGN opMatematicas','asignacion',3,'p_asignacion','sintactico.py',55),
  ('tipo_asignacion -> PLUS ASIGN','tipo_asignacion',2,'p_tipo_asignacion','sintactico.py',58),
  ('tipo_asignacion -> MINUS ASIGN','tipo_asignacion',2,'p_tipo_asignacion','sintactico.py',59),
  ('tipo_asignacion -> TIMES ASIGN','tipo_asignacion',2,'p_tipo_asignacion','sintactico.py',60),
  ('tipo_asignacion -> DIVIDE ASIGN','tipo_asignacion',2,'p_tipo_asignacion','sintactico.py',61),
  ('tipo_asignacion -> EXPONENTIATION ASIGN','tipo_asignacion',2,'p_tipo_asignacion','sintactico.py',62),
  ('expression -> term','expression',1,'p_expression_term','sintactico.py',67),
  ('expression -> boleano','expression',1,'p_expression_term','sintactico.py',68),
  ('term -> factor','term',1,'p_term_factor','sintactico.py',72),
  ('factor -> NUMBER','factor',1,'p_factor_num','sintactico.py',75),
  ('factor -> STRING','factor',1,'p_factor_num','sintactico.py',76),
  ('factor -> FLOAT','factor',1,'p_factor_num','sintactico.py',77),
  ('factor -> VARIABLE','factor',1,'p_factor_num','sintactico.py',78),
  ('factor -> LPAR expression RPAR','factor',3,'p_factor_expr','sintactico.py',82),
  ('comparacion -> expression comparador expression','comparacion',3,'p_comparacion','sintactico.py',86),
  ('comparacion -> expression comparador expression AND comparacion','comparacion',5,'p_comparacion','sintactico.py',87),
  ('comparacion -> expression comparador expression OR comparacion','comparacion',5,'p_comparacion','sintactico.py',88),
  ('comparacion -> expression AND expression','comparacion',3,'p_comparacion','sintactico.py',89),
  ('comparacion -> expression OR expression','comparacion',3,'p_comparacion','sintactico.py',90),
  ('comparador -> GREATER','comparador',1,'p_comparador','sintactico.py',95),
  ('comparador -> GREATER_OR_EQUAL','comparador',1,'p_comparador','sintactico.py',96),
  ('comparador -> MINOR','comparador',1,'p_comparador','sintactico.py',97),
  ('comparador -> MINOR_OR_EQUAL','comparador',1,'p_comparador','sintactico.py',98),
  ('comparador -> ASIGN ASIGN','comparador',2,'p_comparador','sintactico.py',99),
  ('comparador -> NOT ASIGN','comparador',2,'p_comparador','sintactico.py',100),
  ('impresion -> PUTS factor','impresion',2,'p_puts','sintactico.py',106),
  ('input -> VARIABLE ASIGN GETS','input',3,'p_gets','sintactico.py',109),
  ('boleano -> TRUE','boleano',1,'p_boolean','sintactico.py',113),
  ('boleano -> FALSE','boleano',1,'p_boolean','sintactico.py',114),
  ('diccionario -> LKEY cuerpoHash RKEY','diccionario',3,'p_hash','sintactico.py',119),
  ('cuerpoHash -> expression ASIGN GREATER expression','cuerpoHash',4,'p_body_hash','sintactico.py',122),
  ('cuerpoHash -> expression ASIGN GREATER expression COMMA cuerpoHash','cuerpoHash',6,'p_body_hash','sintactico.py',123),
  ('getValueHash -> VARIABLE LCOR expression RCOR','getValueHash',4,'p_get_hash','sintactico.py',127),
  ('addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression','addValueHash',6,'p_add_hash','sintactico.py',130),
  ('modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression','modValueHash',6,'p_mod_hash','sintactico.py',133),
  ('deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR','deleteValueHash',6,'p_del_hash','sintactico.py',136),
  ('metodoBoleano -> VARIABLE POINT VARIABLE QUESTION LPAR expression RPAR','metodoBoleano',7,'p_boolean_method','sintactico.py',140),
  ('metodoBoleano -> VARIABLE POINT VARIABLE QUESTION LPAR RPAR','metodoBoleano',6,'p_boolean_method','sintactico.py',141),
  ('while -> WHILE LPAR comparacion RPAR repCuerpo END','while',6,'p_while','sintactico.py',149),
  ('while -> WHILE LPAR comparacion RPAR repCuerpo END while','while',7,'p_while','sintactico.py',150),
  ('repCuerpo -> cuerpo','repCuerpo',1,'p_repCuerpo','sintactico.py',153),
  ('repCuerpo -> cuerpo repCuerpo','repCuerpo',2,'p_repCuerpo','sintactico.py',154),
  ('parametrosA -> factor','parametrosA',1,'p_parA_function','sintactico.py',159),
  ('parametrosA -> factor COMMA parametrosA','parametrosA',3,'p_parA_function','sintactico.py',160),
  ('array -> LCOR parametrosA RCOR','array',3,'p_array','sintactico.py',163),
  ('array -> LCOR RCOR','array',2,'p_array','sintactico.py',164),
  ('argumentosA -> NUMBER COMMA factor','argumentosA',3,'p_argumentos_array','sintactico.py',168),
  ('insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR','insertArray',6,'p_insert_array','sintactico.py',172),
  ('deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR','deleteArray',6,'p_delete_array','sintactico.py',176),
  ('for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END','for',10,'p_for','sintactico.py',184),
  ('for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for','for',11,'p_for','sintactico.py',185),
  ('vacio -> ','vacio',1,'p_vacio','sintactico.py',189),
  ('stack -> LCOR parametrosA RCOR','stack',3,'p_stack','sintactico.py',191),
  ('stack -> LCOR vacio RCOR','stack',3,'p_stack','sintactico.py',192),
  ('searchStack -> VARIABLE POINT SEARCH LPAR factor RPAR','searchStack',6,'p_search_stack','sintactico.py',195),
  ('pushStack -> VARIABLE POINT PUSH LPAR factor RPAR','pushStack',6,'p_push_stack','sintactico.py',198),
  ('opMatematicas -> suma','opMatematicas',1,'p_opMatematicas','sintactico.py',213),
  ('opMatematicas -> resta','opMatematicas',1,'p_opMatematicas','sintactico.py',214),
  ('opMatematicas -> multiplicacion','opMatematicas',1,'p_opMatematicas','sintactico.py',215),
  ('opMatematicas -> division','opMatematicas',1,'p_opMatematicas','sintactico.py',216),
  ('opMatematicas -> exponenciacion','opMatematicas',1,'p_opMatematicas','sintactico.py',217),
  ('suma -> VARIABLE PLUS NUMBER','suma',3,'p_suma','sintactico.py',221),
  ('suma -> operadores PLUS operadores','suma',3,'p_suma','sintactico.py',222),
  ('suma -> operadores PLUS opMatematicas','suma',3,'p_suma','sintactico.py',223),
  ('suma -> operadores PLUS LPAR operadores RPAR','suma',5,'p_suma','sintactico.py',224),
  ('suma -> operadores PLUS LPAR opMatematicas RPAR','suma',5,'p_suma','sintactico.py',225),
  ('resta -> VARIABLE MINUS NUMBER','resta',3,'p_resta','sintactico.py',229),
  ('resta -> operadores MINUS operadores','resta',3,'p_resta','sintactico.py',230),
  ('resta -> operadores MINUS opMatematicas','resta',3,'p_resta','sintactico.py',231),
  ('resta -> operadores MINUS LPAR operadores RPAR','resta',5,'p_resta','sintactico.py',232),
  ('resta -> operadores MINUS LPAR opMatematicas RPAR','resta',5,'p_resta','sintactico.py',233),
  ('multiplicacion -> operadores TIMES operadores','multiplicacion',3,'p_multiplicacion','sintactico.py',237),
  ('multiplicacion -> operadores TIMES LPAR operadores RPAR','multiplicacion',5,'p_multiplicacion','sintactico.py',238),
  ('multiplicacion -> operadores TIMES LPAR opMatematicas RPAR','multiplicacion',5,'p_multiplicacion','sintactico.py',239),
  ('division -> operadores DIVIDE operadores','division',3,'p_divicion','sintactico.py',243),
  ('division -> operadores DIVIDE LPAR operadores RPAR','division',5,'p_divicion','sintactico.py',244),
  ('division -> operadores DIVIDE LPAR opMatematicas RPAR','division',5,'p_divicion','sintactico.py',245),
  ('exponenciacion -> operadores EXPONENTIATION operadores','exponenciacion',3,'p_exponenciacion','sintactico.py',249),
  ('exponenciacion -> LPAR operadores RPAR EXPONENTIATION operadores','exponenciacion',5,'p_exponenciacion','sintactico.py',250),
  ('exponenciacion -> LPAR opMatematicas RPAR EXPONENTIATION operadores','exponenciacion',5,'p_exponenciacion','sintactico.py',251),
  ('operadores -> enteros','operadores',1,'p_operadores','sintactico.py',255),
  ('operadores -> FLOAT','operadores',1,'p_operadores','sintactico.py',256),
  ('enteros -> NUMBER','enteros',1,'p_enteros','sintactico.py',260),
  ('enteros -> MINUS NUMBER','enteros',2,'p_enteros','sintactico.py',261),
  ('parametros -> VARIABLE','parametros',1,'p_par_function','sintactico.py',269),
  ('parametros -> VARIABLE COMMA parametros','parametros',3,'p_par_function','sintactico.py',270),
  ('encabezado -> DEF VARIABLE LPAR RPAR','encabezado',4,'p_header_function','sintactico.py',274),
  ('encabezado -> DEF VARIABLE LPAR parametros RPAR','encabezado',5,'p_header_function','sintactico.py',275),
  ('funciones -> encabezado repCuerpo END','funciones',3,'p_function','sintactico.py',279),
  ('funciones -> encabezado RETURN expression END','funciones',4,'p_function','sintactico.py',280),
  ('funciones -> encabezado repCuerpo RETURN expression END','funciones',5,'p_function','sintactico.py',281),
  ('callFuncion -> VARIABLE LPAR RPAR','callFuncion',3,'p_call_function','sintactico.py',285),
  ('callFuncion -> VARIABLE LPAR parametros RPAR','callFuncion',4,'p_call_function','sintactico.py',286),
  ('condicional -> IF comparacion D_POINT repCuerpo END','condicional',5,'p_cond_if','sintactico.py',293),
  ('condicional -> IF comparacion D_POINT repCuerpo END cond_else','condicional',6,'p_cond_if','sintactico.py',294),
  ('cond_else -> ELSE D_POINT repCuerpo END','cond_else',4,'p_cond_else','sintactico.py',298),
]
