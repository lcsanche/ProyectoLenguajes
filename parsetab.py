
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASIGN COMMA DEF DELETE DELETE_AT DIVIDE DO D_POINT ELSE END EXPONENTIATION FALSE FLOAT FOR GETS GREATER GREATER_OR_EQUAL IF IN INSERT LCOR LKEY LPAR MINOR MINOR_OR_EQUAL MINUS NOT NUMBER OR PLUS POINT PUSH PUTS QUESTION RCOR RETURN RKEY RPAR SEARCH STRING TIMES TRUE VARIABLE WHILEinstrucciones : asignacion\n                    | expression\n                    | funciones\n                    | comparacion\n                    | condicional\n                    | while\n                    | for\n                    | impresion\n                    | input\n                    | callFuncion\n                    | addValueHash\n                    | modValueHash\n                    | deleteValueHash\n                    | insertArray\n                    | deleteArray\n                    | searchStack\n                    | pushStack\n                    \n    \n     cuerpo : asignacion\n                | expression\n                | comparacion\n                | condicional\n                | impresion\n                | for\n                | while\n                | input\n                | callFuncion\n                | addValueHash\n                | modValueHash\n                | deleteValueHash\n                | insertArray\n                | deleteArray\n                | pushStack\n                | searchStack\n    asignacion : VARIABLE ASIGN expression\n                | VARIABLE ASIGN comparacion\n                | VARIABLE ASIGN callFuncion\n                | VARIABLE ASIGN diccionario\n                | VARIABLE ASIGN getValueHash\n                | VARIABLE ASIGN array\n                | VARIABLE ASIGN stack\n    expression : term \n                    | boleano\n    term : factorfactor : NUMBER\n                | STRING\n                | FLOAT\n                | VARIABLE\n    factor : LPAR expression RPARexpression : expression PLUS termexpression : expression MINUS termterm : term TIMES factorterm : term DIVIDE factorterm : term EXPONENTIATION factorcomparacion : expression comparador expression\n                    | expression comparador expression AND comparacion\n                    | expression comparador expression OR comparacion\n                    | expression AND expression\n                    | expression OR expression\n    \n    comparador : GREATER \n                | GREATER_OR_EQUAL\n                | MINOR\n                | MINOR_OR_EQUAL\n                | ASIGN ASIGN\n                | NOT ASIGN\n    condicional : IF comparacion D_POINT repCuerpo END\n                    | IF comparacion D_POINT repCuerpo END cond_else\n    cond_else : ELSE D_POINT repCuerpo ENDimpresion : PUTS factorinput : VARIABLE ASIGN GETS parametros : VARIABLE\n                    | VARIABLE COMMA parametros\n    encabezado : DEF VARIABLE LPAR RPAR\n                    | DEF VARIABLE LPAR parametros RPAR\n    funciones : encabezado repCuerpo END\n                | encabezado RETURN expression END\n                | encabezado cuerpo RETURN expression END\n    callFuncion : VARIABLE LPAR RPAR\n                | VARIABLE LPAR parametros RPAR\n    boleano : TRUE \n                | FALSE\n    diccionario : LKEY cuerpoHash RKEYcuerpoHash : expression ASIGN GREATER expression\n                    | expression ASIGN GREATER expression COMMA cuerpoHash\n    getValueHash : VARIABLE LCOR expression RCORaddValueHash : VARIABLE LCOR expression RCOR ASIGN expressionmodValueHash : VARIABLE LCOR expression RCOR ASIGN expressiondeleteValueHash : VARIABLE POINT DELETE LPAR expression RPARwhile : WHILE LPAR comparacion RPAR repCuerpo END\n            | WHILE LPAR comparacion RPAR repCuerpo END while\n    repCuerpo : cuerpo \n                | cuerpo repCuerpo\n     parametrosA : factor\n                    | factor COMMA parametrosA\n    array : LCOR parametrosA RCOR\n             | LCOR RCOR\n    argumentosA : NUMBER COMMA factor\n    insertArray : VARIABLE POINT INSERT LPAR argumentosA RPAR\n    deleteArray : VARIABLE POINT DELETE_AT LPAR NUMBER RPAR\n    for : FOR VARIABLE IN NUMBER POINT POINT NUMBER  DO repCuerpo END\n            | FOR VARIABLE IN NUMBER POINT POINT NUMBER  DO repCuerpo END for\n    vacio : ""stack : LCOR parametrosA RCOR\n            | LCOR vacio RCOR\n    searchStack : VARIABLE POINT SEARCH LPAR factor RPAR\n    pushStack : VARIABLE POINT PUSH LPAR factor RPAR\n    '
    
_lr_action_items = {'VARIABLE':([0,20,21,22,23,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,46,47,48,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,75,76,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,108,109,110,113,114,117,119,121,122,123,124,128,132,133,135,138,139,143,145,147,148,150,152,153,154,156,164,167,168,169,171,172,173,174,175,176,177,178,180,184,185,187,189,191,193,194,],[19,-41,-42,72,75,75,78,-44,75,-43,-79,-80,80,-45,-46,75,75,75,75,75,-59,-60,-61,-62,88,99,75,75,75,75,75,-19,72,-18,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-47,-47,75,-68,-49,-50,-54,-57,-58,-63,-64,-47,-34,-35,-36,-37,-38,-39,-40,-69,75,75,-77,-51,-52,-53,72,75,72,-48,99,75,75,75,-95,99,-78,75,75,75,72,-72,-55,-56,-81,-94,-103,75,75,-65,-73,-84,75,-85,-87,-97,75,-98,-104,-105,-66,-88,72,-89,75,72,-67,-99,-100,]),'IF':([0,20,21,22,27,29,30,31,33,34,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,75,79,81,82,83,84,85,88,89,90,91,92,93,94,95,96,100,108,109,110,113,117,119,128,133,143,145,147,148,150,152,153,164,167,168,171,172,173,175,176,177,178,180,184,185,189,191,193,194,],[23,-41,-42,23,-44,-43,-79,-80,-45,-46,-19,23,-18,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-47,-47,-68,-49,-50,-54,-57,-58,-47,-34,-35,-36,-37,-38,-39,-40,-69,-77,-51,-52,-53,23,23,-48,-95,-78,23,-72,-55,-56,-81,-94,-103,-65,-73,-84,-85,-87,-97,-98,-104,-105,-66,-88,23,-89,23,-67,-99,-100,]),'WHILE':([0,20,21,22,27,29,30,31,33,34,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,75,79,81,82,83,84,85,88,89,90,91,92,93,94,95,96,100,108,109,110,113,117,119,128,133,143,145,147,148,150,152,153,164,167,168,171,172,173,175,176,177,178,180,184,185,189,191,193,194,],[24,-41,-42,24,-44,-43,-79,-80,-45,-46,-19,24,-18,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-47,-47,-68,-49,-50,-54,-57,-58,-47,-34,-35,-36,-37,-38,-39,-40,-69,-77,-51,-52,-53,24,24,-48,-95,-78,24,-72,-55,-56,-81,-94,-103,-65,-73,-84,-85,-87,-97,-98,-104,-105,-66,24,24,-89,24,-67,-99,-100,]),'FOR':([0,20,21,22,27,29,30,31,33,34,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,75,79,81,82,83,84,85,88,89,90,91,92,93,94,95,96,100,108,109,110,113,117,119,128,133,143,145,147,148,150,152,153,164,167,168,171,172,173,175,176,177,178,180,184,185,189,191,193,194,],[26,-41,-42,26,-44,-43,-79,-80,-45,-46,-19,26,-18,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-47,-47,-68,-49,-50,-54,-57,-58,-47,-34,-35,-36,-37,-38,-39,-40,-69,-77,-51,-52,-53,26,26,-48,-95,-78,26,-72,-55,-56,-81,-94,-103,-65,-73,-84,-85,-87,-97,-98,-104,-105,-66,-88,26,-89,26,-67,26,-100,]),'PUTS':([0,20,21,22,27,29,30,31,33,34,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,75,79,81,82,83,84,85,88,89,90,91,92,93,94,95,96,100,108,109,110,113,117,119,128,133,143,145,147,148,150,152,153,164,167,168,171,172,173,175,176,177,178,180,184,185,189,191,193,194,],[28,-41,-42,28,-44,-43,-79,-80,-45,-46,-19,28,-18,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-47,-47,-68,-49,-50,-54,-57,-58,-47,-34,-35,-36,-37,-38,-39,-40,-69,-77,-51,-52,-53,28,28,-48,-95,-78,28,-72,-55,-56,-81,-94,-103,-65,-73,-84,-85,-87,-97,-98,-104,-105,-66,-88,28,-89,28,-67,-99,-100,]),'TRUE':([0,20,21,22,23,25,27,29,30,31,33,34,37,38,39,40,41,42,43,46,48,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,75,76,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,108,109,110,113,114,117,119,122,123,124,128,133,135,143,145,147,148,150,152,153,156,164,167,168,169,171,172,173,175,176,177,178,180,184,185,187,189,191,193,194,],[30,-41,-42,30,30,30,-44,-43,-79,-80,-45,-46,30,30,30,-59,-60,-61,-62,30,30,30,-19,30,-18,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-47,-47,30,-68,-49,-50,-54,-57,-58,-63,-64,-47,-34,-35,-36,-37,-38,-39,-40,-69,30,-77,-51,-52,-53,30,30,30,-48,30,30,30,-95,-78,30,30,-72,-55,-56,-81,-94,-103,30,-65,-73,-84,30,-85,-87,-97,-98,-104,-105,-66,-88,30,-89,30,30,-67,-99,-100,]),'FALSE':([0,20,21,22,23,25,27,29,30,31,33,34,37,38,39,40,41,42,43,46,48,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,75,76,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,100,108,109,110,113,114,117,119,122,123,124,128,133,135,143,145,147,148,150,152,153,156,164,167,168,169,171,172,173,175,176,177,178,180,184,185,187,189,191,193,194,],[31,-41,-42,31,31,31,-44,-43,-79,-80,-45,-46,31,31,31,-59,-60,-61,-62,31,31,31,-19,31,-18,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-47,-47,31,-68,-49,-50,-54,-57,-58,-63,-64,-47,-34,-35,-36,-37,-38,-39,-40,-69,31,-77,-51,-52,-53,31,31,31,-48,31,31,31,-95,-78,31,31,-72,-55,-56,-81,-94,-103,31,-65,-73,-84,31,-85,-87,-97,-98,-104,-105,-66,-88,31,-89,31,31,-67,-99,-100,]),'DEF':([0,],[32,]),'NUMBER':([0,20,21,22,23,25,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,46,48,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,75,76,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,108,109,110,113,114,117,119,120,122,123,124,128,133,135,136,137,138,139,143,145,147,148,150,152,153,154,156,164,167,168,169,171,172,173,174,175,176,177,178,180,181,184,185,187,189,191,193,194,],[27,-41,-42,27,27,27,-44,27,-43,-79,-80,-45,-46,27,27,27,27,27,-59,-60,-61,-62,27,27,27,27,27,27,-19,27,-18,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-47,-47,27,-68,-49,-50,-54,-57,-58,-63,-64,-47,-34,-35,-36,-37,-38,-39,-40,-69,27,27,-77,-51,-52,-53,27,27,27,-48,144,27,27,27,-95,-78,27,159,160,27,27,27,-72,-55,-56,-81,-94,-103,27,27,-65,-73,-84,27,-85,-87,-97,27,-98,-104,-105,-66,-88,186,27,-89,27,27,-67,-99,-100,]),'STRING':([0,20,21,22,23,25,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,46,48,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,75,76,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,108,109,110,113,114,117,119,122,123,124,128,133,135,138,139,143,145,147,148,150,152,153,154,156,164,167,168,169,171,172,173,174,175,176,177,178,180,184,185,187,189,191,193,194,],[33,-41,-42,33,33,33,-44,33,-43,-79,-80,-45,-46,33,33,33,33,33,-59,-60,-61,-62,33,33,33,33,33,33,-19,33,-18,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-47,-47,33,-68,-49,-50,-54,-57,-58,-63,-64,-47,-34,-35,-36,-37,-38,-39,-40,-69,33,33,-77,-51,-52,-53,33,33,33,-48,33,33,33,-95,-78,33,33,33,33,-72,-55,-56,-81,-94,-103,33,33,-65,-73,-84,33,-85,-87,-97,33,-98,-104,-105,-66,-88,33,-89,33,33,-67,-99,-100,]),'FLOAT':([0,20,21,22,23,25,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,46,48,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,75,76,79,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,108,109,110,113,114,117,119,122,123,124,128,133,135,138,139,143,145,147,148,150,152,153,154,156,164,167,168,169,171,172,173,174,175,176,177,178,180,184,185,187,189,191,193,194,],[34,-41,-42,34,34,34,-44,34,-43,-79,-80,-45,-46,34,34,34,34,34,-59,-60,-61,-62,34,34,34,34,34,34,-19,34,-18,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-47,-47,34,-68,-49,-50,-54,-57,-58,-63,-64,-47,-34,-35,-36,-37,-38,-39,-40,-69,34,34,-77,-51,-52,-53,34,34,34,-48,34,34,34,-95,-78,34,34,34,34,-72,-55,-56,-81,-94,-103,34,34,-65,-73,-84,34,-85,-87,-97,34,-98,-104,-105,-66,-88,34,-89,34,34,-67,-99,-100,]),'LPAR':([0,19,20,21,22,23,24,25,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,46,48,50,51,52,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,75,76,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,100,103,104,105,106,107,108,109,110,113,114,117,119,122,123,124,128,133,135,138,139,143,145,147,148,150,152,153,154,156,164,167,168,169,171,172,173,174,175,176,177,178,180,184,185,187,189,191,193,194,],[25,47,-41,-42,25,25,76,25,-44,25,-43,-79,-80,-45,-46,25,25,25,25,25,-59,-60,-61,-62,25,25,25,25,25,25,-19,25,-18,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,47,-47,25,-68,121,-49,-50,-54,-57,-58,-63,-64,47,-34,-35,-36,-37,-38,-39,-40,-69,25,25,-77,135,136,137,138,139,-51,-52,-53,25,25,25,-48,25,25,25,-95,-78,25,25,25,25,-72,-55,-56,-81,-94,-103,25,25,-65,-73,-84,25,-85,-87,-97,25,-98,-104,-105,-66,-88,25,-89,25,25,-67,-99,-100,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,27,29,30,31,33,34,75,79,81,82,83,84,85,88,89,90,91,92,93,94,95,96,100,108,109,110,111,119,128,133,140,147,148,150,152,153,163,164,168,171,172,173,175,176,177,178,180,185,191,193,194,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-47,-41,-42,-44,-43,-79,-80,-45,-46,-47,-68,-49,-50,-54,-57,-58,-47,-34,-35,-36,-37,-38,-39,-40,-69,-77,-51,-52,-53,-74,-48,-95,-78,-75,-55,-56,-81,-94,-103,-76,-65,-84,-85,-87,-97,-98,-104,-105,-66,-88,-89,-67,-99,-100,]),'PLUS':([3,19,20,21,27,29,30,31,33,34,55,72,74,75,77,81,82,83,84,85,88,89,102,108,109,110,112,119,126,141,149,157,171,182,],[35,-47,-41,-42,-44,-43,-79,-80,-45,-46,35,-47,35,-47,35,-49,-50,35,35,35,-47,35,35,-51,-52,-53,35,-48,35,35,35,35,35,35,]),'MINUS':([3,19,20,21,27,29,30,31,33,34,55,72,74,75,77,81,82,83,84,85,88,89,102,108,109,110,112,119,126,141,149,157,171,182,],[36,-47,-41,-42,-44,-43,-79,-80,-45,-46,36,-47,36,-47,36,-49,-50,36,36,36,-47,36,36,-51,-52,-53,36,-48,36,36,36,36,36,36,]),'AND':([3,19,20,21,27,29,30,31,33,34,55,72,74,75,81,82,83,88,89,108,109,110,119,],[38,-47,-41,-42,-44,-43,-79,-80,-45,-46,38,-47,38,-47,-49,-50,122,-47,38,-51,-52,-53,-48,]),'OR':([3,19,20,21,27,29,30,31,33,34,55,72,74,75,81,82,83,88,89,108,109,110,119,],[39,-47,-41,-42,-44,-43,-79,-80,-45,-46,39,-47,39,-47,-49,-50,123,-47,39,-51,-52,-53,-48,]),'GREATER':([3,19,20,21,27,29,30,31,33,34,55,72,74,75,81,82,88,89,108,109,110,119,151,],[40,-47,-41,-42,-44,-43,-79,-80,-45,-46,40,-47,40,-47,-49,-50,-47,40,-51,-52,-53,-48,169,]),'GREATER_OR_EQUAL':([3,19,20,21,27,29,30,31,33,34,55,72,74,75,81,82,88,89,108,109,110,119,],[41,-47,-41,-42,-44,-43,-79,-80,-45,-46,41,-47,41,-47,-49,-50,-47,41,-51,-52,-53,-48,]),'MINOR':([3,19,20,21,27,29,30,31,33,34,55,72,74,75,81,82,88,89,108,109,110,119,],[42,-47,-41,-42,-44,-43,-79,-80,-45,-46,42,-47,42,-47,-49,-50,-47,42,-51,-52,-53,-48,]),'MINOR_OR_EQUAL':([3,19,20,21,27,29,30,31,33,34,55,72,74,75,81,82,88,89,108,109,110,119,],[43,-47,-41,-42,-44,-43,-79,-80,-45,-46,43,-47,43,-47,-49,-50,-47,43,-51,-52,-53,-48,]),'ASIGN':([3,19,20,21,27,29,30,31,33,34,44,45,55,72,74,75,81,82,88,89,108,109,110,119,126,134,],[44,46,-41,-42,-44,-43,-79,-80,-45,-46,86,87,44,46,44,-47,-49,-50,-47,44,-51,-52,-53,-48,151,156,]),'NOT':([3,19,20,21,27,29,30,31,33,34,55,72,74,75,81,82,88,89,108,109,110,119,],[45,-47,-41,-42,-44,-43,-79,-80,-45,-46,45,-47,45,-47,-49,-50,-47,45,-51,-52,-53,-48,]),'LCOR':([19,46,72,88,],[48,98,48,124,]),'POINT':([19,72,144,166,],[49,116,166,181,]),'TIMES':([19,20,27,29,33,34,72,75,81,82,88,108,109,110,119,],[-47,50,-44,-43,-45,-46,-47,-47,50,50,-47,-51,-52,-53,-48,]),'DIVIDE':([19,20,27,29,33,34,72,75,81,82,88,108,109,110,119,],[-47,51,-44,-43,-45,-46,-47,-47,51,51,-47,-51,-52,-53,-48,]),'EXPONENTIATION':([19,20,27,29,33,34,72,75,81,82,88,108,109,110,119,],[-47,52,-44,-43,-45,-46,-47,-47,52,52,-47,-51,-52,-53,-48,]),'RETURN':([20,21,22,27,29,30,31,33,34,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,75,79,81,82,83,84,85,88,89,90,91,92,93,94,95,96,100,108,109,110,119,128,133,145,147,148,150,152,153,164,167,168,171,172,173,175,176,177,178,180,185,191,193,194,],[-41,-42,54,-44,-43,-79,-80,-45,-46,-19,114,-18,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-47,-47,-68,-49,-50,-54,-57,-58,-47,-34,-35,-36,-37,-38,-39,-40,-69,-77,-51,-52,-53,-48,-95,-78,-72,-55,-56,-81,-94,-103,-65,-73,-84,-85,-87,-97,-98,-104,-105,-66,-88,-89,-67,-99,-100,]),'END':([20,21,27,29,30,31,33,34,53,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,75,79,81,82,83,84,85,88,89,90,91,92,93,94,95,96,100,108,109,110,112,113,115,119,128,133,141,142,147,148,150,152,153,164,165,168,171,172,173,175,176,177,178,180,185,188,191,192,193,194,],[-41,-42,-44,-43,-79,-80,-45,-46,111,-19,-90,-18,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-47,-47,-68,-49,-50,-54,-57,-58,-47,-34,-35,-36,-37,-38,-39,-40,-69,-77,-51,-52,-53,140,-90,-91,-48,-95,-78,163,164,-55,-56,-81,-94,-103,-65,180,-84,-85,-87,-97,-98,-104,-105,-66,-88,-89,191,-67,193,-99,-100,]),'RPAR':([20,21,27,29,30,31,33,34,47,75,77,81,82,83,84,85,99,101,108,109,110,118,119,121,146,147,148,155,157,158,160,161,162,183,],[-41,-42,-44,-43,-79,-80,-45,-46,100,-47,119,-49,-50,-54,-57,-58,-70,133,-51,-52,-53,143,-48,145,167,-55,-56,-71,172,173,175,176,177,-96,]),'D_POINT':([20,21,27,29,30,31,33,34,73,75,81,82,83,84,85,108,109,110,119,147,148,179,],[-41,-42,-44,-43,-79,-80,-45,-46,117,-47,-49,-50,-54,-57,-58,-51,-52,-53,-48,-55,-56,184,]),'RCOR':([20,21,27,29,30,31,33,34,75,81,82,98,102,108,109,110,119,127,129,130,131,149,170,],[-41,-42,-44,-43,-79,-80,-45,-46,-47,-49,-50,128,134,-51,-52,-53,-48,152,153,-92,-101,168,-93,]),'COMMA':([20,21,27,29,30,31,33,34,75,81,82,99,108,109,110,119,130,159,182,],[-41,-42,-44,-43,-79,-80,-45,-46,-47,-49,-50,132,-51,-52,-53,-48,154,174,187,]),'RKEY':([20,21,27,29,30,31,33,34,75,81,82,108,109,110,119,125,182,190,],[-41,-42,-44,-43,-79,-80,-45,-46,-47,-49,-50,-51,-52,-53,-48,150,-82,-83,]),'GETS':([46,],[96,]),'LKEY':([46,],[97,]),'DELETE':([49,116,],[103,103,]),'INSERT':([49,116,],[104,104,]),'DELETE_AT':([49,116,],[105,105,]),'SEARCH':([49,116,],[106,106,]),'PUSH':([49,116,],[107,107,]),'IN':([78,],[120,]),'':([98,],[131,]),'ELSE':([164,],[179,]),'DO':([186,],[189,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instrucciones':([0,],[1,]),'asignacion':([0,22,56,113,117,143,184,189,],[2,57,57,57,57,57,57,57,]),'expression':([0,22,23,25,37,38,39,46,48,54,56,76,97,113,114,117,122,123,124,135,143,156,169,184,187,189,],[3,55,74,77,83,84,85,89,102,112,55,74,126,55,141,55,74,74,149,157,55,171,182,55,126,55,]),'funciones':([0,],[4,]),'comparacion':([0,22,23,46,56,76,113,117,122,123,143,184,189,],[5,58,73,90,58,118,58,58,147,148,58,58,58,]),'condicional':([0,22,56,113,117,143,184,189,],[6,59,59,59,59,59,59,59,]),'while':([0,22,56,113,117,143,180,184,189,],[7,62,62,62,62,62,185,62,62,]),'for':([0,22,56,113,117,143,184,189,193,],[8,61,61,61,61,61,61,61,194,]),'impresion':([0,22,56,113,117,143,184,189,],[9,60,60,60,60,60,60,60,]),'input':([0,22,56,113,117,143,184,189,],[10,63,63,63,63,63,63,63,]),'callFuncion':([0,22,46,56,113,117,143,184,189,],[11,64,91,64,64,64,64,64,64,]),'addValueHash':([0,22,56,113,117,143,184,189,],[12,65,65,65,65,65,65,65,]),'modValueHash':([0,22,56,113,117,143,184,189,],[13,66,66,66,66,66,66,66,]),'deleteValueHash':([0,22,56,113,117,143,184,189,],[14,67,67,67,67,67,67,67,]),'insertArray':([0,22,56,113,117,143,184,189,],[15,68,68,68,68,68,68,68,]),'deleteArray':([0,22,56,113,117,143,184,189,],[16,69,69,69,69,69,69,69,]),'searchStack':([0,22,56,113,117,143,184,189,],[17,71,71,71,71,71,71,71,]),'pushStack':([0,22,56,113,117,143,184,189,],[18,70,70,70,70,70,70,70,]),'term':([0,22,23,25,35,36,37,38,39,46,48,54,56,76,97,113,114,117,122,123,124,135,143,156,169,184,187,189,],[20,20,20,20,81,82,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'boleano':([0,22,23,25,37,38,39,46,48,54,56,76,97,113,114,117,122,123,124,135,143,156,169,184,187,189,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'encabezado':([0,],[22,]),'factor':([0,22,23,25,28,35,36,37,38,39,46,48,50,51,52,54,56,76,97,98,113,114,117,122,123,124,135,138,139,143,154,156,169,174,184,187,189,],[29,29,29,29,79,29,29,29,29,29,29,29,108,109,110,29,29,29,29,130,29,29,29,29,29,29,29,161,162,29,130,29,29,183,29,29,29,]),'comparador':([3,55,74,89,],[37,37,37,37,]),'repCuerpo':([22,56,113,117,143,184,189,],[53,115,115,142,165,188,192,]),'cuerpo':([22,56,113,117,143,184,189,],[56,113,113,113,113,113,113,]),'diccionario':([46,],[92,]),'getValueHash':([46,],[93,]),'array':([46,],[94,]),'stack':([46,],[95,]),'parametros':([47,121,132,],[101,146,155,]),'cuerpoHash':([97,187,],[125,190,]),'parametrosA':([98,154,],[127,170,]),'vacio':([98,],[129,]),'argumentosA':([136,],[158,]),'cond_else':([164,],[178,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> instrucciones","S'",1,None,None,None),
  ('instrucciones -> asignacion','instrucciones',1,'p_instrucciones','sintactico.py',6),
  ('instrucciones -> expression','instrucciones',1,'p_instrucciones','sintactico.py',7),
  ('instrucciones -> funciones','instrucciones',1,'p_instrucciones','sintactico.py',8),
  ('instrucciones -> comparacion','instrucciones',1,'p_instrucciones','sintactico.py',9),
  ('instrucciones -> condicional','instrucciones',1,'p_instrucciones','sintactico.py',10),
  ('instrucciones -> while','instrucciones',1,'p_instrucciones','sintactico.py',11),
  ('instrucciones -> for','instrucciones',1,'p_instrucciones','sintactico.py',12),
  ('instrucciones -> impresion','instrucciones',1,'p_instrucciones','sintactico.py',13),
  ('instrucciones -> input','instrucciones',1,'p_instrucciones','sintactico.py',14),
  ('instrucciones -> callFuncion','instrucciones',1,'p_instrucciones','sintactico.py',15),
  ('instrucciones -> addValueHash','instrucciones',1,'p_instrucciones','sintactico.py',16),
  ('instrucciones -> modValueHash','instrucciones',1,'p_instrucciones','sintactico.py',17),
  ('instrucciones -> deleteValueHash','instrucciones',1,'p_instrucciones','sintactico.py',18),
  ('instrucciones -> insertArray','instrucciones',1,'p_instrucciones','sintactico.py',19),
  ('instrucciones -> deleteArray','instrucciones',1,'p_instrucciones','sintactico.py',20),
  ('instrucciones -> searchStack','instrucciones',1,'p_instrucciones','sintactico.py',21),
  ('instrucciones -> pushStack','instrucciones',1,'p_instrucciones','sintactico.py',22),
  ('cuerpo -> asignacion','cuerpo',1,'p_body','sintactico.py',28),
  ('cuerpo -> expression','cuerpo',1,'p_body','sintactico.py',29),
  ('cuerpo -> comparacion','cuerpo',1,'p_body','sintactico.py',30),
  ('cuerpo -> condicional','cuerpo',1,'p_body','sintactico.py',31),
  ('cuerpo -> impresion','cuerpo',1,'p_body','sintactico.py',32),
  ('cuerpo -> for','cuerpo',1,'p_body','sintactico.py',33),
  ('cuerpo -> while','cuerpo',1,'p_body','sintactico.py',34),
  ('cuerpo -> input','cuerpo',1,'p_body','sintactico.py',35),
  ('cuerpo -> callFuncion','cuerpo',1,'p_body','sintactico.py',36),
  ('cuerpo -> addValueHash','cuerpo',1,'p_body','sintactico.py',37),
  ('cuerpo -> modValueHash','cuerpo',1,'p_body','sintactico.py',38),
  ('cuerpo -> deleteValueHash','cuerpo',1,'p_body','sintactico.py',39),
  ('cuerpo -> insertArray','cuerpo',1,'p_body','sintactico.py',40),
  ('cuerpo -> deleteArray','cuerpo',1,'p_body','sintactico.py',41),
  ('cuerpo -> pushStack','cuerpo',1,'p_body','sintactico.py',42),
  ('cuerpo -> searchStack','cuerpo',1,'p_body','sintactico.py',43),
  ('asignacion -> VARIABLE ASIGN expression','asignacion',3,'p_asignacion','sintactico.py',47),
  ('asignacion -> VARIABLE ASIGN comparacion','asignacion',3,'p_asignacion','sintactico.py',48),
  ('asignacion -> VARIABLE ASIGN callFuncion','asignacion',3,'p_asignacion','sintactico.py',49),
  ('asignacion -> VARIABLE ASIGN diccionario','asignacion',3,'p_asignacion','sintactico.py',50),
  ('asignacion -> VARIABLE ASIGN getValueHash','asignacion',3,'p_asignacion','sintactico.py',51),
  ('asignacion -> VARIABLE ASIGN array','asignacion',3,'p_asignacion','sintactico.py',52),
  ('asignacion -> VARIABLE ASIGN stack','asignacion',3,'p_asignacion','sintactico.py',53),
  ('expression -> term','expression',1,'p_expression_term','sintactico.py',58),
  ('expression -> boleano','expression',1,'p_expression_term','sintactico.py',59),
  ('term -> factor','term',1,'p_term_factor','sintactico.py',63),
  ('factor -> NUMBER','factor',1,'p_factor_num','sintactico.py',66),
  ('factor -> STRING','factor',1,'p_factor_num','sintactico.py',67),
  ('factor -> FLOAT','factor',1,'p_factor_num','sintactico.py',68),
  ('factor -> VARIABLE','factor',1,'p_factor_num','sintactico.py',69),
  ('factor -> LPAR expression RPAR','factor',3,'p_factor_expr','sintactico.py',73),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','sintactico.py',77),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','sintactico.py',80),
  ('term -> term TIMES factor','term',3,'p_term_times','sintactico.py',83),
  ('term -> term DIVIDE factor','term',3,'p_term_div','sintactico.py',86),
  ('term -> term EXPONENTIATION factor','term',3,'p_term_exp','sintactico.py',89),
  ('comparacion -> expression comparador expression','comparacion',3,'p_comparacion','sintactico.py',93),
  ('comparacion -> expression comparador expression AND comparacion','comparacion',5,'p_comparacion','sintactico.py',94),
  ('comparacion -> expression comparador expression OR comparacion','comparacion',5,'p_comparacion','sintactico.py',95),
  ('comparacion -> expression AND expression','comparacion',3,'p_comparacion','sintactico.py',96),
  ('comparacion -> expression OR expression','comparacion',3,'p_comparacion','sintactico.py',97),
  ('comparador -> GREATER','comparador',1,'p_comparador','sintactico.py',102),
  ('comparador -> GREATER_OR_EQUAL','comparador',1,'p_comparador','sintactico.py',103),
  ('comparador -> MINOR','comparador',1,'p_comparador','sintactico.py',104),
  ('comparador -> MINOR_OR_EQUAL','comparador',1,'p_comparador','sintactico.py',105),
  ('comparador -> ASIGN ASIGN','comparador',2,'p_comparador','sintactico.py',106),
  ('comparador -> NOT ASIGN','comparador',2,'p_comparador','sintactico.py',107),
  ('condicional -> IF comparacion D_POINT repCuerpo END','condicional',5,'p_cond_if','sintactico.py',112),
  ('condicional -> IF comparacion D_POINT repCuerpo END cond_else','condicional',6,'p_cond_if','sintactico.py',113),
  ('cond_else -> ELSE D_POINT repCuerpo END','cond_else',4,'p_cond_else','sintactico.py',117),
  ('impresion -> PUTS factor','impresion',2,'p_puts','sintactico.py',121),
  ('input -> VARIABLE ASIGN GETS','input',3,'p_gets','sintactico.py',124),
  ('parametros -> VARIABLE','parametros',1,'p_par_function','sintactico.py',128),
  ('parametros -> VARIABLE COMMA parametros','parametros',3,'p_par_function','sintactico.py',129),
  ('encabezado -> DEF VARIABLE LPAR RPAR','encabezado',4,'p_header_function','sintactico.py',133),
  ('encabezado -> DEF VARIABLE LPAR parametros RPAR','encabezado',5,'p_header_function','sintactico.py',134),
  ('funciones -> encabezado repCuerpo END','funciones',3,'p_function','sintactico.py',138),
  ('funciones -> encabezado RETURN expression END','funciones',4,'p_function','sintactico.py',139),
  ('funciones -> encabezado cuerpo RETURN expression END','funciones',5,'p_function','sintactico.py',140),
  ('callFuncion -> VARIABLE LPAR RPAR','callFuncion',3,'p_call_function','sintactico.py',144),
  ('callFuncion -> VARIABLE LPAR parametros RPAR','callFuncion',4,'p_call_function','sintactico.py',145),
  ('boleano -> TRUE','boleano',1,'p_boolean','sintactico.py',149),
  ('boleano -> FALSE','boleano',1,'p_boolean','sintactico.py',150),
  ('diccionario -> LKEY cuerpoHash RKEY','diccionario',3,'p_hash','sintactico.py',155),
  ('cuerpoHash -> expression ASIGN GREATER expression','cuerpoHash',4,'p_body_hash','sintactico.py',158),
  ('cuerpoHash -> expression ASIGN GREATER expression COMMA cuerpoHash','cuerpoHash',6,'p_body_hash','sintactico.py',159),
  ('getValueHash -> VARIABLE LCOR expression RCOR','getValueHash',4,'p_get_hash','sintactico.py',163),
  ('addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression','addValueHash',6,'p_add_hash','sintactico.py',166),
  ('modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression','modValueHash',6,'p_mod_hash','sintactico.py',169),
  ('deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR','deleteValueHash',6,'p_del_hash','sintactico.py',172),
  ('while -> WHILE LPAR comparacion RPAR repCuerpo END','while',6,'p_while','sintactico.py',179),
  ('while -> WHILE LPAR comparacion RPAR repCuerpo END while','while',7,'p_while','sintactico.py',180),
  ('repCuerpo -> cuerpo','repCuerpo',1,'p_repCuerpo','sintactico.py',183),
  ('repCuerpo -> cuerpo repCuerpo','repCuerpo',2,'p_repCuerpo','sintactico.py',184),
  ('parametrosA -> factor','parametrosA',1,'p_parA_function','sintactico.py',189),
  ('parametrosA -> factor COMMA parametrosA','parametrosA',3,'p_parA_function','sintactico.py',190),
  ('array -> LCOR parametrosA RCOR','array',3,'p_array','sintactico.py',193),
  ('array -> LCOR RCOR','array',2,'p_array','sintactico.py',194),
  ('argumentosA -> NUMBER COMMA factor','argumentosA',3,'p_argumentos_array','sintactico.py',198),
  ('insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR','insertArray',6,'p_insert_array','sintactico.py',201),
  ('deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR','deleteArray',6,'p_delete_array','sintactico.py',205),
  ('for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END','for',10,'p_for','sintactico.py',213),
  ('for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for','for',11,'p_for','sintactico.py',214),
  ('vacio -> ','vacio',1,'p_vacio','sintactico.py',218),
  ('stack -> LCOR parametrosA RCOR','stack',3,'p_stack','sintactico.py',220),
  ('stack -> LCOR vacio RCOR','stack',3,'p_stack','sintactico.py',221),
  ('searchStack -> VARIABLE POINT SEARCH LPAR factor RPAR','searchStack',6,'p_search_stack','sintactico.py',224),
  ('pushStack -> VARIABLE POINT PUSH LPAR factor RPAR','pushStack',6,'p_push_stack','sintactico.py',227),
]
