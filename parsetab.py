
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASIGN COMMA DEF DELETE DELETE_AT DIVIDE DO D_POINT ELSE END EXPONENTIATION FALSE FLOAT FOR GETS GREATER GREATER_OR_EQUAL IF IN INSERT LCOR LKEY LPAR MINOR MINOR_OR_EQUAL MINUS NOT NUMBER OR PLUS POINT PUSH PUTS QUESTION RCOR RETURN RKEY RPAR SEARCH STRING TIMES TRUE VARIABLE WHILEinstrucciones : asignacion\n                    | expression\n                    | funciones\n                    | comparacion\n                    | condicional\n                    | while\n                    | for\n                    | impresion\n                    | input\n                    | callFuncion\n                    | addValueHash\n                    | modValueHash\n                    | deleteValueHash\n                    | insertArray\n                    | deleteArray\n                    | searchStack\n                    | pushStack    \n                    | metodoBoleano    \n                    | opMatematicas \n     cuerpo : asignacion\n                | expression\n                | comparacion\n                | condicional\n                | impresion\n                | for\n                | while\n                | input\n                | callFuncion\n                | addValueHash\n                | modValueHash\n                | deleteValueHash\n                | insertArray\n                | deleteArray\n                | pushStack\n                | searchStack\n                | opMatematicas\n    asignacion : VARIABLE ASIGN expression\n                | VARIABLE ASIGN comparacion\n                | VARIABLE ASIGN callFuncion\n                | VARIABLE ASIGN diccionario\n                | VARIABLE ASIGN getValueHash\n                | VARIABLE ASIGN array\n                | VARIABLE ASIGN stack\n                | VARIABLE tipo_asignacion factor\n                | VARIABLE ASIGN opMatematicas\n    tipo_asignacion : PLUS ASIGN\n                        | MINUS ASIGN \n                        | TIMES ASIGN \n                        | DIVIDE ASIGN \n                        | EXPONENTIATION ASIGN \n    expression : term \n                    | boleano\n    term : factorfactor : NUMBER\n                | STRING\n                | FLOAT\n                | VARIABLE\n    factor : LPAR expression RPARcomparacion : expression comparador expression\n                    | expression comparador expression AND comparacion\n                    | expression comparador expression OR comparacion\n                    | expression AND expression\n                    | expression OR expression\n    \n    comparador : GREATER \n                | GREATER_OR_EQUAL\n                | MINOR\n                | MINOR_OR_EQUAL\n                | ASIGN ASIGN\n                | NOT ASIGN\n    condicional : IF comparacion D_POINT repCuerpo END\n                    | IF comparacion D_POINT repCuerpo END cond_else\n    cond_else : ELSE D_POINT repCuerpo ENDimpresion : PUTS factorinput : VARIABLE ASIGN GETS parametros : VARIABLE\n                    | VARIABLE COMMA parametros\n    encabezado : DEF VARIABLE LPAR RPAR\n                    | DEF VARIABLE LPAR parametros RPAR\n    funciones : encabezado repCuerpo END\n                | encabezado RETURN expression END\n                | encabezado repCuerpo RETURN expression END\n    callFuncion : VARIABLE LPAR RPAR\n                | VARIABLE LPAR parametros RPAR\n    boleano : TRUE \n                | FALSE\n    diccionario : LKEY cuerpoHash RKEYcuerpoHash : expression ASIGN GREATER expression\n                    | expression ASIGN GREATER expression COMMA cuerpoHash\n    getValueHash : VARIABLE LCOR expression RCORaddValueHash : VARIABLE LCOR expression RCOR ASIGN expressionmodValueHash : VARIABLE LCOR expression RCOR ASIGN expressiondeleteValueHash : VARIABLE POINT DELETE LPAR expression RPARmetodoBoleano : VARIABLE POINT VARIABLE QUESTION LPAR expression RPAR\n                    | VARIABLE POINT VARIABLE QUESTION LPAR RPAR\n    while : WHILE LPAR comparacion RPAR repCuerpo END\n            | WHILE LPAR comparacion RPAR repCuerpo END while\n    repCuerpo : cuerpo \n                | cuerpo repCuerpo\n     parametrosA : factor\n                    | factor COMMA parametrosA\n    array : LCOR parametrosA RCOR\n             | LCOR RCOR\n    argumentosA : NUMBER COMMA factor\n    insertArray : VARIABLE POINT INSERT LPAR argumentosA RPAR\n    deleteArray : VARIABLE POINT DELETE_AT LPAR NUMBER RPAR\n    for : FOR VARIABLE IN NUMBER POINT POINT NUMBER  DO repCuerpo END\n            | FOR VARIABLE IN NUMBER POINT POINT NUMBER  DO repCuerpo END for\n    vacio : ""stack : LCOR parametrosA RCOR\n            | LCOR vacio RCOR\n    searchStack : VARIABLE POINT SEARCH LPAR factor RPAR\n    pushStack : VARIABLE POINT PUSH LPAR factor RPAR\n     opMatematicas : suma\n                    | resta\n                    | multiplicacion\n                    | division\n                    | exponenciacion\n    suma : operadores PLUS operadores\n            | operadores PLUS opMatematicas\n            | operadores PLUS LPAR operadores RPAR\n            | operadores PLUS LPAR opMatematicas RPAR\n    resta : VARIABLE MINUS NUMBER \n            | operadores MINUS operadores\n            | operadores MINUS opMatematicas\n            | operadores MINUS LPAR operadores RPAR\n            | operadores MINUS LPAR opMatematicas RPAR\n     multiplicacion : operadores TIMES operadores\n                    | operadores TIMES LPAR operadores RPAR\n                    | operadores TIMES LPAR opMatematicas RPAR\n     division : operadores DIVIDE operadores\n                | operadores DIVIDE LPAR operadores RPAR\n                | operadores DIVIDE LPAR opMatematicas RPAR\n     exponenciacion : operadores EXPONENTIATION operadores\n                    | LPAR operadores RPAR EXPONENTIATION operadores\n                    | LPAR opMatematicas RPAR EXPONENTIATION operadores\n     operadores : enteros\n                | FLOAT  \n     enteros : NUMBER\n                | MINUS NUMBER\n    '
    
_lr_action_items = {'VARIABLE':([0,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,42,43,44,45,46,47,48,49,50,51,54,55,56,57,58,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,90,91,99,101,102,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,135,136,137,138,139,140,142,146,150,153,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,174,178,179,182,185,186,190,194,197,205,206,208,210,211,212,214,215,223,225,226,228,229,230,231,232,233,234,235,236,237,238,240,243,244,245,246,247,248,249,251,256,257,259,261,263,265,266,],[21,-53,-51,-52,84,89,97,98,-54,89,-113,-114,-115,-116,-117,-84,-85,100,-55,-56,-136,89,89,89,-64,-65,-66,-67,112,89,125,89,129,89,-21,84,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-57,-54,-56,-57,89,89,-73,159,159,-139,-59,-62,-63,-68,-69,-57,-37,-38,-39,-40,-41,-42,-43,-45,-74,89,89,-44,-82,-122,-47,-46,-48,-49,-50,89,84,-58,125,-118,-119,159,-137,-138,-123,-124,159,-127,159,-130,159,-133,89,89,89,-102,125,-83,89,89,89,84,-77,159,-60,-61,-86,-101,-110,89,89,89,-70,-134,-135,-78,-120,-121,-125,-126,-128,-129,-131,-132,-89,89,-90,-92,-104,89,-105,-111,-112,-71,-95,84,-96,89,84,-72,-106,-107,]),'IF':([0,22,23,24,25,30,32,33,34,35,36,37,38,42,43,44,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,99,106,107,108,109,112,113,114,115,116,117,118,119,120,121,124,126,135,146,150,154,155,157,158,160,161,163,165,167,174,179,190,194,205,206,208,210,211,223,225,226,228,229,230,231,232,233,234,235,236,237,240,243,244,246,247,248,249,251,256,257,261,263,265,266,],[26,-53,-51,-52,26,-54,-113,-114,-115,-116,-117,-84,-85,-55,-56,-136,-21,26,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-57,-54,-56,-57,-73,-139,-59,-62,-63,-57,-37,-38,-39,-40,-41,-42,-43,-45,-74,-44,-82,-122,26,-58,-118,-119,-137,-138,-123,-124,-127,-130,-133,-102,-83,26,-77,-60,-61,-86,-101,-110,-70,-134,-135,-78,-120,-121,-125,-126,-128,-129,-131,-132,-89,-90,-92,-104,-105,-111,-112,-71,-95,26,-96,26,-72,-106,-107,]),'WHILE':([0,22,23,24,25,30,32,33,34,35,36,37,38,42,43,44,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,99,106,107,108,109,112,113,114,115,116,117,118,119,120,121,124,126,135,146,150,154,155,157,158,160,161,163,165,167,174,179,190,194,205,206,208,210,211,223,225,226,228,229,230,231,232,233,234,235,236,237,240,243,244,246,247,248,249,251,256,257,261,263,265,266,],[27,-53,-51,-52,27,-54,-113,-114,-115,-116,-117,-84,-85,-55,-56,-136,-21,27,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-57,-54,-56,-57,-73,-139,-59,-62,-63,-57,-37,-38,-39,-40,-41,-42,-43,-45,-74,-44,-82,-122,27,-58,-118,-119,-137,-138,-123,-124,-127,-130,-133,-102,-83,27,-77,-60,-61,-86,-101,-110,-70,-134,-135,-78,-120,-121,-125,-126,-128,-129,-131,-132,-89,-90,-92,-104,-105,-111,-112,-71,27,27,-96,27,-72,-106,-107,]),'FOR':([0,22,23,24,25,30,32,33,34,35,36,37,38,42,43,44,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,99,106,107,108,109,112,113,114,115,116,117,118,119,120,121,124,126,135,146,150,154,155,157,158,160,161,163,165,167,174,179,190,194,205,206,208,210,211,223,225,226,228,229,230,231,232,233,234,235,236,237,240,243,244,246,247,248,249,251,256,257,261,263,265,266,],[29,-53,-51,-52,29,-54,-113,-114,-115,-116,-117,-84,-85,-55,-56,-136,-21,29,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-57,-54,-56,-57,-73,-139,-59,-62,-63,-57,-37,-38,-39,-40,-41,-42,-43,-45,-74,-44,-82,-122,29,-58,-118,-119,-137,-138,-123,-124,-127,-130,-133,-102,-83,29,-77,-60,-61,-86,-101,-110,-70,-134,-135,-78,-120,-121,-125,-126,-128,-129,-131,-132,-89,-90,-92,-104,-105,-111,-112,-71,-95,29,-96,29,-72,29,-107,]),'PUTS':([0,22,23,24,25,30,32,33,34,35,36,37,38,42,43,44,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,99,106,107,108,109,112,113,114,115,116,117,118,119,120,121,124,126,135,146,150,154,155,157,158,160,161,163,165,167,174,179,190,194,205,206,208,210,211,223,225,226,228,229,230,231,232,233,234,235,236,237,240,243,244,246,247,248,249,251,256,257,261,263,265,266,],[31,-53,-51,-52,31,-54,-113,-114,-115,-116,-117,-84,-85,-55,-56,-136,-21,31,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-57,-54,-56,-57,-73,-139,-59,-62,-63,-57,-37,-38,-39,-40,-41,-42,-43,-45,-74,-44,-82,-122,31,-58,-118,-119,-137,-138,-123,-124,-127,-130,-133,-102,-83,31,-77,-60,-61,-86,-101,-110,-70,-134,-135,-78,-120,-121,-125,-126,-128,-129,-131,-132,-89,-90,-92,-104,-105,-111,-112,-71,-95,31,-96,31,-72,-106,-107,]),'TRUE':([0,22,23,24,25,26,28,30,32,33,34,35,36,37,38,42,43,44,45,46,47,48,49,50,51,54,57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,90,91,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,126,135,142,146,150,154,155,157,158,160,161,163,165,167,168,169,170,174,179,182,190,194,205,206,208,210,211,214,215,223,225,226,228,229,230,231,232,233,234,235,236,237,238,240,243,244,246,247,248,249,251,256,257,259,261,263,265,266,],[37,-53,-51,-52,37,37,37,-54,-113,-114,-115,-116,-117,-84,-85,-55,-56,-136,37,37,37,-64,-65,-66,-67,37,37,37,-21,37,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-57,-54,-56,-57,37,37,-73,-139,-59,-62,-63,-68,-69,-57,-37,-38,-39,-40,-41,-42,-43,-45,-74,37,-44,-82,-122,37,37,-58,-118,-119,-137,-138,-123,-124,-127,-130,-133,37,37,37,-102,-83,37,37,-77,-60,-61,-86,-101,-110,37,37,-70,-134,-135,-78,-120,-121,-125,-126,-128,-129,-131,-132,-89,37,-90,-92,-104,-105,-111,-112,-71,-95,37,-96,37,37,-72,-106,-107,]),'FALSE':([0,22,23,24,25,26,28,30,32,33,34,35,36,37,38,42,43,44,45,46,47,48,49,50,51,54,57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,90,91,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,126,135,142,146,150,154,155,157,158,160,161,163,165,167,168,169,170,174,179,182,190,194,205,206,208,210,211,214,215,223,225,226,228,229,230,231,232,233,234,235,236,237,238,240,243,244,246,247,248,249,251,256,257,259,261,263,265,266,],[38,-53,-51,-52,38,38,38,-54,-113,-114,-115,-116,-117,-84,-85,-55,-56,-136,38,38,38,-64,-65,-66,-67,38,38,38,-21,38,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-57,-54,-56,-57,38,38,-73,-139,-59,-62,-63,-68,-69,-57,-37,-38,-39,-40,-41,-42,-43,-45,-74,38,-44,-82,-122,38,38,-58,-118,-119,-137,-138,-123,-124,-127,-130,-133,38,38,38,-102,-83,38,38,-77,-60,-61,-86,-101,-110,38,38,-70,-134,-135,-78,-120,-121,-125,-126,-128,-129,-131,-132,-89,38,-90,-92,-104,-105,-111,-112,-71,-95,38,-96,38,38,-72,-106,-107,]),'DEF':([0,],[39,]),'LPAR':([0,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,42,43,44,45,46,47,48,49,50,51,54,55,57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,90,91,99,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,130,131,132,133,134,135,136,137,138,139,140,142,146,150,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,174,179,181,182,185,186,190,194,197,205,206,208,210,211,212,214,215,223,225,226,228,229,230,231,232,233,234,235,236,237,238,240,243,244,245,246,247,248,249,251,256,257,259,261,263,265,266,],[28,56,-53,-51,-52,28,90,91,28,-54,90,-113,-114,-115,-116,-117,-84,-85,-55,-56,-136,90,90,90,-64,-65,-66,-67,28,90,90,90,-21,28,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,56,-54,-56,-57,90,90,-73,153,156,162,164,166,-139,-59,-62,-63,-68,-69,56,-37,-38,-39,-40,-41,-42,-43,-45,-74,90,90,-44,-82,182,183,184,185,186,-122,-47,-46,-48,-49,-50,90,28,-58,-118,-119,197,-137,-138,-123,-124,197,-127,197,-130,197,-133,90,90,90,-102,-83,215,90,90,90,28,-77,197,-60,-61,-86,-101,-110,90,90,90,-70,-134,-135,-78,-120,-121,-125,-126,-128,-129,-131,-132,-89,90,-90,-92,-104,90,-105,-111,-112,-71,-95,28,-96,90,28,-72,-106,-107,]),'NUMBER':([0,22,23,24,25,26,28,30,31,32,33,34,35,36,37,38,41,42,43,44,45,46,47,48,49,50,51,54,55,57,59,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,90,91,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,135,136,137,138,139,140,142,146,150,151,152,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,174,179,182,183,184,185,186,190,191,192,194,197,205,206,208,210,211,212,214,215,223,225,226,228,229,230,231,232,233,234,235,236,237,238,240,243,244,245,246,247,248,249,251,252,256,257,259,261,263,265,266,],[30,-53,-51,-52,30,87,96,-54,87,-113,-114,-115,-116,-117,-84,-85,106,-55,-56,-136,87,87,87,-64,-65,-66,-67,30,87,87,135,87,-21,30,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-57,-54,-56,-57,87,87,-73,158,158,158,158,158,-139,-59,-62,-63,-68,-69,-57,-37,-38,-39,-40,-41,-42,-43,-45,-74,87,87,-44,-82,-122,-47,-46,-48,-49,-50,87,30,-58,135,193,-118,-119,158,-137,-138,-123,-124,158,-127,158,-130,158,-133,87,87,87,-102,-83,87,218,219,87,87,30,158,158,-77,158,-60,-61,-86,-101,-110,87,87,87,-70,-134,-135,-78,-120,-121,-125,-126,-128,-129,-131,-132,-89,87,-90,-92,-104,87,-105,-111,-112,-71,-95,258,30,-96,87,30,-72,-106,-107,]),'STRING':([0,22,23,24,25,26,28,30,31,32,33,34,35,36,37,38,42,43,44,45,46,47,48,49,50,51,54,55,57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,90,91,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,135,136,137,138,139,140,142,146,150,154,155,157,158,160,161,163,165,167,168,169,170,174,179,182,185,186,190,194,205,206,208,210,211,212,214,215,223,225,226,228,229,230,231,232,233,234,235,236,237,238,240,243,244,245,246,247,248,249,251,256,257,259,261,263,265,266,],[42,-53,-51,-52,42,42,42,-54,42,-113,-114,-115,-116,-117,-84,-85,-55,-56,-136,42,42,42,-64,-65,-66,-67,42,42,42,42,-21,42,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-57,-54,-56,-57,42,42,-73,-139,-59,-62,-63,-68,-69,-57,-37,-38,-39,-40,-41,-42,-43,-45,-74,42,42,-44,-82,-122,-47,-46,-48,-49,-50,42,42,-58,-118,-119,-137,-138,-123,-124,-127,-130,-133,42,42,42,-102,-83,42,42,42,42,-77,-60,-61,-86,-101,-110,42,42,42,-70,-134,-135,-78,-120,-121,-125,-126,-128,-129,-131,-132,-89,42,-90,-92,-104,42,-105,-111,-112,-71,-95,42,-96,42,42,-72,-106,-107,]),'FLOAT':([0,22,23,24,25,26,28,30,31,32,33,34,35,36,37,38,42,43,44,45,46,47,48,49,50,51,54,55,57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,90,91,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,135,136,137,138,139,140,142,146,150,154,155,156,157,158,160,161,162,163,164,165,166,167,168,169,170,174,179,182,185,186,190,191,192,194,197,205,206,208,210,211,212,214,215,223,225,226,228,229,230,231,232,233,234,235,236,237,238,240,243,244,245,246,247,248,249,251,256,257,259,261,263,265,266,],[43,-53,-51,-52,43,88,95,-54,88,-113,-114,-115,-116,-117,-84,-85,-55,-56,-136,88,88,88,-64,-65,-66,-67,43,88,88,88,-21,43,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-57,-54,-56,-57,88,88,-73,157,157,157,157,157,-139,-59,-62,-63,-68,-69,-57,-37,-38,-39,-40,-41,-42,-43,-45,-74,88,88,-44,-82,-122,-47,-46,-48,-49,-50,88,43,-58,-118,-119,157,-137,-138,-123,-124,157,-127,157,-130,157,-133,88,88,88,-102,-83,88,88,88,43,157,157,-77,157,-60,-61,-86,-101,-110,88,88,88,-70,-134,-135,-78,-120,-121,-125,-126,-128,-129,-131,-132,-89,88,-90,-92,-104,88,-105,-111,-112,-71,-95,43,-96,88,43,-72,-106,-107,]),'MINUS':([0,21,22,23,24,25,28,30,32,33,34,35,36,37,38,40,42,43,44,54,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,92,95,96,97,99,101,102,103,104,105,106,107,108,109,112,113,114,115,116,117,118,119,120,121,124,126,135,146,150,154,155,156,157,158,159,160,161,162,163,164,165,166,167,174,179,190,191,192,194,196,197,199,201,203,205,206,208,210,211,223,225,226,228,229,230,231,232,233,234,235,236,237,240,243,244,246,247,248,249,251,256,257,261,263,265,266,],[41,59,-53,-51,-52,41,41,-54,-113,-114,-115,-116,-117,-84,-85,102,-55,-56,-136,41,-21,41,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,59,-54,-56,-57,102,-137,-138,151,-73,41,41,41,41,41,-139,-59,-62,-63,151,-37,-38,-39,-40,-41,-42,-43,-45,-74,-44,-82,-122,41,-58,102,-119,41,-137,-138,151,102,-124,41,-127,41,-130,41,-133,-102,-83,41,41,41,-77,102,41,102,102,102,-60,-61,-86,-101,-110,-70,-134,-135,-78,-120,-121,-125,-126,-128,-129,-131,-132,-89,-90,-92,-104,-105,-111,-112,-71,-95,41,-96,41,-72,-106,-107,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,30,32,33,34,35,36,37,38,42,43,44,87,88,89,99,106,107,108,109,112,113,114,115,116,117,118,119,120,121,124,126,135,141,150,154,155,157,158,160,161,163,165,167,174,179,188,205,206,208,210,211,222,223,225,226,229,230,231,232,233,234,235,236,237,240,242,243,244,246,247,248,249,251,254,257,263,265,266,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-57,-53,-51,-52,-54,-113,-114,-115,-116,-117,-84,-85,-55,-56,-136,-54,-56,-57,-73,-139,-59,-62,-63,-57,-37,-38,-39,-40,-41,-42,-43,-45,-74,-44,-82,-122,-79,-58,-118,-119,-137,-138,-123,-124,-127,-130,-133,-102,-83,-80,-60,-61,-86,-101,-110,-81,-70,-134,-135,-120,-121,-125,-126,-128,-129,-131,-132,-89,-90,-94,-92,-104,-105,-111,-112,-71,-95,-93,-96,-72,-106,-107,]),'AND':([3,21,22,23,24,30,37,38,42,43,66,84,86,87,88,89,107,112,113,150,],[46,-57,-53,-51,-52,-54,-84,-85,-55,-56,46,-57,46,-54,-56,-57,168,-57,46,-58,]),'OR':([3,21,22,23,24,30,37,38,42,43,66,84,86,87,88,89,107,112,113,150,],[47,-57,-53,-51,-52,-54,-84,-85,-55,-56,47,-57,47,-54,-56,-57,169,-57,47,-58,]),'GREATER':([3,21,22,23,24,30,37,38,42,43,66,84,86,87,88,89,112,113,150,209,],[48,-57,-53,-51,-52,-54,-84,-85,-55,-56,48,-57,48,-54,-56,-57,-57,48,-58,238,]),'GREATER_OR_EQUAL':([3,21,22,23,24,30,37,38,42,43,66,84,86,87,88,89,112,113,150,],[49,-57,-53,-51,-52,-54,-84,-85,-55,-56,49,-57,49,-54,-56,-57,-57,49,-58,]),'MINOR':([3,21,22,23,24,30,37,38,42,43,66,84,86,87,88,89,112,113,150,],[50,-57,-53,-51,-52,-54,-84,-85,-55,-56,50,-57,50,-54,-56,-57,-57,50,-58,]),'MINOR_OR_EQUAL':([3,21,22,23,24,30,37,38,42,43,66,84,86,87,88,89,112,113,150,],[51,-57,-53,-51,-52,-54,-84,-85,-55,-56,51,-57,51,-54,-56,-57,-57,51,-58,]),'ASIGN':([3,21,22,23,24,30,37,38,42,43,52,53,59,60,61,62,63,66,84,86,87,88,89,112,113,150,172,180,],[52,54,-53,-51,-52,-54,-84,-85,-55,-56,110,111,136,137,138,139,140,52,54,52,-54,-56,-57,-57,52,-58,209,214,]),'NOT':([3,21,22,23,24,30,37,38,42,43,66,84,86,87,88,89,112,113,150,],[53,-57,-53,-51,-52,-54,-84,-85,-55,-56,53,-57,53,-54,-56,-57,-57,53,-58,]),'LCOR':([21,54,84,112,],[57,123,57,170,]),'POINT':([21,84,193,227,],[58,145,227,252,]),'PLUS':([21,30,40,43,44,84,92,95,96,106,154,157,158,160,196,199,201,203,],[60,-138,101,-137,-136,60,101,-137,-138,-139,101,-137,-138,101,101,101,101,101,]),'TIMES':([21,30,40,43,44,84,92,95,96,106,154,157,158,160,196,199,201,203,],[61,-138,103,-137,-136,61,103,-137,-138,-139,103,-137,-138,103,103,103,103,103,]),'DIVIDE':([21,30,40,43,44,84,92,95,96,106,154,157,158,160,196,199,201,203,],[62,-138,104,-137,-136,62,104,-137,-138,-139,104,-137,-138,104,104,104,104,104,]),'EXPONENTIATION':([21,30,40,43,44,84,92,95,96,106,148,149,154,157,158,160,196,199,201,203,229,230,231,232,],[63,-138,105,-137,-136,63,105,-137,-138,-139,191,192,105,-137,-138,105,105,105,105,105,191,192,191,192,]),'END':([22,23,24,30,32,33,34,35,36,37,38,42,43,44,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,99,106,107,108,109,112,113,114,115,116,117,118,119,120,121,124,126,135,143,144,150,154,155,157,158,160,161,163,165,167,174,179,187,189,205,206,208,210,211,223,224,225,226,229,230,231,232,233,234,235,236,237,240,243,244,246,247,248,249,251,257,260,263,264,265,266,],[-53,-51,-52,-54,-113,-114,-115,-116,-117,-84,-85,-55,-56,-136,141,-21,-97,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-57,-54,-56,-57,-73,-139,-59,-62,-63,-57,-37,-38,-39,-40,-41,-42,-43,-45,-74,-44,-82,-122,188,-98,-58,-118,-119,-137,-138,-123,-124,-127,-130,-133,-102,-83,222,223,-60,-61,-86,-101,-110,-70,251,-134,-135,-120,-121,-125,-126,-128,-129,-131,-132,-89,-90,-92,-104,-105,-111,-112,-71,-95,-96,263,-72,265,-106,-107,]),'RETURN':([22,23,24,25,30,32,33,34,35,36,37,38,42,43,44,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,99,106,107,108,109,112,113,114,115,116,117,118,119,120,121,124,126,135,144,150,154,155,157,158,160,161,163,165,167,174,179,194,205,206,208,210,211,223,225,226,228,229,230,231,232,233,234,235,236,237,240,243,244,246,247,248,249,251,257,263,265,266,],[-53,-51,-52,65,-54,-113,-114,-115,-116,-117,-84,-85,-55,-56,-136,142,-21,-97,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-57,-54,-56,-57,-73,-139,-59,-62,-63,-57,-37,-38,-39,-40,-41,-42,-43,-45,-74,-44,-82,-122,-98,-58,-118,-119,-137,-138,-123,-124,-127,-130,-133,-102,-83,-77,-60,-61,-86,-101,-110,-70,-134,-135,-78,-120,-121,-125,-126,-128,-129,-131,-132,-89,-90,-92,-104,-105,-111,-112,-71,-95,-96,-72,-106,-107,]),'RPAR':([22,23,24,32,33,34,35,36,37,38,42,44,56,87,88,89,92,93,94,95,96,97,106,107,108,109,125,127,135,147,150,153,154,155,157,158,160,161,163,165,167,195,196,198,199,200,201,202,203,204,205,206,213,215,216,217,219,220,221,225,226,229,230,231,232,233,234,235,236,241,255,],[-53,-51,-52,-113,-114,-115,-116,-117,-84,-85,-55,-136,126,-54,-56,-57,148,149,150,-56,-54,-57,-139,-59,-62,-63,-75,179,-122,190,-58,194,-118,-119,-137,-138,-123,-124,-127,-130,-133,228,229,230,231,232,233,234,235,236,-60,-61,-76,242,243,244,246,247,248,-134,-135,-120,-121,-125,-126,-128,-129,-131,-132,254,-103,]),'D_POINT':([22,23,24,37,38,42,85,87,88,89,107,108,109,150,205,206,250,],[-53,-51,-52,-84,-85,-55,146,-54,-56,-57,-59,-62,-63,-58,-60,-61,256,]),'RCOR':([22,23,24,37,38,42,87,88,89,123,128,150,173,175,176,177,207,239,],[-53,-51,-52,-84,-85,-55,-54,-56,-57,174,180,-58,210,211,-99,-108,237,-100,]),'COMMA':([22,23,24,37,38,42,87,88,89,125,150,176,218,253,],[-53,-51,-52,-84,-85,-55,-54,-56,-57,178,-58,212,245,259,]),'RKEY':([22,23,24,37,38,42,87,88,89,150,171,253,262,],[-53,-51,-52,-84,-85,-55,-54,-56,-57,-58,208,-87,-88,]),'GETS':([54,],[121,]),'LKEY':([54,],[122,]),'DELETE':([58,145,],[130,130,]),'INSERT':([58,145,],[131,131,]),'DELETE_AT':([58,145,],[132,132,]),'SEARCH':([58,145,],[133,133,]),'PUSH':([58,145,],[134,134,]),'IN':([98,],[152,]),'':([123,],[177,]),'QUESTION':([129,],[181,]),'ELSE':([223,],[250,]),'DO':([258,],[261,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instrucciones':([0,],[1,]),'asignacion':([0,25,67,146,190,256,261,],[2,68,68,68,68,68,68,]),'expression':([0,25,26,28,45,46,47,54,57,65,67,90,91,122,142,146,168,169,170,182,190,214,215,238,256,259,261,],[3,66,86,94,107,108,109,113,128,143,66,94,86,172,187,66,86,86,207,216,66,240,241,253,66,172,66,]),'funciones':([0,],[4,]),'comparacion':([0,25,26,54,67,91,146,168,169,190,256,261,],[5,69,85,114,69,147,69,205,206,69,69,69,]),'condicional':([0,25,67,146,190,256,261,],[6,70,70,70,70,70,70,]),'while':([0,25,67,146,190,251,256,261,],[7,73,73,73,73,257,73,73,]),'for':([0,25,67,146,190,256,261,265,],[8,72,72,72,72,72,72,266,]),'impresion':([0,25,67,146,190,256,261,],[9,71,71,71,71,71,71,]),'input':([0,25,67,146,190,256,261,],[10,74,74,74,74,74,74,]),'callFuncion':([0,25,54,67,146,190,256,261,],[11,75,115,75,75,75,75,75,]),'addValueHash':([0,25,67,146,190,256,261,],[12,76,76,76,76,76,76,]),'modValueHash':([0,25,67,146,190,256,261,],[13,77,77,77,77,77,77,]),'deleteValueHash':([0,25,67,146,190,256,261,],[14,78,78,78,78,78,78,]),'insertArray':([0,25,67,146,190,256,261,],[15,79,79,79,79,79,79,]),'deleteArray':([0,25,67,146,190,256,261,],[16,80,80,80,80,80,80,]),'searchStack':([0,25,67,146,190,256,261,],[17,82,82,82,82,82,82,]),'pushStack':([0,25,67,146,190,256,261,],[18,81,81,81,81,81,81,]),'metodoBoleano':([0,],[19,]),'opMatematicas':([0,25,28,54,67,101,102,146,156,162,164,166,190,197,256,261,],[20,83,93,120,83,155,161,83,198,200,202,204,83,93,83,83,]),'factor':([0,25,26,28,31,45,46,47,54,55,57,65,67,90,91,122,123,142,146,168,169,170,182,185,186,190,212,214,215,238,245,256,259,261,],[22,22,22,22,99,22,22,22,22,124,22,22,22,22,22,22,176,22,22,22,22,22,22,220,221,22,176,22,22,22,255,22,22,22,]),'term':([0,25,26,28,45,46,47,54,57,65,67,90,91,122,142,146,168,169,170,182,190,214,215,238,256,259,261,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'boleano':([0,25,26,28,45,46,47,54,57,65,67,90,91,122,142,146,168,169,170,182,190,214,215,238,256,259,261,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'encabezado':([0,],[25,]),'suma':([0,25,28,54,67,101,102,146,156,162,164,166,190,197,256,261,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'resta':([0,25,28,54,67,101,102,146,156,162,164,166,190,197,256,261,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'multiplicacion':([0,25,28,54,67,101,102,146,156,162,164,166,190,197,256,261,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'division':([0,25,28,54,67,101,102,146,156,162,164,166,190,197,256,261,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'exponenciacion':([0,25,28,54,67,101,102,146,156,162,164,166,190,197,256,261,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'operadores':([0,25,28,54,67,101,102,103,104,105,146,156,162,164,166,190,191,192,197,256,261,],[40,40,92,40,40,154,160,163,165,167,40,196,199,201,203,40,225,226,92,40,40,]),'enteros':([0,25,28,54,67,101,102,103,104,105,146,156,162,164,166,190,191,192,197,256,261,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'comparador':([3,66,86,113,],[45,45,45,45,]),'tipo_asignacion':([21,84,],[55,55,]),'repCuerpo':([25,67,146,190,256,261,],[64,144,189,224,260,264,]),'cuerpo':([25,67,146,190,256,261,],[67,67,67,67,67,67,]),'diccionario':([54,],[116,]),'getValueHash':([54,],[117,]),'array':([54,],[118,]),'stack':([54,],[119,]),'parametros':([56,153,178,],[127,195,213,]),'cuerpoHash':([122,259,],[171,262,]),'parametrosA':([123,212,],[173,239,]),'vacio':([123,],[175,]),'argumentosA':([183,],[217,]),'cond_else':([223,],[249,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> instrucciones","S'",1,None,None,None),
  ('instrucciones -> asignacion','instrucciones',1,'p_instrucciones','sintactico.py',6),
  ('instrucciones -> expression','instrucciones',1,'p_instrucciones','sintactico.py',7),
  ('instrucciones -> funciones','instrucciones',1,'p_instrucciones','sintactico.py',8),
  ('instrucciones -> comparacion','instrucciones',1,'p_instrucciones','sintactico.py',9),
  ('instrucciones -> condicional','instrucciones',1,'p_instrucciones','sintactico.py',10),
  ('instrucciones -> while','instrucciones',1,'p_instrucciones','sintactico.py',11),
  ('instrucciones -> for','instrucciones',1,'p_instrucciones','sintactico.py',12),
  ('instrucciones -> impresion','instrucciones',1,'p_instrucciones','sintactico.py',13),
  ('instrucciones -> input','instrucciones',1,'p_instrucciones','sintactico.py',14),
  ('instrucciones -> callFuncion','instrucciones',1,'p_instrucciones','sintactico.py',15),
  ('instrucciones -> addValueHash','instrucciones',1,'p_instrucciones','sintactico.py',16),
  ('instrucciones -> modValueHash','instrucciones',1,'p_instrucciones','sintactico.py',17),
  ('instrucciones -> deleteValueHash','instrucciones',1,'p_instrucciones','sintactico.py',18),
  ('instrucciones -> insertArray','instrucciones',1,'p_instrucciones','sintactico.py',19),
  ('instrucciones -> deleteArray','instrucciones',1,'p_instrucciones','sintactico.py',20),
  ('instrucciones -> searchStack','instrucciones',1,'p_instrucciones','sintactico.py',21),
  ('instrucciones -> pushStack','instrucciones',1,'p_instrucciones','sintactico.py',22),
  ('instrucciones -> metodoBoleano','instrucciones',1,'p_instrucciones','sintactico.py',23),
  ('instrucciones -> opMatematicas','instrucciones',1,'p_instrucciones','sintactico.py',24),
  ('cuerpo -> asignacion','cuerpo',1,'p_body','sintactico.py',28),
  ('cuerpo -> expression','cuerpo',1,'p_body','sintactico.py',29),
  ('cuerpo -> comparacion','cuerpo',1,'p_body','sintactico.py',30),
  ('cuerpo -> condicional','cuerpo',1,'p_body','sintactico.py',31),
  ('cuerpo -> impresion','cuerpo',1,'p_body','sintactico.py',32),
  ('cuerpo -> for','cuerpo',1,'p_body','sintactico.py',33),
  ('cuerpo -> while','cuerpo',1,'p_body','sintactico.py',34),
  ('cuerpo -> input','cuerpo',1,'p_body','sintactico.py',35),
  ('cuerpo -> callFuncion','cuerpo',1,'p_body','sintactico.py',36),
  ('cuerpo -> addValueHash','cuerpo',1,'p_body','sintactico.py',37),
  ('cuerpo -> modValueHash','cuerpo',1,'p_body','sintactico.py',38),
  ('cuerpo -> deleteValueHash','cuerpo',1,'p_body','sintactico.py',39),
  ('cuerpo -> insertArray','cuerpo',1,'p_body','sintactico.py',40),
  ('cuerpo -> deleteArray','cuerpo',1,'p_body','sintactico.py',41),
  ('cuerpo -> pushStack','cuerpo',1,'p_body','sintactico.py',42),
  ('cuerpo -> searchStack','cuerpo',1,'p_body','sintactico.py',43),
  ('cuerpo -> opMatematicas','cuerpo',1,'p_body','sintactico.py',44),
  ('asignacion -> VARIABLE ASIGN expression','asignacion',3,'p_asignacion','sintactico.py',48),
  ('asignacion -> VARIABLE ASIGN comparacion','asignacion',3,'p_asignacion','sintactico.py',49),
  ('asignacion -> VARIABLE ASIGN callFuncion','asignacion',3,'p_asignacion','sintactico.py',50),
  ('asignacion -> VARIABLE ASIGN diccionario','asignacion',3,'p_asignacion','sintactico.py',51),
  ('asignacion -> VARIABLE ASIGN getValueHash','asignacion',3,'p_asignacion','sintactico.py',52),
  ('asignacion -> VARIABLE ASIGN array','asignacion',3,'p_asignacion','sintactico.py',53),
  ('asignacion -> VARIABLE ASIGN stack','asignacion',3,'p_asignacion','sintactico.py',54),
  ('asignacion -> VARIABLE tipo_asignacion factor','asignacion',3,'p_asignacion','sintactico.py',55),
  ('asignacion -> VARIABLE ASIGN opMatematicas','asignacion',3,'p_asignacion','sintactico.py',56),
  ('tipo_asignacion -> PLUS ASIGN','tipo_asignacion',2,'p_tipo_asignacion','sintactico.py',59),
  ('tipo_asignacion -> MINUS ASIGN','tipo_asignacion',2,'p_tipo_asignacion','sintactico.py',60),
  ('tipo_asignacion -> TIMES ASIGN','tipo_asignacion',2,'p_tipo_asignacion','sintactico.py',61),
  ('tipo_asignacion -> DIVIDE ASIGN','tipo_asignacion',2,'p_tipo_asignacion','sintactico.py',62),
  ('tipo_asignacion -> EXPONENTIATION ASIGN','tipo_asignacion',2,'p_tipo_asignacion','sintactico.py',63),
  ('expression -> term','expression',1,'p_expression_term','sintactico.py',68),
  ('expression -> boleano','expression',1,'p_expression_term','sintactico.py',69),
  ('term -> factor','term',1,'p_term_factor','sintactico.py',73),
  ('factor -> NUMBER','factor',1,'p_factor_num','sintactico.py',76),
  ('factor -> STRING','factor',1,'p_factor_num','sintactico.py',77),
  ('factor -> FLOAT','factor',1,'p_factor_num','sintactico.py',78),
  ('factor -> VARIABLE','factor',1,'p_factor_num','sintactico.py',79),
  ('factor -> LPAR expression RPAR','factor',3,'p_factor_expr','sintactico.py',83),
  ('comparacion -> expression comparador expression','comparacion',3,'p_comparacion','sintactico.py',87),
  ('comparacion -> expression comparador expression AND comparacion','comparacion',5,'p_comparacion','sintactico.py',88),
  ('comparacion -> expression comparador expression OR comparacion','comparacion',5,'p_comparacion','sintactico.py',89),
  ('comparacion -> expression AND expression','comparacion',3,'p_comparacion','sintactico.py',90),
  ('comparacion -> expression OR expression','comparacion',3,'p_comparacion','sintactico.py',91),
  ('comparador -> GREATER','comparador',1,'p_comparador','sintactico.py',96),
  ('comparador -> GREATER_OR_EQUAL','comparador',1,'p_comparador','sintactico.py',97),
  ('comparador -> MINOR','comparador',1,'p_comparador','sintactico.py',98),
  ('comparador -> MINOR_OR_EQUAL','comparador',1,'p_comparador','sintactico.py',99),
  ('comparador -> ASIGN ASIGN','comparador',2,'p_comparador','sintactico.py',100),
  ('comparador -> NOT ASIGN','comparador',2,'p_comparador','sintactico.py',101),
  ('condicional -> IF comparacion D_POINT repCuerpo END','condicional',5,'p_cond_if','sintactico.py',106),
  ('condicional -> IF comparacion D_POINT repCuerpo END cond_else','condicional',6,'p_cond_if','sintactico.py',107),
  ('cond_else -> ELSE D_POINT repCuerpo END','cond_else',4,'p_cond_else','sintactico.py',111),
  ('impresion -> PUTS factor','impresion',2,'p_puts','sintactico.py',115),
  ('input -> VARIABLE ASIGN GETS','input',3,'p_gets','sintactico.py',118),
  ('parametros -> VARIABLE','parametros',1,'p_par_function','sintactico.py',122),
  ('parametros -> VARIABLE COMMA parametros','parametros',3,'p_par_function','sintactico.py',123),
  ('encabezado -> DEF VARIABLE LPAR RPAR','encabezado',4,'p_header_function','sintactico.py',127),
  ('encabezado -> DEF VARIABLE LPAR parametros RPAR','encabezado',5,'p_header_function','sintactico.py',128),
  ('funciones -> encabezado repCuerpo END','funciones',3,'p_function','sintactico.py',132),
  ('funciones -> encabezado RETURN expression END','funciones',4,'p_function','sintactico.py',133),
  ('funciones -> encabezado repCuerpo RETURN expression END','funciones',5,'p_function','sintactico.py',134),
  ('callFuncion -> VARIABLE LPAR RPAR','callFuncion',3,'p_call_function','sintactico.py',138),
  ('callFuncion -> VARIABLE LPAR parametros RPAR','callFuncion',4,'p_call_function','sintactico.py',139),
  ('boleano -> TRUE','boleano',1,'p_boolean','sintactico.py',143),
  ('boleano -> FALSE','boleano',1,'p_boolean','sintactico.py',144),
  ('diccionario -> LKEY cuerpoHash RKEY','diccionario',3,'p_hash','sintactico.py',149),
  ('cuerpoHash -> expression ASIGN GREATER expression','cuerpoHash',4,'p_body_hash','sintactico.py',152),
  ('cuerpoHash -> expression ASIGN GREATER expression COMMA cuerpoHash','cuerpoHash',6,'p_body_hash','sintactico.py',153),
  ('getValueHash -> VARIABLE LCOR expression RCOR','getValueHash',4,'p_get_hash','sintactico.py',157),
  ('addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression','addValueHash',6,'p_add_hash','sintactico.py',160),
  ('modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression','modValueHash',6,'p_mod_hash','sintactico.py',163),
  ('deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR','deleteValueHash',6,'p_del_hash','sintactico.py',166),
  ('metodoBoleano -> VARIABLE POINT VARIABLE QUESTION LPAR expression RPAR','metodoBoleano',7,'p_boolean_method','sintactico.py',170),
  ('metodoBoleano -> VARIABLE POINT VARIABLE QUESTION LPAR RPAR','metodoBoleano',6,'p_boolean_method','sintactico.py',171),
  ('while -> WHILE LPAR comparacion RPAR repCuerpo END','while',6,'p_while','sintactico.py',179),
  ('while -> WHILE LPAR comparacion RPAR repCuerpo END while','while',7,'p_while','sintactico.py',180),
  ('repCuerpo -> cuerpo','repCuerpo',1,'p_repCuerpo','sintactico.py',183),
  ('repCuerpo -> cuerpo repCuerpo','repCuerpo',2,'p_repCuerpo','sintactico.py',184),
  ('parametrosA -> factor','parametrosA',1,'p_parA_function','sintactico.py',189),
  ('parametrosA -> factor COMMA parametrosA','parametrosA',3,'p_parA_function','sintactico.py',190),
  ('array -> LCOR parametrosA RCOR','array',3,'p_array','sintactico.py',193),
  ('array -> LCOR RCOR','array',2,'p_array','sintactico.py',194),
  ('argumentosA -> NUMBER COMMA factor','argumentosA',3,'p_argumentos_array','sintactico.py',198),
  ('insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR','insertArray',6,'p_insert_array','sintactico.py',201),
  ('deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR','deleteArray',6,'p_delete_array','sintactico.py',205),
  ('for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END','for',10,'p_for','sintactico.py',213),
  ('for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for','for',11,'p_for','sintactico.py',214),
  ('vacio -> ','vacio',1,'p_vacio','sintactico.py',218),
  ('stack -> LCOR parametrosA RCOR','stack',3,'p_stack','sintactico.py',220),
  ('stack -> LCOR vacio RCOR','stack',3,'p_stack','sintactico.py',221),
  ('searchStack -> VARIABLE POINT SEARCH LPAR factor RPAR','searchStack',6,'p_search_stack','sintactico.py',224),
  ('pushStack -> VARIABLE POINT PUSH LPAR factor RPAR','pushStack',6,'p_push_stack','sintactico.py',227),
  ('opMatematicas -> suma','opMatematicas',1,'p_opMatematicas','sintactico.py',242),
  ('opMatematicas -> resta','opMatematicas',1,'p_opMatematicas','sintactico.py',243),
  ('opMatematicas -> multiplicacion','opMatematicas',1,'p_opMatematicas','sintactico.py',244),
  ('opMatematicas -> division','opMatematicas',1,'p_opMatematicas','sintactico.py',245),
  ('opMatematicas -> exponenciacion','opMatematicas',1,'p_opMatematicas','sintactico.py',246),
  ('suma -> operadores PLUS operadores','suma',3,'p_suma','sintactico.py',250),
  ('suma -> operadores PLUS opMatematicas','suma',3,'p_suma','sintactico.py',251),
  ('suma -> operadores PLUS LPAR operadores RPAR','suma',5,'p_suma','sintactico.py',252),
  ('suma -> operadores PLUS LPAR opMatematicas RPAR','suma',5,'p_suma','sintactico.py',253),
  ('resta -> VARIABLE MINUS NUMBER','resta',3,'p_resta','sintactico.py',257),
  ('resta -> operadores MINUS operadores','resta',3,'p_resta','sintactico.py',258),
  ('resta -> operadores MINUS opMatematicas','resta',3,'p_resta','sintactico.py',259),
  ('resta -> operadores MINUS LPAR operadores RPAR','resta',5,'p_resta','sintactico.py',260),
  ('resta -> operadores MINUS LPAR opMatematicas RPAR','resta',5,'p_resta','sintactico.py',261),
  ('multiplicacion -> operadores TIMES operadores','multiplicacion',3,'p_multiplicacion','sintactico.py',265),
  ('multiplicacion -> operadores TIMES LPAR operadores RPAR','multiplicacion',5,'p_multiplicacion','sintactico.py',266),
  ('multiplicacion -> operadores TIMES LPAR opMatematicas RPAR','multiplicacion',5,'p_multiplicacion','sintactico.py',267),
  ('division -> operadores DIVIDE operadores','division',3,'p_divicion','sintactico.py',271),
  ('division -> operadores DIVIDE LPAR operadores RPAR','division',5,'p_divicion','sintactico.py',272),
  ('division -> operadores DIVIDE LPAR opMatematicas RPAR','division',5,'p_divicion','sintactico.py',273),
  ('exponenciacion -> operadores EXPONENTIATION operadores','exponenciacion',3,'p_exponenciacion','sintactico.py',277),
  ('exponenciacion -> LPAR operadores RPAR EXPONENTIATION operadores','exponenciacion',5,'p_exponenciacion','sintactico.py',278),
  ('exponenciacion -> LPAR opMatematicas RPAR EXPONENTIATION operadores','exponenciacion',5,'p_exponenciacion','sintactico.py',279),
  ('operadores -> enteros','operadores',1,'p_operadores','sintactico.py',283),
  ('operadores -> FLOAT','operadores',1,'p_operadores','sintactico.py',284),
  ('enteros -> NUMBER','enteros',1,'p_enteros','sintactico.py',288),
  ('enteros -> MINUS NUMBER','enteros',2,'p_enteros','sintactico.py',289),
]
