
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALIAS AND ASIGN COMMA DEF DELETE DELETE_AT DIVIDE DO D_POINT ELSE END ENSURE EXPONENTIATION FALSE FLOAT FOR GETS GREATER GREATER_OR_EQUAL IF IN INCLUDE INSERT LCOR LKEY LPAR MINOR MINOR_OR_EQUAL MINUS NOT NUMBER OR PLUS POINT PUSH PUTS QUESTION RCOR RETURN RKEY RPAR SEARCH SELF STRING TIMES TRUE VARIABLE WHILEinstrucciones : asignacion\n                    | expression\n                    | funciones\n                    | comparacion\n                    | condicional\n                    | while\n                    | for\n                    | impresion\n                    | input\n                    | callFuncion\n                    | addValueHash\n                    | modValueHash\n                    | deleteValueHash\n                    | insertArray\n                    | deleteArray\n                    | searchStack\n                    | pushStack\n                    \n    \n     cuerpo : asignacion\n                | expression\n                | comparacion\n                | condicional\n                | impresion\n                | for\n                | while\n                | input\n                | callFuncion\n                | addValueHash\n                | modValueHash\n                | deleteValueHash\n                | insertArray\n                | deleteArray\n                | pushStack\n                | searchStack\n    asignacion : VARIABLE ASIGN expression\n                | VARIABLE ASIGN comparacion\n                | VARIABLE ASIGN callFuncion\n                | VARIABLE ASIGN diccionario\n                | VARIABLE ASIGN getValueHash\n                | VARIABLE ASIGN array\n                | VARIABLE ASIGN stack\n    expression : term \n                    | boleano\n    term : factorfactor : NUMBER\n                | STRING\n                | FLOAT\n                | VARIABLE\n    factor : LPAR expression RPARexpression : expression PLUS termexpression : expression MINUS termterm : term TIMES factorterm : term DIVIDE factorterm : term EXPONENTIATION factorcomparacion : expression comparador expression\n                    | expression comparador expression AND comparacion\n                    | expression comparador expression OR comparacion\n    comparador : GREATER \n                | GREATER_OR_EQUAL\n                | MINOR\n                | MINOR_OR_EQUAL\n                | ASIGN ASIGN\n                | NOT ASIGN\n    condicional : IF comparacion D_POINT cuerpo END\n                    | IF comparacion D_POINT cuerpo END cond_else\n    cond_else : ELSE D_POINT cuerpo ENDimpresion : PUTS STRINGinput : VARIABLE ASIGN GETS parametros : VARIABLE\n                    | VARIABLE COMMA parametros\n    encabezado : DEF VARIABLE LPAR RPAR\n                    | DEF VARIABLE LPAR parametros RPAR\n    funciones : encabezado cuerpo END\n                | encabezado RETURN expression END\n                | encabezado cuerpo RETURN expression END\n    callFuncion : VARIABLE LPAR RPAR\n                | VARIABLE LPAR parametros RPAR\n    boleano : TRUE \n                | FALSE\n    diccionario : LKEY cuerpoHash RKEYcuerpoHash : expression ASIGN GREATER expression\n                    | expression ASIGN GREATER expression COMMA cuerpoHash\n    getValueHash : VARIABLE LCOR expression RCORaddValueHash : VARIABLE LCOR expression RCOR ASIGN expressionmodValueHash : VARIABLE LCOR expression RCOR ASIGN expressiondeleteValueHash : VARIABLE POINT DELETE LPAR expression RPARwhile : WHILE LPAR comparacion RPAR cuerpo END\n            | WHILE LPAR comparacion RPAR cuerpo END while\n     parametrosA : factor\n                    | factor COMMA parametrosA\n    array : LCOR parametrosA RCOR\n             | LCOR RCOR\n    argumentosA : NUMBER\n                    | NUMBER COMMA factor\n    insertArray : VARIABLE POINT INSERT LPAR argumentosA RPAR\n    deleteArray : VARIABLE POINT DELETE_AT LPAR NUMBER RPAR\n    for : FOR VARIABLE IN LPAR NUMBER POINT POINT NUMBER RPAR DO cuerpo END\n            | FOR VARIABLE IN LPAR NUMBER POINT POINT NUMBER RPAR DO cuerpo END for\n    vacio : ""stack : LCOR parametrosA RCOR\n            | LCOR vacio RCOR\n    searchStack : VARIABLE POINT SEARCH LPAR factor RPAR\n    pushStack : VARIABLE POINT PUSH LPAR factor RPAR\n    '
    
_lr_action_items = {'VARIABLE':([0,22,23,25,26,33,35,36,37,38,39,40,41,44,45,46,48,49,50,52,73,81,82,92,93,107,110,114,115,116,117,125,128,131,132,136,138,147,149,160,162,167,177,180,186,],[19,69,72,72,75,77,72,72,72,-57,-58,-59,-60,83,94,72,72,72,72,72,72,-61,-62,72,72,72,69,94,72,72,72,94,72,72,72,69,-70,72,72,-71,72,72,69,72,69,]),'IF':([0,22,110,136,138,160,177,186,],[23,23,23,23,-70,-71,23,23,]),'WHILE':([0,22,110,136,138,160,173,177,186,],[24,24,24,24,-70,-71,24,24,24,]),'FOR':([0,22,110,136,138,160,177,186,188,],[26,26,26,26,-70,-71,26,26,26,]),'PUTS':([0,22,110,136,138,160,177,186,],[28,28,28,28,-70,-71,28,28,]),'TRUE':([0,22,23,25,37,38,39,40,41,44,46,52,73,81,82,92,107,110,115,116,117,128,136,138,149,160,162,177,180,186,],[31,31,31,31,31,-57,-58,-59,-60,31,31,31,31,-61,-62,31,31,31,31,31,31,31,31,-70,31,-71,31,31,31,31,]),'FALSE':([0,22,23,25,37,38,39,40,41,44,46,52,73,81,82,92,107,110,115,116,117,128,136,138,149,160,162,177,180,186,],[32,32,32,32,32,-57,-58,-59,-60,32,32,32,32,-61,-62,32,32,32,32,32,32,32,32,-70,32,-71,32,32,32,32,]),'DEF':([0,],[33,]),'NUMBER':([0,22,23,25,35,36,37,38,39,40,41,44,46,48,49,50,52,73,81,82,92,93,107,110,115,116,117,128,129,130,131,132,136,137,138,147,149,160,162,167,177,179,180,186,],[27,27,27,27,27,27,27,-57,-58,-59,-60,27,27,27,27,27,27,27,-61,-62,27,27,27,27,27,27,27,27,152,153,27,27,27,159,-70,27,27,-71,27,27,27,182,27,27,]),'STRING':([0,22,23,25,28,35,36,37,38,39,40,41,44,46,48,49,50,52,73,81,82,92,93,107,110,115,116,117,128,131,132,136,138,147,149,160,162,167,177,180,186,],[29,29,29,29,76,29,29,29,-57,-58,-59,-60,29,29,29,29,29,29,29,-61,-62,29,29,29,29,29,29,29,29,29,29,29,-70,29,29,-71,29,29,29,29,29,]),'FLOAT':([0,22,23,25,35,36,37,38,39,40,41,44,46,48,49,50,52,73,81,82,92,93,107,110,115,116,117,128,131,132,136,138,147,149,160,162,167,177,180,186,],[34,34,34,34,34,34,34,-57,-58,-59,-60,34,34,34,34,34,34,34,-61,-62,34,34,34,34,34,34,34,34,34,34,34,-70,34,34,-71,34,34,34,34,34,]),'LPAR':([0,19,22,23,24,25,35,36,37,38,39,40,41,44,46,48,49,50,52,69,73,77,81,82,83,92,93,98,99,100,101,102,107,110,113,115,116,117,128,131,132,136,138,147,149,160,162,167,177,180,186,],[25,45,25,25,73,25,25,25,25,-57,-58,-59,-60,25,25,25,25,25,25,45,25,114,-61,-62,45,25,25,128,129,130,131,132,25,25,137,25,25,25,25,25,25,25,-70,25,25,-71,25,25,25,25,25,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,27,29,30,31,32,34,72,76,78,79,80,83,84,85,86,87,88,89,90,91,95,103,104,105,106,112,121,126,134,140,141,143,145,146,156,157,161,164,165,166,168,169,170,171,173,178,184,188,189,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-47,-41,-42,-44,-45,-43,-77,-78,-46,-47,-66,-49,-50,-54,-47,-34,-35,-36,-37,-38,-39,-40,-67,-75,-51,-52,-53,-72,-48,-91,-76,-73,-55,-56,-79,-90,-100,-74,-63,-82,-83,-85,-94,-95,-101,-102,-64,-86,-87,-65,-96,-97,]),'PLUS':([3,19,20,21,27,29,30,31,32,34,53,69,71,72,74,78,79,80,83,84,97,103,104,105,108,112,119,133,142,150,164,175,],[35,-47,-41,-42,-44,-45,-43,-77,-78,-46,35,-47,35,-47,35,-49,-50,35,-47,35,35,-51,-52,-53,35,-48,35,35,35,35,35,35,]),'MINUS':([3,19,20,21,27,29,30,31,32,34,53,69,71,72,74,78,79,80,83,84,97,103,104,105,108,112,119,133,142,150,164,175,],[36,-47,-41,-42,-44,-45,-43,-77,-78,-46,36,-47,36,-47,36,-49,-50,36,-47,36,36,-51,-52,-53,36,-48,36,36,36,36,36,36,]),'GREATER':([3,19,20,21,27,29,30,31,32,34,53,69,71,72,78,79,83,84,103,104,105,112,144,],[38,-47,-41,-42,-44,-45,-43,-77,-78,-46,38,-47,38,-47,-49,-50,-47,38,-51,-52,-53,-48,162,]),'GREATER_OR_EQUAL':([3,19,20,21,27,29,30,31,32,34,53,69,71,72,78,79,83,84,103,104,105,112,],[39,-47,-41,-42,-44,-45,-43,-77,-78,-46,39,-47,39,-47,-49,-50,-47,39,-51,-52,-53,-48,]),'MINOR':([3,19,20,21,27,29,30,31,32,34,53,69,71,72,78,79,83,84,103,104,105,112,],[40,-47,-41,-42,-44,-45,-43,-77,-78,-46,40,-47,40,-47,-49,-50,-47,40,-51,-52,-53,-48,]),'MINOR_OR_EQUAL':([3,19,20,21,27,29,30,31,32,34,53,69,71,72,78,79,83,84,103,104,105,112,],[41,-47,-41,-42,-44,-45,-43,-77,-78,-46,41,-47,41,-47,-49,-50,-47,41,-51,-52,-53,-48,]),'ASIGN':([3,19,20,21,27,29,30,31,32,34,42,43,53,69,71,72,78,79,83,84,103,104,105,112,119,127,],[42,44,-41,-42,-44,-45,-43,-77,-78,-46,81,82,42,44,42,-47,-49,-50,-47,42,-51,-52,-53,-48,144,149,]),'NOT':([3,19,20,21,27,29,30,31,32,34,53,69,71,72,78,79,83,84,103,104,105,112,],[43,-47,-41,-42,-44,-45,-43,-77,-78,-46,43,-47,43,-47,-49,-50,-47,43,-51,-52,-53,-48,]),'LCOR':([19,44,69,83,],[46,93,46,117,]),'POINT':([19,69,159,174,],[47,109,174,179,]),'TIMES':([19,20,27,29,30,34,69,72,78,79,83,103,104,105,112,],[-47,48,-44,-45,-43,-46,-47,-47,48,48,-47,-51,-52,-53,-48,]),'DIVIDE':([19,20,27,29,30,34,69,72,78,79,83,103,104,105,112,],[-47,49,-44,-45,-43,-46,-47,-47,49,49,-47,-51,-52,-53,-48,]),'EXPONENTIATION':([19,20,27,29,30,34,69,72,78,79,83,103,104,105,112,],[-47,50,-44,-45,-43,-46,-47,-47,50,50,-47,-51,-52,-53,-48,]),'END':([20,21,27,29,30,31,32,34,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,72,76,78,79,80,83,84,85,86,87,88,89,90,91,95,103,104,105,108,112,121,126,133,135,140,141,143,145,146,157,158,161,164,165,166,168,169,170,171,173,178,181,184,187,188,189,],[-41,-42,-44,-45,-43,-77,-78,-46,106,-19,-18,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-47,-47,-66,-49,-50,-54,-47,-34,-35,-36,-37,-38,-39,-40,-67,-75,-51,-52,-53,134,-48,-91,-76,156,157,-55,-56,-79,-90,-100,-63,173,-82,-83,-85,-94,-95,-101,-102,-64,-86,-87,184,-65,188,-96,-97,]),'RETURN':([20,21,22,27,29,30,31,32,34,51,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,72,76,78,79,80,83,84,85,86,87,88,89,90,91,95,103,104,105,112,121,126,138,140,141,143,145,146,157,160,161,164,165,166,168,169,170,171,173,178,184,188,189,],[-41,-42,52,-44,-45,-43,-77,-78,-46,107,-19,-18,-20,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-47,-47,-66,-49,-50,-54,-47,-34,-35,-36,-37,-38,-39,-40,-67,-75,-51,-52,-53,-48,-91,-76,-70,-55,-56,-79,-90,-100,-63,-71,-82,-83,-85,-94,-95,-101,-102,-64,-86,-87,-65,-96,-97,]),'RPAR':([20,21,27,29,30,31,32,34,45,72,74,78,79,80,94,96,103,104,105,111,112,114,139,140,141,148,150,151,152,153,154,155,176,182,],[-41,-42,-44,-45,-43,-77,-78,-46,95,-47,112,-49,-50,-54,-68,126,-51,-52,-53,136,-48,138,160,-55,-56,-69,165,166,-92,168,169,170,-93,185,]),'AND':([20,21,27,29,30,31,32,34,72,78,79,80,103,104,105,112,],[-41,-42,-44,-45,-43,-77,-78,-46,-47,-49,-50,115,-51,-52,-53,-48,]),'OR':([20,21,27,29,30,31,32,34,72,78,79,80,103,104,105,112,],[-41,-42,-44,-45,-43,-77,-78,-46,-47,-49,-50,116,-51,-52,-53,-48,]),'D_POINT':([20,21,27,29,30,31,32,34,70,72,78,79,80,103,104,105,112,140,141,172,],[-41,-42,-44,-45,-43,-77,-78,-46,110,-47,-49,-50,-54,-51,-52,-53,-48,-55,-56,177,]),'RCOR':([20,21,27,29,30,31,32,34,72,78,79,93,97,103,104,105,112,120,122,123,124,142,163,],[-41,-42,-44,-45,-43,-77,-78,-46,-47,-49,-50,121,127,-51,-52,-53,-48,145,146,-88,-98,161,-89,]),'COMMA':([20,21,27,29,30,31,32,34,72,78,79,94,103,104,105,112,123,152,175,],[-41,-42,-44,-45,-43,-77,-78,-46,-47,-49,-50,125,-51,-52,-53,-48,147,167,180,]),'RKEY':([20,21,27,29,30,31,32,34,72,78,79,103,104,105,112,118,175,183,],[-41,-42,-44,-45,-43,-77,-78,-46,-47,-49,-50,-51,-52,-53,-48,143,-80,-81,]),'GETS':([44,],[91,]),'LKEY':([44,],[92,]),'DELETE':([47,109,],[98,98,]),'INSERT':([47,109,],[99,99,]),'DELETE_AT':([47,109,],[100,100,]),'SEARCH':([47,109,],[101,101,]),'PUSH':([47,109,],[102,102,]),'IN':([75,],[113,]),'':([93,],[124,]),'ELSE':([157,],[172,]),'DO':([185,],[186,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instrucciones':([0,],[1,]),'asignacion':([0,22,110,136,177,186,],[2,54,54,54,54,54,]),'expression':([0,22,23,25,37,44,46,52,73,92,107,110,115,116,117,128,136,149,162,177,180,186,],[3,53,71,74,80,84,97,108,71,119,133,53,71,71,142,150,53,164,175,53,119,53,]),'funciones':([0,],[4,]),'comparacion':([0,22,23,44,73,110,115,116,136,177,186,],[5,55,70,85,111,55,140,141,55,55,55,]),'condicional':([0,22,110,136,177,186,],[6,56,56,56,56,56,]),'while':([0,22,110,136,173,177,186,],[7,59,59,59,178,59,59,]),'for':([0,22,110,136,177,186,188,],[8,58,58,58,58,58,189,]),'impresion':([0,22,110,136,177,186,],[9,57,57,57,57,57,]),'input':([0,22,110,136,177,186,],[10,60,60,60,60,60,]),'callFuncion':([0,22,44,110,136,177,186,],[11,61,86,61,61,61,61,]),'addValueHash':([0,22,110,136,177,186,],[12,62,62,62,62,62,]),'modValueHash':([0,22,110,136,177,186,],[13,63,63,63,63,63,]),'deleteValueHash':([0,22,110,136,177,186,],[14,64,64,64,64,64,]),'insertArray':([0,22,110,136,177,186,],[15,65,65,65,65,65,]),'deleteArray':([0,22,110,136,177,186,],[16,66,66,66,66,66,]),'searchStack':([0,22,110,136,177,186,],[17,68,68,68,68,68,]),'pushStack':([0,22,110,136,177,186,],[18,67,67,67,67,67,]),'term':([0,22,23,25,35,36,37,44,46,52,73,92,107,110,115,116,117,128,136,149,162,177,180,186,],[20,20,20,20,78,79,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'boleano':([0,22,23,25,37,44,46,52,73,92,107,110,115,116,117,128,136,149,162,177,180,186,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'encabezado':([0,],[22,]),'factor':([0,22,23,25,35,36,37,44,46,48,49,50,52,73,92,93,107,110,115,116,117,128,131,132,136,147,149,162,167,177,180,186,],[30,30,30,30,30,30,30,30,30,103,104,105,30,30,30,123,30,30,30,30,30,30,154,155,30,123,30,30,176,30,30,30,]),'comparador':([3,53,71,84,],[37,37,37,37,]),'cuerpo':([22,110,136,177,186,],[51,135,158,181,187,]),'diccionario':([44,],[87,]),'getValueHash':([44,],[88,]),'array':([44,],[89,]),'stack':([44,],[90,]),'parametros':([45,114,125,],[96,139,148,]),'cuerpoHash':([92,180,],[118,183,]),'parametrosA':([93,147,],[120,163,]),'vacio':([93,],[122,]),'argumentosA':([129,],[151,]),'cond_else':([157,],[171,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> instrucciones","S'",1,None,None,None),
  ('instrucciones -> asignacion','instrucciones',1,'p_instrucciones','sintactico.py',6),
  ('instrucciones -> expression','instrucciones',1,'p_instrucciones','sintactico.py',7),
  ('instrucciones -> funciones','instrucciones',1,'p_instrucciones','sintactico.py',8),
  ('instrucciones -> comparacion','instrucciones',1,'p_instrucciones','sintactico.py',9),
  ('instrucciones -> condicional','instrucciones',1,'p_instrucciones','sintactico.py',10),
  ('instrucciones -> while','instrucciones',1,'p_instrucciones','sintactico.py',11),
  ('instrucciones -> for','instrucciones',1,'p_instrucciones','sintactico.py',12),
  ('instrucciones -> impresion','instrucciones',1,'p_instrucciones','sintactico.py',13),
  ('instrucciones -> input','instrucciones',1,'p_instrucciones','sintactico.py',14),
  ('instrucciones -> callFuncion','instrucciones',1,'p_instrucciones','sintactico.py',15),
  ('instrucciones -> addValueHash','instrucciones',1,'p_instrucciones','sintactico.py',16),
  ('instrucciones -> modValueHash','instrucciones',1,'p_instrucciones','sintactico.py',17),
  ('instrucciones -> deleteValueHash','instrucciones',1,'p_instrucciones','sintactico.py',18),
  ('instrucciones -> insertArray','instrucciones',1,'p_instrucciones','sintactico.py',19),
  ('instrucciones -> deleteArray','instrucciones',1,'p_instrucciones','sintactico.py',20),
  ('instrucciones -> searchStack','instrucciones',1,'p_instrucciones','sintactico.py',21),
  ('instrucciones -> pushStack','instrucciones',1,'p_instrucciones','sintactico.py',22),
  ('cuerpo -> asignacion','cuerpo',1,'p_body','sintactico.py',28),
  ('cuerpo -> expression','cuerpo',1,'p_body','sintactico.py',29),
  ('cuerpo -> comparacion','cuerpo',1,'p_body','sintactico.py',30),
  ('cuerpo -> condicional','cuerpo',1,'p_body','sintactico.py',31),
  ('cuerpo -> impresion','cuerpo',1,'p_body','sintactico.py',32),
  ('cuerpo -> for','cuerpo',1,'p_body','sintactico.py',33),
  ('cuerpo -> while','cuerpo',1,'p_body','sintactico.py',34),
  ('cuerpo -> input','cuerpo',1,'p_body','sintactico.py',35),
  ('cuerpo -> callFuncion','cuerpo',1,'p_body','sintactico.py',36),
  ('cuerpo -> addValueHash','cuerpo',1,'p_body','sintactico.py',37),
  ('cuerpo -> modValueHash','cuerpo',1,'p_body','sintactico.py',38),
  ('cuerpo -> deleteValueHash','cuerpo',1,'p_body','sintactico.py',39),
  ('cuerpo -> insertArray','cuerpo',1,'p_body','sintactico.py',40),
  ('cuerpo -> deleteArray','cuerpo',1,'p_body','sintactico.py',41),
  ('cuerpo -> pushStack','cuerpo',1,'p_body','sintactico.py',42),
  ('cuerpo -> searchStack','cuerpo',1,'p_body','sintactico.py',43),
  ('asignacion -> VARIABLE ASIGN expression','asignacion',3,'p_asignacion','sintactico.py',47),
  ('asignacion -> VARIABLE ASIGN comparacion','asignacion',3,'p_asignacion','sintactico.py',48),
  ('asignacion -> VARIABLE ASIGN callFuncion','asignacion',3,'p_asignacion','sintactico.py',49),
  ('asignacion -> VARIABLE ASIGN diccionario','asignacion',3,'p_asignacion','sintactico.py',50),
  ('asignacion -> VARIABLE ASIGN getValueHash','asignacion',3,'p_asignacion','sintactico.py',51),
  ('asignacion -> VARIABLE ASIGN array','asignacion',3,'p_asignacion','sintactico.py',52),
  ('asignacion -> VARIABLE ASIGN stack','asignacion',3,'p_asignacion','sintactico.py',53),
  ('expression -> term','expression',1,'p_expression_term','sintactico.py',58),
  ('expression -> boleano','expression',1,'p_expression_term','sintactico.py',59),
  ('term -> factor','term',1,'p_term_factor','sintactico.py',63),
  ('factor -> NUMBER','factor',1,'p_factor_num','sintactico.py',66),
  ('factor -> STRING','factor',1,'p_factor_num','sintactico.py',67),
  ('factor -> FLOAT','factor',1,'p_factor_num','sintactico.py',68),
  ('factor -> VARIABLE','factor',1,'p_factor_num','sintactico.py',69),
  ('factor -> LPAR expression RPAR','factor',3,'p_factor_expr','sintactico.py',73),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','sintactico.py',77),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','sintactico.py',80),
  ('term -> term TIMES factor','term',3,'p_term_times','sintactico.py',83),
  ('term -> term DIVIDE factor','term',3,'p_term_div','sintactico.py',86),
  ('term -> term EXPONENTIATION factor','term',3,'p_term_exp','sintactico.py',89),
  ('comparacion -> expression comparador expression','comparacion',3,'p_comparacion','sintactico.py',93),
  ('comparacion -> expression comparador expression AND comparacion','comparacion',5,'p_comparacion','sintactico.py',94),
  ('comparacion -> expression comparador expression OR comparacion','comparacion',5,'p_comparacion','sintactico.py',95),
  ('comparador -> GREATER','comparador',1,'p_comparador','sintactico.py',99),
  ('comparador -> GREATER_OR_EQUAL','comparador',1,'p_comparador','sintactico.py',100),
  ('comparador -> MINOR','comparador',1,'p_comparador','sintactico.py',101),
  ('comparador -> MINOR_OR_EQUAL','comparador',1,'p_comparador','sintactico.py',102),
  ('comparador -> ASIGN ASIGN','comparador',2,'p_comparador','sintactico.py',103),
  ('comparador -> NOT ASIGN','comparador',2,'p_comparador','sintactico.py',104),
  ('condicional -> IF comparacion D_POINT cuerpo END','condicional',5,'p_cond_if','sintactico.py',109),
  ('condicional -> IF comparacion D_POINT cuerpo END cond_else','condicional',6,'p_cond_if','sintactico.py',110),
  ('cond_else -> ELSE D_POINT cuerpo END','cond_else',4,'p_cond_else','sintactico.py',114),
  ('impresion -> PUTS STRING','impresion',2,'p_puts','sintactico.py',118),
  ('input -> VARIABLE ASIGN GETS','input',3,'p_gets','sintactico.py',121),
  ('parametros -> VARIABLE','parametros',1,'p_par_function','sintactico.py',125),
  ('parametros -> VARIABLE COMMA parametros','parametros',3,'p_par_function','sintactico.py',126),
  ('encabezado -> DEF VARIABLE LPAR RPAR','encabezado',4,'p_header_function','sintactico.py',130),
  ('encabezado -> DEF VARIABLE LPAR parametros RPAR','encabezado',5,'p_header_function','sintactico.py',131),
  ('funciones -> encabezado cuerpo END','funciones',3,'p_function','sintactico.py',135),
  ('funciones -> encabezado RETURN expression END','funciones',4,'p_function','sintactico.py',136),
  ('funciones -> encabezado cuerpo RETURN expression END','funciones',5,'p_function','sintactico.py',137),
  ('callFuncion -> VARIABLE LPAR RPAR','callFuncion',3,'p_call_function','sintactico.py',141),
  ('callFuncion -> VARIABLE LPAR parametros RPAR','callFuncion',4,'p_call_function','sintactico.py',142),
  ('boleano -> TRUE','boleano',1,'p_boolean','sintactico.py',146),
  ('boleano -> FALSE','boleano',1,'p_boolean','sintactico.py',147),
  ('diccionario -> LKEY cuerpoHash RKEY','diccionario',3,'p_hash','sintactico.py',152),
  ('cuerpoHash -> expression ASIGN GREATER expression','cuerpoHash',4,'p_body_hash','sintactico.py',155),
  ('cuerpoHash -> expression ASIGN GREATER expression COMMA cuerpoHash','cuerpoHash',6,'p_body_hash','sintactico.py',156),
  ('getValueHash -> VARIABLE LCOR expression RCOR','getValueHash',4,'p_get_hash','sintactico.py',160),
  ('addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression','addValueHash',6,'p_add_hash','sintactico.py',163),
  ('modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression','modValueHash',6,'p_mod_hash','sintactico.py',166),
  ('deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR','deleteValueHash',6,'p_del_hash','sintactico.py',169),
  ('while -> WHILE LPAR comparacion RPAR cuerpo END','while',6,'p_while','sintactico.py',176),
  ('while -> WHILE LPAR comparacion RPAR cuerpo END while','while',7,'p_while','sintactico.py',177),
  ('parametrosA -> factor','parametrosA',1,'p_parA_function','sintactico.py',182),
  ('parametrosA -> factor COMMA parametrosA','parametrosA',3,'p_parA_function','sintactico.py',183),
  ('array -> LCOR parametrosA RCOR','array',3,'p_array','sintactico.py',186),
  ('array -> LCOR RCOR','array',2,'p_array','sintactico.py',187),
  ('argumentosA -> NUMBER','argumentosA',1,'p_argumentos_array','sintactico.py',191),
  ('argumentosA -> NUMBER COMMA factor','argumentosA',3,'p_argumentos_array','sintactico.py',192),
  ('insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR','insertArray',6,'p_insert_array','sintactico.py',195),
  ('deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR','deleteArray',6,'p_delete_array','sintactico.py',199),
  ('for -> FOR VARIABLE IN LPAR NUMBER POINT POINT NUMBER RPAR DO cuerpo END','for',12,'p_for','sintactico.py',207),
  ('for -> FOR VARIABLE IN LPAR NUMBER POINT POINT NUMBER RPAR DO cuerpo END for','for',13,'p_for','sintactico.py',208),
  ('vacio -> ','vacio',1,'p_vacio','sintactico.py',212),
  ('stack -> LCOR parametrosA RCOR','stack',3,'p_stack','sintactico.py',214),
  ('stack -> LCOR vacio RCOR','stack',3,'p_stack','sintactico.py',215),
  ('searchStack -> VARIABLE POINT SEARCH LPAR factor RPAR','searchStack',6,'p_search_stack','sintactico.py',218),
  ('pushStack -> VARIABLE POINT PUSH LPAR factor RPAR','pushStack',6,'p_push_stack','sintactico.py',221),
]
