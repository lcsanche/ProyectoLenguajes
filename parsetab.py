
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASIGN COMMA DEF DELETE DELETE_AT DIVIDE DO D_POINT ELSE END EXPONENTIATION FALSE FLOAT FOR GETS GREATER GREATER_OR_EQUAL IF IN INSERT LCOR LKEY LPAR MINOR MINOR_OR_EQUAL MINUS NOT NUMBER OR PLUS POINT PUSH PUTS QUESTION RCOR RETURN RKEY RPAR SEARCH STACK STRING TIMES TRUE VARIABLE WHILEinstrucciones : asignacion\n                    | expression\n                    | funciones\n                    | comparacion\n                    | condicional\n                    | while\n                    | for\n                    | impresion\n                    | input\n                    | callFuncion\n                    | addValueHash\n                    | modValueHash\n                    | deleteValueHash\n                    | insertArray\n                    | deleteArray\n                    | searchStack\n                    | pushStack    \n                    | metodoBoleano    \n     cuerpo : asignacion\n                | expression\n                | comparacion\n                | condicional\n                | impresion\n                | for\n                | while\n                | input\n                | callFuncion\n                | addValueHash\n                | modValueHash\n                | deleteValueHash\n                | insertArray\n                | deleteArray\n                | pushStack\n                | searchStack\n    asignacion : VARIABLE ASIGN expression\n                | VARIABLE ASIGN comparacion\n                | VARIABLE ASIGN callFuncion\n                | VARIABLE ASIGN diccionario\n                | VARIABLE ASIGN getValueHash\n                | VARIABLE ASIGN array\n                | VARIABLE ASIGN stack\n                | VARIABLE tipo_asignacion factor\n                | VARIABLE ASIGN opMatematicas\n    tipo_asignacion : PLUS ASIGN\n                        | MINUS ASIGN \n                        | TIMES ASIGN \n                        | DIVIDE ASIGN \n                        | EXPONENTIATION ASIGN \n    expression : term \n                    | boleano\n    term : factorfactor : NUMBER\n                | STRING\n                | FLOAT\n                | VARIABLE\n    factor : LPAR expression RPARcomparacion : expression comparador expression\n                    | expression comparador expression AND comparacion\n                    | expression comparador expression OR comparacion\n                    | expression AND expression\n                    | expression OR expression\n    \n    comparador : GREATER \n                | GREATER_OR_EQUAL\n                | MINOR\n                | MINOR_OR_EQUAL\n                | ASIGN ASIGN\n                | NOT ASIGN\n    impresion : PUTS factorinput : VARIABLE ASIGN GETSboleano : TRUE \n                | FALSE\n    diccionario : LKEY cuerpoHash RKEYcuerpoHash : expression ASIGN GREATER expression\n                    | expression ASIGN GREATER expression COMMA cuerpoHash\n    getValueHash : VARIABLE LCOR expression RCORaddValueHash : VARIABLE LCOR expression RCOR ASIGN expressionmodValueHash : VARIABLE LCOR expression RCOR ASIGN expressiondeleteValueHash : VARIABLE POINT DELETE LPAR expression RPARmetodoBoleano : VARIABLE POINT VARIABLE QUESTION LPAR expression RPAR\n                    | VARIABLE POINT VARIABLE QUESTION LPAR RPAR\n    while : WHILE LPAR comparacion RPAR repCuerpo END\n            | WHILE LPAR comparacion RPAR repCuerpo END while\n    repCuerpo : cuerpo \n                | cuerpo repCuerpo\n     parametrosA : factor\n                    | factor COMMA parametrosA\n    array : LCOR parametrosA RCOR\n             | LCOR RCOR\n    argumentosA : NUMBER COMMA factor\n    insertArray : VARIABLE POINT INSERT LPAR argumentosA RPAR\n    deleteArray : VARIABLE POINT DELETE_AT LPAR NUMBER RPAR\n    for : FOR VARIABLE IN NUMBER POINT POINT NUMBER  DO repCuerpo END\n            | FOR VARIABLE IN NUMBER POINT POINT NUMBER  DO repCuerpo END for\n    vacio : stack : STACK LPAR parametrosA RPAR\n            | STACK LPAR vacio RPAR\n    searchStack : VARIABLE POINT SEARCH LPAR factor RPAR\n    pushStack : VARIABLE POINT PUSH LPAR factor RPAR\n     opMatematicas : suma\n                    | resta\n                    | multiplicacion\n                    | division\n                    | exponenciacion\n    suma : VARIABLE PLUS NUMBER\n            | operadores PLUS operadores\n            | operadores PLUS opMatematicas\n            | operadores PLUS LPAR operadores RPAR\n            | operadores PLUS LPAR opMatematicas RPAR\n    resta : VARIABLE MINUS NUMBER \n            | operadores MINUS operadores\n            | operadores MINUS opMatematicas\n            | operadores MINUS LPAR operadores RPAR\n            | operadores MINUS LPAR opMatematicas RPAR\n     multiplicacion : operadores TIMES operadores\n                    | operadores TIMES LPAR operadores RPAR\n                    | operadores TIMES LPAR opMatematicas RPAR\n     division : operadores DIVIDE operadores\n                | operadores DIVIDE LPAR operadores RPAR\n                | operadores DIVIDE LPAR opMatematicas RPAR\n     exponenciacion : operadores EXPONENTIATION operadores\n                    | LPAR operadores RPAR EXPONENTIATION operadores\n                    | LPAR opMatematicas RPAR EXPONENTIATION operadores\n     operadores : enteros\n                | FLOAT  \n     enteros : NUMBER\n                | MINUS NUMBER\n     parametros : VARIABLE\n                    | VARIABLE COMMA parametros\n    encabezado : DEF VARIABLE LPAR RPAR\n                    | DEF VARIABLE LPAR parametros RPAR\n    funciones : encabezado repCuerpo END\n                | encabezado RETURN expression END\n                | encabezado repCuerpo RETURN expression END\n    callFuncion : VARIABLE LPAR RPAR\n                | VARIABLE LPAR parametros RPAR\n    condicional : IF comparacion D_POINT repCuerpo END\n                    | IF comparacion D_POINT repCuerpo END cond_else\n    cond_else : ELSE D_POINT repCuerpo END'
    
_lr_action_items = {'VARIABLE':([0,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,45,46,47,48,49,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,77,78,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,107,110,111,112,114,123,124,125,126,127,129,133,135,137,138,139,140,151,153,154,155,159,160,161,164,167,168,172,174,176,177,179,180,183,185,186,189,190,191,192,193,195,196,197,198,199,200,201,202,204,205,213,216,217,220,222,223,225,233,236,237,238,239,240,241,242,244,246,247,249,250,251,252,253,254,255,256,259,260,262,264,266,268,269,],[20,-51,-49,-50,74,77,77,80,-52,77,-70,-71,82,-53,-54,77,77,77,-62,-63,-64,-65,88,77,113,77,117,77,-20,74,-19,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-55,-55,77,-68,-57,-60,-61,-66,-67,-55,-35,-36,-37,-38,-39,-40,-41,-43,-69,147,77,77,-99,-100,-101,-102,-103,-52,-54,-123,-42,-134,-44,-45,-46,-47,-48,77,74,-56,113,77,77,77,-88,77,194,194,-126,113,-135,77,77,77,74,-129,-58,-59,-104,-109,-72,-87,77,-105,-106,194,-124,-125,-110,-111,194,-114,194,-117,194,-120,77,77,-136,-130,-75,77,-95,-96,194,-76,-78,-90,77,-91,-97,-98,-137,-81,-121,-122,-107,-108,-112,-113,-115,-116,-118,-119,74,-82,77,74,-138,-92,-93,]),'IF':([0,21,22,23,24,29,31,32,34,35,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,77,81,83,84,85,88,89,90,91,92,93,94,95,96,97,102,103,104,105,106,107,110,111,112,114,133,135,151,159,161,172,174,176,177,179,180,183,185,189,190,192,193,195,196,198,200,202,213,216,217,222,223,233,236,237,239,240,241,242,244,246,247,249,250,251,252,253,254,255,256,259,260,264,266,268,269,],[25,-51,-49,-50,25,-52,-70,-71,-53,-54,-20,25,-19,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-55,-55,-68,-57,-60,-61,-55,-35,-36,-37,-38,-39,-40,-41,-43,-69,-99,-100,-101,-102,-103,-52,-54,-123,-42,-134,25,-56,-88,-126,-135,25,-129,-58,-59,-104,-109,-72,-87,-105,-106,-124,-125,-110,-111,-114,-117,-120,-136,-130,-75,-95,-96,-76,-78,-90,-91,-97,-98,-137,-81,-121,-122,-107,-108,-112,-113,-115,-116,-118,-119,25,-82,25,-138,-92,-93,]),'WHILE':([0,21,22,23,24,29,31,32,34,35,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,77,81,83,84,85,88,89,90,91,92,93,94,95,96,97,102,103,104,105,106,107,110,111,112,114,133,135,151,159,161,172,174,176,177,179,180,183,185,189,190,192,193,195,196,198,200,202,213,216,217,222,223,233,236,237,239,240,241,242,244,246,247,249,250,251,252,253,254,255,256,259,260,264,266,268,269,],[26,-51,-49,-50,26,-52,-70,-71,-53,-54,-20,26,-19,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-55,-55,-68,-57,-60,-61,-55,-35,-36,-37,-38,-39,-40,-41,-43,-69,-99,-100,-101,-102,-103,-52,-54,-123,-42,-134,26,-56,-88,-126,-135,26,-129,-58,-59,-104,-109,-72,-87,-105,-106,-124,-125,-110,-111,-114,-117,-120,-136,-130,-75,-95,-96,-76,-78,-90,-91,-97,-98,-137,26,-121,-122,-107,-108,-112,-113,-115,-116,-118,-119,26,-82,26,-138,-92,-93,]),'FOR':([0,21,22,23,24,29,31,32,34,35,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,77,81,83,84,85,88,89,90,91,92,93,94,95,96,97,102,103,104,105,106,107,110,111,112,114,133,135,151,159,161,172,174,176,177,179,180,183,185,189,190,192,193,195,196,198,200,202,213,216,217,222,223,233,236,237,239,240,241,242,244,246,247,249,250,251,252,253,254,255,256,259,260,264,266,268,269,],[28,-51,-49,-50,28,-52,-70,-71,-53,-54,-20,28,-19,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-55,-55,-68,-57,-60,-61,-55,-35,-36,-37,-38,-39,-40,-41,-43,-69,-99,-100,-101,-102,-103,-52,-54,-123,-42,-134,28,-56,-88,-126,-135,28,-129,-58,-59,-104,-109,-72,-87,-105,-106,-124,-125,-110,-111,-114,-117,-120,-136,-130,-75,-95,-96,-76,-78,-90,-91,-97,-98,-137,-81,-121,-122,-107,-108,-112,-113,-115,-116,-118,-119,28,-82,28,-138,28,-93,]),'PUTS':([0,21,22,23,24,29,31,32,34,35,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,77,81,83,84,85,88,89,90,91,92,93,94,95,96,97,102,103,104,105,106,107,110,111,112,114,133,135,151,159,161,172,174,176,177,179,180,183,185,189,190,192,193,195,196,198,200,202,213,216,217,222,223,233,236,237,239,240,241,242,244,246,247,249,250,251,252,253,254,255,256,259,260,264,266,268,269,],[30,-51,-49,-50,30,-52,-70,-71,-53,-54,-20,30,-19,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-55,-55,-68,-57,-60,-61,-55,-35,-36,-37,-38,-39,-40,-41,-43,-69,-99,-100,-101,-102,-103,-52,-54,-123,-42,-134,30,-56,-88,-126,-135,30,-129,-58,-59,-104,-109,-72,-87,-105,-106,-124,-125,-110,-111,-114,-117,-120,-136,-130,-75,-95,-96,-76,-78,-90,-91,-97,-98,-137,-81,-121,-122,-107,-108,-112,-113,-115,-116,-118,-119,30,-82,30,-138,-92,-93,]),'TRUE':([0,21,22,23,24,25,27,29,31,32,34,35,36,37,38,39,40,41,42,45,48,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,77,78,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,110,111,112,114,129,133,135,138,139,140,151,159,161,164,172,174,176,177,179,180,183,185,189,190,192,193,195,196,198,200,202,204,205,213,216,217,220,222,223,233,236,237,239,240,241,242,244,246,247,249,250,251,252,253,254,255,256,259,260,262,264,266,268,269,],[31,-51,-49,-50,31,31,31,-52,-70,-71,-53,-54,31,31,31,-62,-63,-64,-65,31,31,31,-20,31,-19,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-55,-55,31,-68,-57,-60,-61,-66,-67,-55,-35,-36,-37,-38,-39,-40,-41,-43,-69,31,31,-99,-100,-101,-102,-103,-52,-54,-123,-42,-134,31,31,-56,31,31,31,-88,-126,-135,31,31,-129,-58,-59,-104,-109,-72,-87,-105,-106,-124,-125,-110,-111,-114,-117,-120,31,31,-136,-130,-75,31,-95,-96,-76,-78,-90,-91,-97,-98,-137,-81,-121,-122,-107,-108,-112,-113,-115,-116,-118,-119,31,-82,31,31,-138,-92,-93,]),'FALSE':([0,21,22,23,24,25,27,29,31,32,34,35,36,37,38,39,40,41,42,45,48,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,77,78,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,102,103,104,105,106,107,110,111,112,114,129,133,135,138,139,140,151,159,161,164,172,174,176,177,179,180,183,185,189,190,192,193,195,196,198,200,202,204,205,213,216,217,220,222,223,233,236,237,239,240,241,242,244,246,247,249,250,251,252,253,254,255,256,259,260,262,264,266,268,269,],[32,-51,-49,-50,32,32,32,-52,-70,-71,-53,-54,32,32,32,-62,-63,-64,-65,32,32,32,-20,32,-19,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-55,-55,32,-68,-57,-60,-61,-66,-67,-55,-35,-36,-37,-38,-39,-40,-41,-43,-69,32,32,-99,-100,-101,-102,-103,-52,-54,-123,-42,-134,32,32,-56,32,32,32,-88,-126,-135,32,32,-129,-58,-59,-104,-109,-72,-87,-105,-106,-124,-125,-110,-111,-114,-117,-120,32,32,-136,-130,-75,32,-95,-96,-76,-78,-90,-91,-97,-98,-137,-81,-121,-122,-107,-108,-112,-113,-115,-116,-118,-119,32,-82,32,32,-138,-92,-93,]),'DEF':([0,],[33,]),'NUMBER':([0,21,22,23,24,25,27,29,30,31,32,34,35,36,37,38,39,40,41,42,45,46,48,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,77,78,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,107,109,110,111,112,114,123,124,125,126,127,129,133,135,136,138,139,140,141,142,151,153,154,155,156,157,158,159,161,164,165,166,167,168,172,174,176,177,179,180,183,185,186,189,190,191,192,193,195,196,197,198,199,200,201,202,204,205,213,216,217,218,219,220,222,223,225,233,236,237,238,239,240,241,242,244,245,246,247,249,250,251,252,253,254,255,256,259,260,262,264,266,268,269,],[29,-51,-49,-50,29,29,29,-52,29,-70,-71,-53,-54,29,29,29,-62,-63,-64,-65,107,29,29,29,-20,29,-19,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-55,-55,29,-68,-57,-60,-61,-66,-67,-55,-35,-36,-37,-38,-39,-40,-41,-43,-69,146,29,29,-99,-100,-101,-102,-103,-52,159,-54,-123,-42,-134,-44,-45,-46,-47,-48,29,29,-56,173,29,29,29,179,180,-88,29,193,193,193,193,193,-126,-135,29,208,209,29,29,29,-129,-58,-59,-104,-109,-72,-87,29,-105,-106,193,-124,-125,-110,-111,193,-114,193,-117,193,-120,29,29,-136,-130,-75,193,193,29,-95,-96,193,-76,-78,-90,29,-91,-97,-98,-137,-81,261,-121,-122,-107,-108,-112,-113,-115,-116,-118,-119,29,-82,29,29,-138,-92,-93,]),'STRING':([0,21,22,23,24,25,27,29,30,31,32,34,35,36,37,38,39,40,41,42,45,46,48,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,77,78,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,107,110,111,112,114,123,124,125,126,127,129,133,135,138,139,140,151,153,159,161,164,167,168,172,174,176,177,179,180,183,185,186,189,190,192,193,195,196,198,200,202,204,205,213,216,217,220,222,223,233,236,237,238,239,240,241,242,244,246,247,249,250,251,252,253,254,255,256,259,260,262,264,266,268,269,],[34,-51,-49,-50,34,34,34,-52,34,-70,-71,-53,-54,34,34,34,-62,-63,-64,-65,34,34,34,34,-20,34,-19,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-55,-55,34,-68,-57,-60,-61,-66,-67,-55,-35,-36,-37,-38,-39,-40,-41,-43,-69,34,34,34,-99,-100,-101,-102,-103,-52,-54,-123,-42,-134,-44,-45,-46,-47,-48,34,34,-56,34,34,34,-88,34,-126,-135,34,34,34,34,-129,-58,-59,-104,-109,-72,-87,34,-105,-106,-124,-125,-110,-111,-114,-117,-120,34,34,-136,-130,-75,34,-95,-96,-76,-78,-90,34,-91,-97,-98,-137,-81,-121,-122,-107,-108,-112,-113,-115,-116,-118,-119,34,-82,34,34,-138,-92,-93,]),'FLOAT':([0,21,22,23,24,25,27,29,30,31,32,34,35,36,37,38,39,40,41,42,45,46,48,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,77,78,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,102,103,104,105,106,107,110,111,112,114,123,124,125,126,127,129,133,135,138,139,140,151,153,154,155,156,157,158,159,161,164,167,168,172,174,176,177,179,180,183,185,186,189,190,191,192,193,195,196,197,198,199,200,201,202,204,205,213,216,217,218,219,220,222,223,225,233,236,237,238,239,240,241,242,244,246,247,249,250,251,252,253,254,255,256,259,260,262,264,266,268,269,],[35,-51,-49,-50,35,35,35,-52,35,-70,-71,-53,-54,35,35,35,-62,-63,-64,-65,110,35,35,35,-20,35,-19,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-55,-55,35,-68,-57,-60,-61,-66,-67,-55,-35,-36,-37,-38,-39,-40,-41,-43,-69,145,35,35,-99,-100,-101,-102,-103,-52,-54,-123,-42,-134,-44,-45,-46,-47,-48,35,35,-56,35,35,35,-88,35,192,192,192,192,192,-126,-135,35,35,35,35,-129,-58,-59,-104,-109,-72,-87,35,-105,-106,192,-124,-125,-110,-111,192,-114,192,-117,192,-120,35,35,-136,-130,-75,192,192,35,-95,-96,192,-76,-78,-90,35,-91,-97,-98,-137,-81,-121,-122,-107,-108,-112,-113,-115,-116,-118,-119,35,-82,35,35,-138,-92,-93,]),'LPAR':([0,20,21,22,23,24,25,26,27,29,30,31,32,34,35,36,37,38,39,40,41,42,45,46,48,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,77,78,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,110,111,112,114,118,119,120,121,122,123,124,125,126,127,129,133,135,138,139,140,151,153,154,155,156,157,159,161,163,164,167,168,172,174,176,177,179,180,183,185,186,189,190,191,192,193,195,196,197,198,199,200,201,202,204,205,213,216,217,220,222,223,225,233,236,237,238,239,240,241,242,244,246,247,249,250,251,252,253,254,255,256,259,260,262,264,266,268,269,],[27,47,-51,-49,-50,27,27,78,27,-52,27,-70,-71,-53,-54,27,27,27,-62,-63,-64,-65,98,27,27,27,-20,27,-19,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,47,-55,27,-68,137,-57,-60,-61,-66,-67,47,-35,-36,-37,-38,-39,-40,-41,-43,-69,98,27,27,153,-99,-100,-101,-102,-103,-52,-54,-123,-42,-134,164,165,166,167,168,-44,-45,-46,-47,-48,27,27,-56,27,27,27,-88,27,191,197,199,201,-126,-135,205,27,27,27,27,-129,-58,-59,-104,-109,-72,-87,27,-105,-106,225,-124,-125,-110,-111,225,-114,225,-117,225,-120,27,27,-136,-130,-75,27,-95,-96,225,-76,-78,-90,27,-91,-97,-98,-137,-81,-121,-122,-107,-108,-112,-113,-115,-116,-118,-119,27,-82,27,27,-138,-92,-93,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,29,31,32,34,35,77,81,83,84,85,88,89,90,91,92,93,94,95,96,97,102,103,104,105,106,107,110,111,112,114,128,135,151,159,161,170,176,177,179,180,183,185,189,190,192,193,195,196,198,200,202,212,213,217,222,223,233,235,236,237,239,240,241,242,244,246,247,249,250,251,252,253,254,255,256,257,260,266,268,269,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-55,-51,-49,-50,-52,-70,-71,-53,-54,-55,-68,-57,-60,-61,-55,-35,-36,-37,-38,-39,-40,-41,-43,-69,-99,-100,-101,-102,-103,-52,-54,-123,-42,-134,-131,-56,-88,-126,-135,-132,-58,-59,-104,-109,-72,-87,-105,-106,-124,-125,-110,-111,-114,-117,-120,-133,-136,-75,-95,-96,-76,-80,-78,-90,-91,-97,-98,-137,-81,-121,-122,-107,-108,-112,-113,-115,-116,-118,-119,-79,-82,-138,-92,-93,]),'AND':([3,20,21,22,23,29,31,32,34,35,57,74,76,77,83,88,89,107,110,135,],[37,-55,-51,-49,-50,-52,-70,-71,-53,-54,37,-55,37,-55,138,-55,37,-52,-54,-56,]),'OR':([3,20,21,22,23,29,31,32,34,35,57,74,76,77,83,88,89,107,110,135,],[38,-55,-51,-49,-50,-52,-70,-71,-53,-54,38,-55,38,-55,139,-55,38,-52,-54,-56,]),'GREATER':([3,20,21,22,23,29,31,32,34,35,57,74,76,77,88,89,107,110,135,184,],[39,-55,-51,-49,-50,-52,-70,-71,-53,-54,39,-55,39,-55,-55,39,-52,-54,-56,220,]),'GREATER_OR_EQUAL':([3,20,21,22,23,29,31,32,34,35,57,74,76,77,88,89,107,110,135,],[40,-55,-51,-49,-50,-52,-70,-71,-53,-54,40,-55,40,-55,-55,40,-52,-54,-56,]),'MINOR':([3,20,21,22,23,29,31,32,34,35,57,74,76,77,88,89,107,110,135,],[41,-55,-51,-49,-50,-52,-70,-71,-53,-54,41,-55,41,-55,-55,41,-52,-54,-56,]),'MINOR_OR_EQUAL':([3,20,21,22,23,29,31,32,34,35,57,74,76,77,88,89,107,110,135,],[42,-55,-51,-49,-50,-52,-70,-71,-53,-54,42,-55,42,-55,-55,42,-52,-54,-56,]),'ASIGN':([3,20,21,22,23,29,31,32,34,35,43,44,50,51,52,53,54,57,74,76,77,88,89,107,110,135,149,162,],[43,45,-51,-49,-50,-52,-70,-71,-53,-54,86,87,123,124,125,126,127,43,45,43,-55,-55,43,-52,-54,-56,184,204,]),'NOT':([3,20,21,22,23,29,31,32,34,35,57,74,76,77,88,89,107,110,135,],[44,-55,-51,-49,-50,-52,-70,-71,-53,-54,44,-55,44,-55,-55,44,-52,-54,-56,]),'LCOR':([20,45,74,88,],[48,100,48,140,]),'POINT':([20,74,173,215,],[49,132,215,245,]),'PLUS':([20,74,88,107,108,110,111,143,145,146,147,159,189,192,193,194,195,224,227,229,231,],[50,50,141,-125,154,-124,-123,154,-124,-125,141,-126,154,-124,-125,141,154,154,154,154,154,]),'MINUS':([20,45,74,88,98,107,108,110,111,143,145,146,147,154,155,156,157,158,159,189,191,192,193,194,195,197,199,201,218,219,224,225,227,229,231,],[51,109,51,142,109,-125,155,-124,-123,155,-124,-125,142,109,109,109,109,109,-126,155,109,-124,-125,142,155,109,109,109,109,109,155,109,155,155,155,]),'TIMES':([20,74,107,108,110,111,143,145,146,159,189,192,193,195,224,227,229,231,],[52,52,-125,156,-124,-123,156,-124,-125,-126,156,-124,-125,156,156,156,156,156,]),'DIVIDE':([20,74,107,108,110,111,143,145,146,159,189,192,193,195,224,227,229,231,],[53,53,-125,157,-124,-123,157,-124,-125,-126,157,-124,-125,157,157,157,157,157,]),'EXPONENTIATION':([20,74,107,108,110,111,143,145,146,159,181,182,189,192,193,195,224,227,229,231,249,250,251,252,],[54,54,-125,158,-124,-123,158,-124,-125,-126,218,219,158,-124,-125,158,158,158,158,158,218,219,218,219,]),'END':([21,22,23,29,31,32,34,35,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,77,81,83,84,85,88,89,90,91,92,93,94,95,96,97,102,103,104,105,106,107,110,111,112,114,130,131,135,151,159,161,169,171,176,177,179,180,183,185,189,190,192,193,195,196,198,200,202,213,214,217,222,223,233,236,237,239,240,241,242,244,246,247,249,250,251,252,253,254,255,256,260,263,266,267,268,269,],[-51,-49,-50,-52,-70,-71,-53,-54,128,-20,-83,-19,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-55,-55,-68,-57,-60,-61,-55,-35,-36,-37,-38,-39,-40,-41,-43,-69,-99,-100,-101,-102,-103,-52,-54,-123,-42,-134,170,-84,-56,-88,-126,-135,212,213,-58,-59,-104,-109,-72,-87,-105,-106,-124,-125,-110,-111,-114,-117,-120,-136,244,-75,-95,-96,-76,-78,-90,-91,-97,-98,-137,-81,-121,-122,-107,-108,-112,-113,-115,-116,-118,-119,-82,266,-138,268,-92,-93,]),'RETURN':([21,22,23,24,29,31,32,34,35,55,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,77,81,83,84,85,88,89,90,91,92,93,94,95,96,97,102,103,104,105,106,107,110,111,112,114,131,135,151,159,161,174,176,177,179,180,183,185,189,190,192,193,195,196,198,200,202,213,216,217,222,223,233,236,237,239,240,241,242,244,246,247,249,250,251,252,253,254,255,256,260,266,268,269,],[-51,-49,-50,56,-52,-70,-71,-53,-54,129,-20,-83,-19,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-55,-55,-68,-57,-60,-61,-55,-35,-36,-37,-38,-39,-40,-41,-43,-69,-99,-100,-101,-102,-103,-52,-54,-123,-42,-134,-84,-56,-88,-126,-135,-129,-58,-59,-104,-109,-72,-87,-105,-106,-124,-125,-110,-111,-114,-117,-120,-136,-130,-75,-95,-96,-76,-78,-90,-91,-97,-98,-137,-81,-121,-122,-107,-108,-112,-113,-115,-116,-118,-119,-82,-138,-92,-93,]),'RPAR':([21,22,23,29,31,32,34,35,47,77,79,83,84,85,102,103,104,105,106,111,113,115,134,135,137,143,144,145,146,147,152,153,159,175,176,177,179,180,187,188,189,190,192,193,195,196,198,200,202,203,205,206,207,209,210,211,221,224,226,227,228,229,230,231,232,234,246,247,249,250,251,252,253,254,255,256,258,],[-51,-49,-50,-52,-70,-71,-53,-54,114,-55,135,-57,-60,-61,-99,-100,-101,-102,-103,-123,-127,161,172,-56,174,181,182,-54,-52,-55,-85,-94,-126,216,-58,-59,-104,-109,222,223,-105,-106,-124,-125,-110,-111,-114,-117,-120,-128,235,236,237,239,240,241,-86,249,250,251,252,253,254,255,256,257,-121,-122,-107,-108,-112,-113,-115,-116,-118,-119,-89,]),'D_POINT':([21,22,23,29,31,32,34,35,75,77,83,84,85,135,176,177,243,],[-51,-49,-50,-52,-70,-71,-53,-54,133,-55,-57,-60,-61,-56,-58,-59,259,]),'RCOR':([21,22,23,29,31,32,34,35,77,100,116,135,150,152,178,221,],[-51,-49,-50,-52,-70,-71,-53,-54,-55,151,162,-56,185,-85,217,-86,]),'COMMA':([21,22,23,29,31,32,34,35,77,113,135,152,208,248,],[-51,-49,-50,-52,-70,-71,-53,-54,-55,160,-56,186,238,262,]),'RKEY':([21,22,23,29,31,32,34,35,77,135,148,248,265,],[-51,-49,-50,-52,-70,-71,-53,-54,-55,-56,183,-73,-74,]),'GETS':([45,],[97,]),'LKEY':([45,],[99,]),'STACK':([45,],[101,]),'DELETE':([49,132,],[118,118,]),'INSERT':([49,132,],[119,119,]),'DELETE_AT':([49,132,],[120,120,]),'SEARCH':([49,132,],[121,121,]),'PUSH':([49,132,],[122,122,]),'IN':([80,],[136,]),'QUESTION':([117,],[163,]),'ELSE':([213,],[243,]),'DO':([261,],[264,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instrucciones':([0,],[1,]),'asignacion':([0,24,58,133,172,259,264,],[2,59,59,59,59,59,59,]),'expression':([0,24,25,27,36,37,38,45,48,56,58,78,98,99,129,133,138,139,140,164,172,204,205,220,259,262,264,],[3,57,76,79,83,84,85,89,116,130,57,76,79,149,169,57,76,76,178,206,57,233,234,248,57,149,57,]),'funciones':([0,],[4,]),'comparacion':([0,24,25,45,58,78,133,138,139,172,259,264,],[5,60,75,90,60,134,60,176,177,60,60,60,]),'condicional':([0,24,58,133,172,259,264,],[6,61,61,61,61,61,61,]),'while':([0,24,58,133,172,244,259,264,],[7,64,64,64,64,260,64,64,]),'for':([0,24,58,133,172,259,264,268,],[8,63,63,63,63,63,63,269,]),'impresion':([0,24,58,133,172,259,264,],[9,62,62,62,62,62,62,]),'input':([0,24,58,133,172,259,264,],[10,65,65,65,65,65,65,]),'callFuncion':([0,24,45,58,133,172,259,264,],[11,66,91,66,66,66,66,66,]),'addValueHash':([0,24,58,133,172,259,264,],[12,67,67,67,67,67,67,]),'modValueHash':([0,24,58,133,172,259,264,],[13,68,68,68,68,68,68,]),'deleteValueHash':([0,24,58,133,172,259,264,],[14,69,69,69,69,69,69,]),'insertArray':([0,24,58,133,172,259,264,],[15,70,70,70,70,70,70,]),'deleteArray':([0,24,58,133,172,259,264,],[16,71,71,71,71,71,71,]),'searchStack':([0,24,58,133,172,259,264,],[17,73,73,73,73,73,73,]),'pushStack':([0,24,58,133,172,259,264,],[18,72,72,72,72,72,72,]),'metodoBoleano':([0,],[19,]),'factor':([0,24,25,27,30,36,37,38,45,46,48,56,58,78,98,99,100,129,133,138,139,140,153,164,167,168,172,186,204,205,220,238,259,262,264,],[21,21,21,21,81,21,21,21,21,112,21,21,21,21,21,21,152,21,21,21,21,21,152,21,210,211,21,152,21,21,21,258,21,21,21,]),'term':([0,24,25,27,36,37,38,45,48,56,58,78,98,99,129,133,138,139,140,164,172,204,205,220,259,262,264,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'boleano':([0,24,25,27,36,37,38,45,48,56,58,78,98,99,129,133,138,139,140,164,172,204,205,220,259,262,264,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'encabezado':([0,],[24,]),'comparador':([3,57,76,89,],[36,36,36,36,]),'tipo_asignacion':([20,74,],[46,46,]),'repCuerpo':([24,58,133,172,259,264,],[55,131,171,214,263,267,]),'cuerpo':([24,58,133,172,259,264,],[58,58,58,58,58,58,]),'diccionario':([45,],[92,]),'getValueHash':([45,],[93,]),'array':([45,],[94,]),'stack':([45,],[95,]),'opMatematicas':([45,98,154,155,191,197,199,201,225,],[96,144,190,196,226,228,230,232,144,]),'suma':([45,98,154,155,191,197,199,201,225,],[102,102,102,102,102,102,102,102,102,]),'resta':([45,98,154,155,191,197,199,201,225,],[103,103,103,103,103,103,103,103,103,]),'multiplicacion':([45,98,154,155,191,197,199,201,225,],[104,104,104,104,104,104,104,104,104,]),'division':([45,98,154,155,191,197,199,201,225,],[105,105,105,105,105,105,105,105,105,]),'exponenciacion':([45,98,154,155,191,197,199,201,225,],[106,106,106,106,106,106,106,106,106,]),'operadores':([45,98,154,155,156,157,158,191,197,199,201,218,219,225,],[108,143,189,195,198,200,202,224,227,229,231,246,247,143,]),'enteros':([45,98,154,155,156,157,158,191,197,199,201,218,219,225,],[111,111,111,111,111,111,111,111,111,111,111,111,111,111,]),'parametros':([47,137,160,],[115,175,203,]),'cuerpoHash':([99,262,],[148,265,]),'parametrosA':([100,153,186,],[150,187,221,]),'vacio':([153,],[188,]),'argumentosA':([165,],[207,]),'cond_else':([213,],[242,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> instrucciones","S'",1,None,None,None),
  ('instrucciones -> asignacion','instrucciones',1,'p_instrucciones','sintactico.py',6),
  ('instrucciones -> expression','instrucciones',1,'p_instrucciones','sintactico.py',7),
  ('instrucciones -> funciones','instrucciones',1,'p_instrucciones','sintactico.py',8),
  ('instrucciones -> comparacion','instrucciones',1,'p_instrucciones','sintactico.py',9),
  ('instrucciones -> condicional','instrucciones',1,'p_instrucciones','sintactico.py',10),
  ('instrucciones -> while','instrucciones',1,'p_instrucciones','sintactico.py',11),
  ('instrucciones -> for','instrucciones',1,'p_instrucciones','sintactico.py',12),
  ('instrucciones -> impresion','instrucciones',1,'p_instrucciones','sintactico.py',13),
  ('instrucciones -> input','instrucciones',1,'p_instrucciones','sintactico.py',14),
  ('instrucciones -> callFuncion','instrucciones',1,'p_instrucciones','sintactico.py',15),
  ('instrucciones -> addValueHash','instrucciones',1,'p_instrucciones','sintactico.py',16),
  ('instrucciones -> modValueHash','instrucciones',1,'p_instrucciones','sintactico.py',17),
  ('instrucciones -> deleteValueHash','instrucciones',1,'p_instrucciones','sintactico.py',18),
  ('instrucciones -> insertArray','instrucciones',1,'p_instrucciones','sintactico.py',19),
  ('instrucciones -> deleteArray','instrucciones',1,'p_instrucciones','sintactico.py',20),
  ('instrucciones -> searchStack','instrucciones',1,'p_instrucciones','sintactico.py',21),
  ('instrucciones -> pushStack','instrucciones',1,'p_instrucciones','sintactico.py',22),
  ('instrucciones -> metodoBoleano','instrucciones',1,'p_instrucciones','sintactico.py',23),
  ('cuerpo -> asignacion','cuerpo',1,'p_body','sintactico.py',27),
  ('cuerpo -> expression','cuerpo',1,'p_body','sintactico.py',28),
  ('cuerpo -> comparacion','cuerpo',1,'p_body','sintactico.py',29),
  ('cuerpo -> condicional','cuerpo',1,'p_body','sintactico.py',30),
  ('cuerpo -> impresion','cuerpo',1,'p_body','sintactico.py',31),
  ('cuerpo -> for','cuerpo',1,'p_body','sintactico.py',32),
  ('cuerpo -> while','cuerpo',1,'p_body','sintactico.py',33),
  ('cuerpo -> input','cuerpo',1,'p_body','sintactico.py',34),
  ('cuerpo -> callFuncion','cuerpo',1,'p_body','sintactico.py',35),
  ('cuerpo -> addValueHash','cuerpo',1,'p_body','sintactico.py',36),
  ('cuerpo -> modValueHash','cuerpo',1,'p_body','sintactico.py',37),
  ('cuerpo -> deleteValueHash','cuerpo',1,'p_body','sintactico.py',38),
  ('cuerpo -> insertArray','cuerpo',1,'p_body','sintactico.py',39),
  ('cuerpo -> deleteArray','cuerpo',1,'p_body','sintactico.py',40),
  ('cuerpo -> pushStack','cuerpo',1,'p_body','sintactico.py',41),
  ('cuerpo -> searchStack','cuerpo',1,'p_body','sintactico.py',42),
  ('asignacion -> VARIABLE ASIGN expression','asignacion',3,'p_asignacion','sintactico.py',46),
  ('asignacion -> VARIABLE ASIGN comparacion','asignacion',3,'p_asignacion','sintactico.py',47),
  ('asignacion -> VARIABLE ASIGN callFuncion','asignacion',3,'p_asignacion','sintactico.py',48),
  ('asignacion -> VARIABLE ASIGN diccionario','asignacion',3,'p_asignacion','sintactico.py',49),
  ('asignacion -> VARIABLE ASIGN getValueHash','asignacion',3,'p_asignacion','sintactico.py',50),
  ('asignacion -> VARIABLE ASIGN array','asignacion',3,'p_asignacion','sintactico.py',51),
  ('asignacion -> VARIABLE ASIGN stack','asignacion',3,'p_asignacion','sintactico.py',52),
  ('asignacion -> VARIABLE tipo_asignacion factor','asignacion',3,'p_asignacion','sintactico.py',53),
  ('asignacion -> VARIABLE ASIGN opMatematicas','asignacion',3,'p_asignacion','sintactico.py',54),
  ('tipo_asignacion -> PLUS ASIGN','tipo_asignacion',2,'p_tipo_asignacion','sintactico.py',57),
  ('tipo_asignacion -> MINUS ASIGN','tipo_asignacion',2,'p_tipo_asignacion','sintactico.py',58),
  ('tipo_asignacion -> TIMES ASIGN','tipo_asignacion',2,'p_tipo_asignacion','sintactico.py',59),
  ('tipo_asignacion -> DIVIDE ASIGN','tipo_asignacion',2,'p_tipo_asignacion','sintactico.py',60),
  ('tipo_asignacion -> EXPONENTIATION ASIGN','tipo_asignacion',2,'p_tipo_asignacion','sintactico.py',61),
  ('expression -> term','expression',1,'p_expression_term','sintactico.py',66),
  ('expression -> boleano','expression',1,'p_expression_term','sintactico.py',67),
  ('term -> factor','term',1,'p_term_factor','sintactico.py',71),
  ('factor -> NUMBER','factor',1,'p_factor_num','sintactico.py',74),
  ('factor -> STRING','factor',1,'p_factor_num','sintactico.py',75),
  ('factor -> FLOAT','factor',1,'p_factor_num','sintactico.py',76),
  ('factor -> VARIABLE','factor',1,'p_factor_num','sintactico.py',77),
  ('factor -> LPAR expression RPAR','factor',3,'p_factor_expr','sintactico.py',81),
  ('comparacion -> expression comparador expression','comparacion',3,'p_comparacion','sintactico.py',85),
  ('comparacion -> expression comparador expression AND comparacion','comparacion',5,'p_comparacion','sintactico.py',86),
  ('comparacion -> expression comparador expression OR comparacion','comparacion',5,'p_comparacion','sintactico.py',87),
  ('comparacion -> expression AND expression','comparacion',3,'p_comparacion','sintactico.py',88),
  ('comparacion -> expression OR expression','comparacion',3,'p_comparacion','sintactico.py',89),
  ('comparador -> GREATER','comparador',1,'p_comparador','sintactico.py',94),
  ('comparador -> GREATER_OR_EQUAL','comparador',1,'p_comparador','sintactico.py',95),
  ('comparador -> MINOR','comparador',1,'p_comparador','sintactico.py',96),
  ('comparador -> MINOR_OR_EQUAL','comparador',1,'p_comparador','sintactico.py',97),
  ('comparador -> ASIGN ASIGN','comparador',2,'p_comparador','sintactico.py',98),
  ('comparador -> NOT ASIGN','comparador',2,'p_comparador','sintactico.py',99),
  ('impresion -> PUTS factor','impresion',2,'p_puts','sintactico.py',105),
  ('input -> VARIABLE ASIGN GETS','input',3,'p_gets','sintactico.py',108),
  ('boleano -> TRUE','boleano',1,'p_boolean','sintactico.py',112),
  ('boleano -> FALSE','boleano',1,'p_boolean','sintactico.py',113),
  ('diccionario -> LKEY cuerpoHash RKEY','diccionario',3,'p_hash','sintactico.py',118),
  ('cuerpoHash -> expression ASIGN GREATER expression','cuerpoHash',4,'p_body_hash','sintactico.py',121),
  ('cuerpoHash -> expression ASIGN GREATER expression COMMA cuerpoHash','cuerpoHash',6,'p_body_hash','sintactico.py',122),
  ('getValueHash -> VARIABLE LCOR expression RCOR','getValueHash',4,'p_get_hash','sintactico.py',126),
  ('addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression','addValueHash',6,'p_add_hash','sintactico.py',129),
  ('modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression','modValueHash',6,'p_mod_hash','sintactico.py',132),
  ('deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR','deleteValueHash',6,'p_del_hash','sintactico.py',135),
  ('metodoBoleano -> VARIABLE POINT VARIABLE QUESTION LPAR expression RPAR','metodoBoleano',7,'p_boolean_method','sintactico.py',139),
  ('metodoBoleano -> VARIABLE POINT VARIABLE QUESTION LPAR RPAR','metodoBoleano',6,'p_boolean_method','sintactico.py',140),
  ('while -> WHILE LPAR comparacion RPAR repCuerpo END','while',6,'p_while','sintactico.py',148),
  ('while -> WHILE LPAR comparacion RPAR repCuerpo END while','while',7,'p_while','sintactico.py',149),
  ('repCuerpo -> cuerpo','repCuerpo',1,'p_repCuerpo','sintactico.py',152),
  ('repCuerpo -> cuerpo repCuerpo','repCuerpo',2,'p_repCuerpo','sintactico.py',153),
  ('parametrosA -> factor','parametrosA',1,'p_parA_function','sintactico.py',158),
  ('parametrosA -> factor COMMA parametrosA','parametrosA',3,'p_parA_function','sintactico.py',159),
  ('array -> LCOR parametrosA RCOR','array',3,'p_array','sintactico.py',162),
  ('array -> LCOR RCOR','array',2,'p_array','sintactico.py',163),
  ('argumentosA -> NUMBER COMMA factor','argumentosA',3,'p_argumentos_array','sintactico.py',167),
  ('insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR','insertArray',6,'p_insert_array','sintactico.py',171),
  ('deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR','deleteArray',6,'p_delete_array','sintactico.py',175),
  ('for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END','for',10,'p_for','sintactico.py',183),
  ('for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for','for',11,'p_for','sintactico.py',184),
  ('vacio -> <empty>','vacio',0,'p_vacio','sintactico.py',188),
  ('stack -> STACK LPAR parametrosA RPAR','stack',4,'p_stack','sintactico.py',190),
  ('stack -> STACK LPAR vacio RPAR','stack',4,'p_stack','sintactico.py',191),
  ('searchStack -> VARIABLE POINT SEARCH LPAR factor RPAR','searchStack',6,'p_search_stack','sintactico.py',194),
  ('pushStack -> VARIABLE POINT PUSH LPAR factor RPAR','pushStack',6,'p_push_stack','sintactico.py',197),
  ('opMatematicas -> suma','opMatematicas',1,'p_opMatematicas','sintactico.py',212),
  ('opMatematicas -> resta','opMatematicas',1,'p_opMatematicas','sintactico.py',213),
  ('opMatematicas -> multiplicacion','opMatematicas',1,'p_opMatematicas','sintactico.py',214),
  ('opMatematicas -> division','opMatematicas',1,'p_opMatematicas','sintactico.py',215),
  ('opMatematicas -> exponenciacion','opMatematicas',1,'p_opMatematicas','sintactico.py',216),
  ('suma -> VARIABLE PLUS NUMBER','suma',3,'p_suma','sintactico.py',220),
  ('suma -> operadores PLUS operadores','suma',3,'p_suma','sintactico.py',221),
  ('suma -> operadores PLUS opMatematicas','suma',3,'p_suma','sintactico.py',222),
  ('suma -> operadores PLUS LPAR operadores RPAR','suma',5,'p_suma','sintactico.py',223),
  ('suma -> operadores PLUS LPAR opMatematicas RPAR','suma',5,'p_suma','sintactico.py',224),
  ('resta -> VARIABLE MINUS NUMBER','resta',3,'p_resta','sintactico.py',228),
  ('resta -> operadores MINUS operadores','resta',3,'p_resta','sintactico.py',229),
  ('resta -> operadores MINUS opMatematicas','resta',3,'p_resta','sintactico.py',230),
  ('resta -> operadores MINUS LPAR operadores RPAR','resta',5,'p_resta','sintactico.py',231),
  ('resta -> operadores MINUS LPAR opMatematicas RPAR','resta',5,'p_resta','sintactico.py',232),
  ('multiplicacion -> operadores TIMES operadores','multiplicacion',3,'p_multiplicacion','sintactico.py',236),
  ('multiplicacion -> operadores TIMES LPAR operadores RPAR','multiplicacion',5,'p_multiplicacion','sintactico.py',237),
  ('multiplicacion -> operadores TIMES LPAR opMatematicas RPAR','multiplicacion',5,'p_multiplicacion','sintactico.py',238),
  ('division -> operadores DIVIDE operadores','division',3,'p_divicion','sintactico.py',242),
  ('division -> operadores DIVIDE LPAR operadores RPAR','division',5,'p_divicion','sintactico.py',243),
  ('division -> operadores DIVIDE LPAR opMatematicas RPAR','division',5,'p_divicion','sintactico.py',244),
  ('exponenciacion -> operadores EXPONENTIATION operadores','exponenciacion',3,'p_exponenciacion','sintactico.py',248),
  ('exponenciacion -> LPAR operadores RPAR EXPONENTIATION operadores','exponenciacion',5,'p_exponenciacion','sintactico.py',249),
  ('exponenciacion -> LPAR opMatematicas RPAR EXPONENTIATION operadores','exponenciacion',5,'p_exponenciacion','sintactico.py',250),
  ('operadores -> enteros','operadores',1,'p_operadores','sintactico.py',254),
  ('operadores -> FLOAT','operadores',1,'p_operadores','sintactico.py',255),
  ('enteros -> NUMBER','enteros',1,'p_enteros','sintactico.py',259),
  ('enteros -> MINUS NUMBER','enteros',2,'p_enteros','sintactico.py',260),
  ('parametros -> VARIABLE','parametros',1,'p_par_function','sintactico.py',268),
  ('parametros -> VARIABLE COMMA parametros','parametros',3,'p_par_function','sintactico.py',269),
  ('encabezado -> DEF VARIABLE LPAR RPAR','encabezado',4,'p_header_function','sintactico.py',273),
  ('encabezado -> DEF VARIABLE LPAR parametros RPAR','encabezado',5,'p_header_function','sintactico.py',274),
  ('funciones -> encabezado repCuerpo END','funciones',3,'p_function','sintactico.py',278),
  ('funciones -> encabezado RETURN expression END','funciones',4,'p_function','sintactico.py',279),
  ('funciones -> encabezado repCuerpo RETURN expression END','funciones',5,'p_function','sintactico.py',280),
  ('callFuncion -> VARIABLE LPAR RPAR','callFuncion',3,'p_call_function','sintactico.py',284),
  ('callFuncion -> VARIABLE LPAR parametros RPAR','callFuncion',4,'p_call_function','sintactico.py',285),
  ('condicional -> IF comparacion D_POINT repCuerpo END','condicional',5,'p_cond_if','sintactico.py',292),
  ('condicional -> IF comparacion D_POINT repCuerpo END cond_else','condicional',6,'p_cond_if','sintactico.py',293),
  ('cond_else -> ELSE D_POINT repCuerpo END','cond_else',4,'p_cond_else','sintactico.py',297),
]
