
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASIGN COMMA DEF DELETE DELETE_AT DIVIDE DO D_POINT ELSE END EXPONENTIATION FALSE FLOAT FOR GETS GREATER GREATER_OR_EQUAL IF IN INSERT LCOR LKEY LPAR MINOR MINOR_OR_EQUAL MINUS NOT NUMBER OR PLUS POINT PUSH PUTS QUESTION RCOR RETURN RKEY RPAR SEARCH STRING TIMES TRUE VARIABLE WHILEinstrucciones : asignacion\n                    | expression\n                    | funciones\n                    | comparacion\n                    | condicional\n                    | while\n                    | for\n                    | impresion\n                    | input\n                    | callFuncion\n                    | addValueHash\n                    | modValueHash\n                    | deleteValueHash\n                    | insertArray\n                    | deleteArray\n                    | searchStack\n                    | pushStack    \n                    | metodoBoleano    \n     cuerpo : asignacion\n                | expression\n                | comparacion\n                | condicional\n                | impresion\n                | for\n                | while\n                | input\n                | callFuncion\n                | addValueHash\n                | modValueHash\n                | deleteValueHash\n                | insertArray\n                | deleteArray\n                | pushStack\n                | searchStack\n    asignacion : VARIABLE ASIGN expression\n                | VARIABLE ASIGN comparacion\n                | VARIABLE ASIGN callFuncion\n                | VARIABLE ASIGN diccionario\n                | VARIABLE ASIGN getValueHash\n                | VARIABLE ASIGN array\n                | VARIABLE ASIGN stack\n                | VARIABLE tipo_asignacion factor\n    tipo_asignacion : PLUS ASIGN\n                        | MINUS ASIGN \n                        | TIMES ASIGN \n                        | DIVIDE ASIGN \n                        | EXPONENTIATION ASIGN \n    expression : term \n                    | boleano\n    term : factorfactor : NUMBER\n                | STRING\n                | FLOAT\n                | VARIABLE\n    factor : LPAR expression RPARexpression : expression PLUS termexpression : expression MINUS termterm : term TIMES factorterm : term DIVIDE factorterm : term EXPONENTIATION factorcomparacion : expression comparador expression\n                    | expression comparador expression AND comparacion\n                    | expression comparador expression OR comparacion\n                    | expression AND expression\n                    | expression OR expression\n    \n    comparador : GREATER \n                | GREATER_OR_EQUAL\n                | MINOR\n                | MINOR_OR_EQUAL\n                | ASIGN ASIGN\n                | NOT ASIGN\n    condicional : IF comparacion D_POINT repCuerpo END\n                    | IF comparacion D_POINT repCuerpo END cond_else\n    cond_else : ELSE D_POINT repCuerpo ENDimpresion : PUTS factorinput : VARIABLE ASIGN GETS parametros : VARIABLE\n                    | VARIABLE COMMA parametros\n    encabezado : DEF VARIABLE LPAR RPAR\n                    | DEF VARIABLE LPAR parametros RPAR\n    funciones : encabezado repCuerpo END\n                | encabezado RETURN expression END\n                | encabezado repCuerpo RETURN expression END\n    callFuncion : VARIABLE LPAR RPAR\n                | VARIABLE LPAR parametros RPAR\n    boleano : TRUE \n                | FALSE\n    diccionario : LKEY cuerpoHash RKEYcuerpoHash : expression ASIGN GREATER expression\n                    | expression ASIGN GREATER expression COMMA cuerpoHash\n    getValueHash : VARIABLE LCOR expression RCORaddValueHash : VARIABLE LCOR expression RCOR ASIGN expressionmodValueHash : VARIABLE LCOR expression RCOR ASIGN expressiondeleteValueHash : VARIABLE POINT DELETE LPAR expression RPARmetodoBoleano : VARIABLE POINT VARIABLE QUESTION LPAR expression RPAR\n                    | VARIABLE POINT VARIABLE QUESTION LPAR RPAR\n    while : WHILE LPAR comparacion RPAR repCuerpo END\n            | WHILE LPAR comparacion RPAR repCuerpo END while\n    repCuerpo : cuerpo \n                | cuerpo repCuerpo\n     parametrosA : factor\n                    | factor COMMA parametrosA\n    array : LCOR parametrosA RCOR\n             | LCOR RCOR\n    argumentosA : NUMBER COMMA factor\n    insertArray : VARIABLE POINT INSERT LPAR argumentosA RPAR\n    deleteArray : VARIABLE POINT DELETE_AT LPAR NUMBER RPAR\n    for : FOR VARIABLE IN NUMBER POINT POINT NUMBER  DO repCuerpo END\n            | FOR VARIABLE IN NUMBER POINT POINT NUMBER  DO repCuerpo END for\n    vacio : ""stack : LCOR parametrosA RCOR\n            | LCOR vacio RCOR\n    searchStack : VARIABLE POINT SEARCH LPAR factor RPAR\n    pushStack : VARIABLE POINT PUSH LPAR factor RPAR\n    '
    
_lr_action_items = {'VARIABLE':([0,21,22,23,24,25,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,47,48,49,50,51,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,82,83,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,117,118,119,120,121,122,123,124,126,130,132,134,135,136,137,141,145,146,149,152,153,157,159,161,162,164,166,167,168,170,171,179,182,183,184,186,189,190,191,192,193,194,195,197,202,203,205,207,209,211,212,],[20,-50,-48,-49,79,82,82,85,-51,82,-86,-87,87,-52,-53,82,82,82,82,82,-66,-67,-68,-69,95,82,107,82,111,82,82,82,82,-20,79,-19,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-54,-54,82,-75,-56,-57,-61,-64,-65,-70,-71,-54,-35,-36,-37,-38,-39,-40,-41,-76,82,82,-42,-84,-43,-44,-45,-46,-47,-58,-59,-60,82,79,-55,107,82,82,82,-104,107,-85,82,82,82,79,-79,-62,-63,-88,-103,-112,82,82,82,-72,-80,-91,82,-92,-94,-106,82,-107,-113,-114,-73,-97,79,-98,82,79,-74,-108,-109,]),'IF':([0,21,22,23,24,29,31,32,34,35,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,82,86,88,89,90,91,92,95,96,97,98,99,100,101,102,103,106,108,122,123,124,130,132,141,146,157,159,161,162,164,166,167,179,182,183,186,189,190,192,193,194,195,197,202,203,207,209,211,212,],[25,-50,-48,-49,25,-51,-86,-87,-52,-53,-20,25,-19,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-54,-54,-75,-56,-57,-61,-64,-65,-54,-35,-36,-37,-38,-39,-40,-41,-76,-42,-84,-58,-59,-60,25,-55,-104,-85,25,-79,-62,-63,-88,-103,-112,-72,-80,-91,-92,-94,-106,-107,-113,-114,-73,-97,25,-98,25,-74,-108,-109,]),'WHILE':([0,21,22,23,24,29,31,32,34,35,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,82,86,88,89,90,91,92,95,96,97,98,99,100,101,102,103,106,108,122,123,124,130,132,141,146,157,159,161,162,164,166,167,179,182,183,186,189,190,192,193,194,195,197,202,203,207,209,211,212,],[26,-50,-48,-49,26,-51,-86,-87,-52,-53,-20,26,-19,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-54,-54,-75,-56,-57,-61,-64,-65,-54,-35,-36,-37,-38,-39,-40,-41,-76,-42,-84,-58,-59,-60,26,-55,-104,-85,26,-79,-62,-63,-88,-103,-112,-72,-80,-91,-92,-94,-106,-107,-113,-114,-73,26,26,-98,26,-74,-108,-109,]),'FOR':([0,21,22,23,24,29,31,32,34,35,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,82,86,88,89,90,91,92,95,96,97,98,99,100,101,102,103,106,108,122,123,124,130,132,141,146,157,159,161,162,164,166,167,179,182,183,186,189,190,192,193,194,195,197,202,203,207,209,211,212,],[28,-50,-48,-49,28,-51,-86,-87,-52,-53,-20,28,-19,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-54,-54,-75,-56,-57,-61,-64,-65,-54,-35,-36,-37,-38,-39,-40,-41,-76,-42,-84,-58,-59,-60,28,-55,-104,-85,28,-79,-62,-63,-88,-103,-112,-72,-80,-91,-92,-94,-106,-107,-113,-114,-73,-97,28,-98,28,-74,28,-109,]),'PUTS':([0,21,22,23,24,29,31,32,34,35,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,82,86,88,89,90,91,92,95,96,97,98,99,100,101,102,103,106,108,122,123,124,130,132,141,146,157,159,161,162,164,166,167,179,182,183,186,189,190,192,193,194,195,197,202,203,207,209,211,212,],[30,-50,-48,-49,30,-51,-86,-87,-52,-53,-20,30,-19,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-54,-54,-75,-56,-57,-61,-64,-65,-54,-35,-36,-37,-38,-39,-40,-41,-76,-42,-84,-58,-59,-60,30,-55,-104,-85,30,-79,-62,-63,-88,-103,-112,-72,-80,-91,-92,-94,-106,-107,-113,-114,-73,-97,30,-98,30,-74,-108,-109,]),'TRUE':([0,21,22,23,24,25,27,29,31,32,34,35,38,39,40,41,42,43,44,47,50,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,82,83,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,122,123,124,126,130,132,135,136,137,141,146,149,157,159,161,162,164,166,167,170,171,179,182,183,184,186,189,190,192,193,194,195,197,202,203,205,207,209,211,212,],[31,-50,-48,-49,31,31,31,-51,-86,-87,-52,-53,31,31,31,-66,-67,-68,-69,31,31,31,-20,31,-19,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-54,-54,31,-75,-56,-57,-61,-64,-65,-70,-71,-54,-35,-36,-37,-38,-39,-40,-41,-76,31,-42,-84,-58,-59,-60,31,31,-55,31,31,31,-104,-85,31,31,-79,-62,-63,-88,-103,-112,31,31,-72,-80,-91,31,-92,-94,-106,-107,-113,-114,-73,-97,31,-98,31,31,-74,-108,-109,]),'FALSE':([0,21,22,23,24,25,27,29,31,32,34,35,38,39,40,41,42,43,44,47,50,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,82,83,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,106,108,122,123,124,126,130,132,135,136,137,141,146,149,157,159,161,162,164,166,167,170,171,179,182,183,184,186,189,190,192,193,194,195,197,202,203,205,207,209,211,212,],[32,-50,-48,-49,32,32,32,-51,-86,-87,-52,-53,32,32,32,-66,-67,-68,-69,32,32,32,-20,32,-19,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-54,-54,32,-75,-56,-57,-61,-64,-65,-70,-71,-54,-35,-36,-37,-38,-39,-40,-41,-76,32,-42,-84,-58,-59,-60,32,32,-55,32,32,32,-104,-85,32,32,-79,-62,-63,-88,-103,-112,32,32,-72,-80,-91,32,-92,-94,-106,-107,-113,-114,-73,-97,32,-98,32,32,-74,-108,-109,]),'DEF':([0,],[33,]),'NUMBER':([0,21,22,23,24,25,27,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,47,48,50,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,82,83,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,117,118,119,120,121,122,123,124,126,130,132,133,135,136,137,141,146,149,150,151,152,153,157,159,161,162,164,166,167,168,170,171,179,182,183,184,186,189,190,191,192,193,194,195,197,198,202,203,205,207,209,211,212,],[29,-50,-48,-49,29,29,29,-51,29,-86,-87,-52,-53,29,29,29,29,29,-66,-67,-68,-69,29,29,29,29,29,29,29,-20,29,-19,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-54,-54,29,-75,-56,-57,-61,-64,-65,-70,-71,-54,-35,-36,-37,-38,-39,-40,-41,-76,29,29,-42,-84,-43,-44,-45,-46,-47,-58,-59,-60,29,29,-55,158,29,29,29,-104,-85,29,174,175,29,29,29,-79,-62,-63,-88,-103,-112,29,29,29,-72,-80,-91,29,-92,-94,-106,29,-107,-113,-114,-73,-97,204,29,-98,29,29,-74,-108,-109,]),'STRING':([0,21,22,23,24,25,27,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,47,48,50,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,82,83,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,117,118,119,120,121,122,123,124,126,130,132,135,136,137,141,146,149,152,153,157,159,161,162,164,166,167,168,170,171,179,182,183,184,186,189,190,191,192,193,194,195,197,202,203,205,207,209,211,212,],[34,-50,-48,-49,34,34,34,-51,34,-86,-87,-52,-53,34,34,34,34,34,-66,-67,-68,-69,34,34,34,34,34,34,34,-20,34,-19,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-54,-54,34,-75,-56,-57,-61,-64,-65,-70,-71,-54,-35,-36,-37,-38,-39,-40,-41,-76,34,34,-42,-84,-43,-44,-45,-46,-47,-58,-59,-60,34,34,-55,34,34,34,-104,-85,34,34,34,34,-79,-62,-63,-88,-103,-112,34,34,34,-72,-80,-91,34,-92,-94,-106,34,-107,-113,-114,-73,-97,34,-98,34,34,-74,-108,-109,]),'FLOAT':([0,21,22,23,24,25,27,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,47,48,50,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,82,83,86,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,117,118,119,120,121,122,123,124,126,130,132,135,136,137,141,146,149,152,153,157,159,161,162,164,166,167,168,170,171,179,182,183,184,186,189,190,191,192,193,194,195,197,202,203,205,207,209,211,212,],[35,-50,-48,-49,35,35,35,-51,35,-86,-87,-52,-53,35,35,35,35,35,-66,-67,-68,-69,35,35,35,35,35,35,35,-20,35,-19,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-54,-54,35,-75,-56,-57,-61,-64,-65,-70,-71,-54,-35,-36,-37,-38,-39,-40,-41,-76,35,35,-42,-84,-43,-44,-45,-46,-47,-58,-59,-60,35,35,-55,35,35,35,-104,-85,35,35,35,35,-79,-62,-63,-88,-103,-112,35,35,35,-72,-80,-91,35,-92,-94,-106,35,-107,-113,-114,-73,-97,35,-98,35,35,-74,-108,-109,]),'LPAR':([0,20,21,22,23,24,25,26,27,29,30,31,32,34,35,36,37,38,39,40,41,42,43,44,47,48,50,57,58,59,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,82,83,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,108,112,113,114,115,116,117,118,119,120,121,122,123,124,126,130,132,135,136,137,141,146,148,149,152,153,157,159,161,162,164,166,167,168,170,171,179,182,183,184,186,189,190,191,192,193,194,195,197,202,203,205,207,209,211,212,],[27,49,-50,-48,-49,27,27,83,27,-51,27,-86,-87,-52,-53,27,27,27,27,27,-66,-67,-68,-69,27,27,27,27,27,27,27,-20,27,-19,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,49,-54,27,-75,134,-56,-57,-61,-64,-65,-70,-71,49,-35,-36,-37,-38,-39,-40,-41,-76,27,27,-42,-84,149,150,151,152,153,-43,-44,-45,-46,-47,-58,-59,-60,27,27,-55,27,27,27,-104,-85,171,27,27,27,27,-79,-62,-63,-88,-103,-112,27,27,27,-72,-80,-91,27,-92,-94,-106,27,-107,-113,-114,-73,-97,27,-98,27,27,-74,-108,-109,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,29,31,32,34,35,82,86,88,89,90,91,92,95,96,97,98,99,100,101,102,103,106,108,122,123,124,125,132,141,146,155,161,162,164,166,167,178,179,183,186,188,189,190,192,193,194,195,197,200,203,209,211,212,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-54,-50,-48,-49,-51,-86,-87,-52,-53,-54,-75,-56,-57,-61,-64,-65,-54,-35,-36,-37,-38,-39,-40,-41,-76,-42,-84,-58,-59,-60,-81,-55,-104,-85,-82,-62,-63,-88,-103,-112,-83,-72,-91,-92,-96,-94,-106,-107,-113,-114,-73,-97,-95,-98,-74,-108,-109,]),'PLUS':([3,20,21,22,23,29,31,32,34,35,62,79,81,82,84,88,89,90,91,92,95,96,110,122,123,124,127,132,139,154,163,172,186,187,199,],[36,52,-50,-48,-49,-51,-86,-87,-52,-53,36,52,36,-54,36,-56,-57,36,36,36,-54,36,36,-58,-59,-60,36,-55,36,36,36,36,36,36,36,]),'MINUS':([3,20,21,22,23,29,31,32,34,35,62,79,81,82,84,88,89,90,91,92,95,96,110,122,123,124,127,132,139,154,163,172,186,187,199,],[37,53,-50,-48,-49,-51,-86,-87,-52,-53,37,53,37,-54,37,-56,-57,37,37,37,-54,37,37,-58,-59,-60,37,-55,37,37,37,37,37,37,37,]),'AND':([3,20,21,22,23,29,31,32,34,35,62,79,81,82,88,89,90,95,96,122,123,124,132,],[39,-54,-50,-48,-49,-51,-86,-87,-52,-53,39,-54,39,-54,-56,-57,135,-54,39,-58,-59,-60,-55,]),'OR':([3,20,21,22,23,29,31,32,34,35,62,79,81,82,88,89,90,95,96,122,123,124,132,],[40,-54,-50,-48,-49,-51,-86,-87,-52,-53,40,-54,40,-54,-56,-57,136,-54,40,-58,-59,-60,-55,]),'GREATER':([3,20,21,22,23,29,31,32,34,35,62,79,81,82,88,89,95,96,122,123,124,132,165,],[41,-54,-50,-48,-49,-51,-86,-87,-52,-53,41,-54,41,-54,-56,-57,-54,41,-58,-59,-60,-55,184,]),'GREATER_OR_EQUAL':([3,20,21,22,23,29,31,32,34,35,62,79,81,82,88,89,95,96,122,123,124,132,],[42,-54,-50,-48,-49,-51,-86,-87,-52,-53,42,-54,42,-54,-56,-57,-54,42,-58,-59,-60,-55,]),'MINOR':([3,20,21,22,23,29,31,32,34,35,62,79,81,82,88,89,95,96,122,123,124,132,],[43,-54,-50,-48,-49,-51,-86,-87,-52,-53,43,-54,43,-54,-56,-57,-54,43,-58,-59,-60,-55,]),'MINOR_OR_EQUAL':([3,20,21,22,23,29,31,32,34,35,62,79,81,82,88,89,95,96,122,123,124,132,],[44,-54,-50,-48,-49,-51,-86,-87,-52,-53,44,-54,44,-54,-56,-57,-54,44,-58,-59,-60,-55,]),'ASIGN':([3,20,21,22,23,29,31,32,34,35,45,46,52,53,54,55,56,62,79,81,82,88,89,95,96,122,123,124,132,139,147,],[45,47,-50,-48,-49,-51,-86,-87,-52,-53,93,94,117,118,119,120,121,45,47,45,-54,-56,-57,-54,45,-58,-59,-60,-55,165,170,]),'NOT':([3,20,21,22,23,29,31,32,34,35,62,79,81,82,88,89,95,96,122,123,124,132,],[46,-54,-50,-48,-49,-51,-86,-87,-52,-53,46,-54,46,-54,-56,-57,-54,46,-58,-59,-60,-55,]),'LCOR':([20,47,79,95,],[50,105,50,137,]),'POINT':([20,79,158,181,],[51,129,181,198,]),'TIMES':([20,21,22,29,34,35,79,82,88,89,95,122,123,124,132,],[54,-50,57,-51,-52,-53,54,-54,57,57,-54,-58,-59,-60,-55,]),'DIVIDE':([20,21,22,29,34,35,79,82,88,89,95,122,123,124,132,],[55,-50,58,-51,-52,-53,55,-54,58,58,-54,-58,-59,-60,-55,]),'EXPONENTIATION':([20,21,22,29,34,35,79,82,88,89,95,122,123,124,132,],[56,-50,59,-51,-52,-53,56,-54,59,59,-54,-58,-59,-60,-55,]),'END':([21,22,23,29,31,32,34,35,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,82,86,88,89,90,91,92,95,96,97,98,99,100,101,102,103,106,108,122,123,124,127,128,132,141,146,154,156,161,162,164,166,167,179,180,183,186,189,190,192,193,194,195,197,203,206,209,210,211,212,],[-50,-48,-49,-51,-86,-87,-52,-53,125,-20,-99,-19,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-54,-54,-75,-56,-57,-61,-64,-65,-54,-35,-36,-37,-38,-39,-40,-41,-76,-42,-84,-58,-59,-60,155,-100,-55,-104,-85,178,179,-62,-63,-88,-103,-112,-72,197,-91,-92,-94,-106,-107,-113,-114,-73,-97,-98,209,-74,211,-108,-109,]),'RETURN':([21,22,23,24,29,31,32,34,35,60,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,82,86,88,89,90,91,92,95,96,97,98,99,100,101,102,103,106,108,122,123,124,128,132,141,146,159,161,162,164,166,167,179,182,183,186,189,190,192,193,194,195,197,203,209,211,212,],[-50,-48,-49,61,-51,-86,-87,-52,-53,126,-20,-99,-19,-21,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-54,-54,-75,-56,-57,-61,-64,-65,-54,-35,-36,-37,-38,-39,-40,-41,-76,-42,-84,-58,-59,-60,-100,-55,-104,-85,-79,-62,-63,-88,-103,-112,-72,-80,-91,-92,-94,-106,-107,-113,-114,-73,-97,-98,-74,-108,-109,]),'RPAR':([21,22,23,29,31,32,34,35,49,82,84,88,89,90,91,92,107,109,122,123,124,131,132,134,160,161,162,169,171,172,173,175,176,177,187,201,],[-50,-48,-49,-51,-86,-87,-52,-53,108,-54,132,-56,-57,-61,-64,-65,-77,146,-58,-59,-60,157,-55,159,182,-62,-63,-78,188,189,190,192,193,194,200,-105,]),'D_POINT':([21,22,23,29,31,32,34,35,80,82,88,89,90,91,92,122,123,124,132,161,162,196,],[-50,-48,-49,-51,-86,-87,-52,-53,130,-54,-56,-57,-61,-64,-65,-58,-59,-60,-55,-62,-63,202,]),'RCOR':([21,22,23,29,31,32,34,35,82,88,89,105,110,122,123,124,132,140,142,143,144,163,185,],[-50,-48,-49,-51,-86,-87,-52,-53,-54,-56,-57,141,147,-58,-59,-60,-55,166,167,-101,-110,183,-102,]),'COMMA':([21,22,23,29,31,32,34,35,82,88,89,107,122,123,124,132,143,174,199,],[-50,-48,-49,-51,-86,-87,-52,-53,-54,-56,-57,145,-58,-59,-60,-55,168,191,205,]),'RKEY':([21,22,23,29,31,32,34,35,82,88,89,122,123,124,132,138,199,208,],[-50,-48,-49,-51,-86,-87,-52,-53,-54,-56,-57,-58,-59,-60,-55,164,-89,-90,]),'GETS':([47,],[103,]),'LKEY':([47,],[104,]),'DELETE':([51,129,],[112,112,]),'INSERT':([51,129,],[113,113,]),'DELETE_AT':([51,129,],[114,114,]),'SEARCH':([51,129,],[115,115,]),'PUSH':([51,129,],[116,116,]),'IN':([85,],[133,]),'':([105,],[144,]),'QUESTION':([111,],[148,]),'ELSE':([179,],[196,]),'DO':([204,],[207,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instrucciones':([0,],[1,]),'asignacion':([0,24,63,130,157,202,207,],[2,64,64,64,64,64,64,]),'expression':([0,24,25,27,38,39,40,47,50,61,63,83,104,126,130,135,136,137,149,157,170,171,184,202,205,207,],[3,62,81,84,90,91,92,96,110,127,62,81,139,154,62,81,81,163,172,62,186,187,199,62,139,62,]),'funciones':([0,],[4,]),'comparacion':([0,24,25,47,63,83,130,135,136,157,202,207,],[5,65,80,97,65,131,65,161,162,65,65,65,]),'condicional':([0,24,63,130,157,202,207,],[6,66,66,66,66,66,66,]),'while':([0,24,63,130,157,197,202,207,],[7,69,69,69,69,203,69,69,]),'for':([0,24,63,130,157,202,207,211,],[8,68,68,68,68,68,68,212,]),'impresion':([0,24,63,130,157,202,207,],[9,67,67,67,67,67,67,]),'input':([0,24,63,130,157,202,207,],[10,70,70,70,70,70,70,]),'callFuncion':([0,24,47,63,130,157,202,207,],[11,71,98,71,71,71,71,71,]),'addValueHash':([0,24,63,130,157,202,207,],[12,72,72,72,72,72,72,]),'modValueHash':([0,24,63,130,157,202,207,],[13,73,73,73,73,73,73,]),'deleteValueHash':([0,24,63,130,157,202,207,],[14,74,74,74,74,74,74,]),'insertArray':([0,24,63,130,157,202,207,],[15,75,75,75,75,75,75,]),'deleteArray':([0,24,63,130,157,202,207,],[16,76,76,76,76,76,76,]),'searchStack':([0,24,63,130,157,202,207,],[17,78,78,78,78,78,78,]),'pushStack':([0,24,63,130,157,202,207,],[18,77,77,77,77,77,77,]),'metodoBoleano':([0,],[19,]),'factor':([0,24,25,27,30,36,37,38,39,40,47,48,50,57,58,59,61,63,83,104,105,126,130,135,136,137,149,152,153,157,168,170,171,184,191,202,205,207,],[21,21,21,21,86,21,21,21,21,21,21,106,21,122,123,124,21,21,21,21,143,21,21,21,21,21,21,176,177,21,143,21,21,21,201,21,21,21,]),'term':([0,24,25,27,36,37,38,39,40,47,50,61,63,83,104,126,130,135,136,137,149,157,170,171,184,202,205,207,],[22,22,22,22,88,89,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'boleano':([0,24,25,27,38,39,40,47,50,61,63,83,104,126,130,135,136,137,149,157,170,171,184,202,205,207,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'encabezado':([0,],[24,]),'comparador':([3,62,81,96,],[38,38,38,38,]),'tipo_asignacion':([20,79,],[48,48,]),'repCuerpo':([24,63,130,157,202,207,],[60,128,156,180,206,210,]),'cuerpo':([24,63,130,157,202,207,],[63,63,63,63,63,63,]),'diccionario':([47,],[99,]),'getValueHash':([47,],[100,]),'array':([47,],[101,]),'stack':([47,],[102,]),'parametros':([49,134,145,],[109,160,169,]),'cuerpoHash':([104,205,],[138,208,]),'parametrosA':([105,168,],[140,185,]),'vacio':([105,],[142,]),'argumentosA':([150,],[173,]),'cond_else':([179,],[195,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> instrucciones","S'",1,None,None,None),
  ('instrucciones -> asignacion','instrucciones',1,'p_instrucciones','sintactico.py',6),
  ('instrucciones -> expression','instrucciones',1,'p_instrucciones','sintactico.py',7),
  ('instrucciones -> funciones','instrucciones',1,'p_instrucciones','sintactico.py',8),
  ('instrucciones -> comparacion','instrucciones',1,'p_instrucciones','sintactico.py',9),
  ('instrucciones -> condicional','instrucciones',1,'p_instrucciones','sintactico.py',10),
  ('instrucciones -> while','instrucciones',1,'p_instrucciones','sintactico.py',11),
  ('instrucciones -> for','instrucciones',1,'p_instrucciones','sintactico.py',12),
  ('instrucciones -> impresion','instrucciones',1,'p_instrucciones','sintactico.py',13),
  ('instrucciones -> input','instrucciones',1,'p_instrucciones','sintactico.py',14),
  ('instrucciones -> callFuncion','instrucciones',1,'p_instrucciones','sintactico.py',15),
  ('instrucciones -> addValueHash','instrucciones',1,'p_instrucciones','sintactico.py',16),
  ('instrucciones -> modValueHash','instrucciones',1,'p_instrucciones','sintactico.py',17),
  ('instrucciones -> deleteValueHash','instrucciones',1,'p_instrucciones','sintactico.py',18),
  ('instrucciones -> insertArray','instrucciones',1,'p_instrucciones','sintactico.py',19),
  ('instrucciones -> deleteArray','instrucciones',1,'p_instrucciones','sintactico.py',20),
  ('instrucciones -> searchStack','instrucciones',1,'p_instrucciones','sintactico.py',21),
  ('instrucciones -> pushStack','instrucciones',1,'p_instrucciones','sintactico.py',22),
  ('instrucciones -> metodoBoleano','instrucciones',1,'p_instrucciones','sintactico.py',23),
  ('cuerpo -> asignacion','cuerpo',1,'p_body','sintactico.py',27),
  ('cuerpo -> expression','cuerpo',1,'p_body','sintactico.py',28),
  ('cuerpo -> comparacion','cuerpo',1,'p_body','sintactico.py',29),
  ('cuerpo -> condicional','cuerpo',1,'p_body','sintactico.py',30),
  ('cuerpo -> impresion','cuerpo',1,'p_body','sintactico.py',31),
  ('cuerpo -> for','cuerpo',1,'p_body','sintactico.py',32),
  ('cuerpo -> while','cuerpo',1,'p_body','sintactico.py',33),
  ('cuerpo -> input','cuerpo',1,'p_body','sintactico.py',34),
  ('cuerpo -> callFuncion','cuerpo',1,'p_body','sintactico.py',35),
  ('cuerpo -> addValueHash','cuerpo',1,'p_body','sintactico.py',36),
  ('cuerpo -> modValueHash','cuerpo',1,'p_body','sintactico.py',37),
  ('cuerpo -> deleteValueHash','cuerpo',1,'p_body','sintactico.py',38),
  ('cuerpo -> insertArray','cuerpo',1,'p_body','sintactico.py',39),
  ('cuerpo -> deleteArray','cuerpo',1,'p_body','sintactico.py',40),
  ('cuerpo -> pushStack','cuerpo',1,'p_body','sintactico.py',41),
  ('cuerpo -> searchStack','cuerpo',1,'p_body','sintactico.py',42),
  ('asignacion -> VARIABLE ASIGN expression','asignacion',3,'p_asignacion','sintactico.py',46),
  ('asignacion -> VARIABLE ASIGN comparacion','asignacion',3,'p_asignacion','sintactico.py',47),
  ('asignacion -> VARIABLE ASIGN callFuncion','asignacion',3,'p_asignacion','sintactico.py',48),
  ('asignacion -> VARIABLE ASIGN diccionario','asignacion',3,'p_asignacion','sintactico.py',49),
  ('asignacion -> VARIABLE ASIGN getValueHash','asignacion',3,'p_asignacion','sintactico.py',50),
  ('asignacion -> VARIABLE ASIGN array','asignacion',3,'p_asignacion','sintactico.py',51),
  ('asignacion -> VARIABLE ASIGN stack','asignacion',3,'p_asignacion','sintactico.py',52),
  ('asignacion -> VARIABLE tipo_asignacion factor','asignacion',3,'p_asignacion','sintactico.py',53),
  ('tipo_asignacion -> PLUS ASIGN','tipo_asignacion',2,'p_tipo_asignacion','sintactico.py',56),
  ('tipo_asignacion -> MINUS ASIGN','tipo_asignacion',2,'p_tipo_asignacion','sintactico.py',57),
  ('tipo_asignacion -> TIMES ASIGN','tipo_asignacion',2,'p_tipo_asignacion','sintactico.py',58),
  ('tipo_asignacion -> DIVIDE ASIGN','tipo_asignacion',2,'p_tipo_asignacion','sintactico.py',59),
  ('tipo_asignacion -> EXPONENTIATION ASIGN','tipo_asignacion',2,'p_tipo_asignacion','sintactico.py',60),
  ('expression -> term','expression',1,'p_expression_term','sintactico.py',65),
  ('expression -> boleano','expression',1,'p_expression_term','sintactico.py',66),
  ('term -> factor','term',1,'p_term_factor','sintactico.py',70),
  ('factor -> NUMBER','factor',1,'p_factor_num','sintactico.py',73),
  ('factor -> STRING','factor',1,'p_factor_num','sintactico.py',74),
  ('factor -> FLOAT','factor',1,'p_factor_num','sintactico.py',75),
  ('factor -> VARIABLE','factor',1,'p_factor_num','sintactico.py',76),
  ('factor -> LPAR expression RPAR','factor',3,'p_factor_expr','sintactico.py',80),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','sintactico.py',84),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','sintactico.py',87),
  ('term -> term TIMES factor','term',3,'p_term_times','sintactico.py',90),
  ('term -> term DIVIDE factor','term',3,'p_term_div','sintactico.py',93),
  ('term -> term EXPONENTIATION factor','term',3,'p_term_exp','sintactico.py',96),
  ('comparacion -> expression comparador expression','comparacion',3,'p_comparacion','sintactico.py',100),
  ('comparacion -> expression comparador expression AND comparacion','comparacion',5,'p_comparacion','sintactico.py',101),
  ('comparacion -> expression comparador expression OR comparacion','comparacion',5,'p_comparacion','sintactico.py',102),
  ('comparacion -> expression AND expression','comparacion',3,'p_comparacion','sintactico.py',103),
  ('comparacion -> expression OR expression','comparacion',3,'p_comparacion','sintactico.py',104),
  ('comparador -> GREATER','comparador',1,'p_comparador','sintactico.py',109),
  ('comparador -> GREATER_OR_EQUAL','comparador',1,'p_comparador','sintactico.py',110),
  ('comparador -> MINOR','comparador',1,'p_comparador','sintactico.py',111),
  ('comparador -> MINOR_OR_EQUAL','comparador',1,'p_comparador','sintactico.py',112),
  ('comparador -> ASIGN ASIGN','comparador',2,'p_comparador','sintactico.py',113),
  ('comparador -> NOT ASIGN','comparador',2,'p_comparador','sintactico.py',114),
  ('condicional -> IF comparacion D_POINT repCuerpo END','condicional',5,'p_cond_if','sintactico.py',119),
  ('condicional -> IF comparacion D_POINT repCuerpo END cond_else','condicional',6,'p_cond_if','sintactico.py',120),
  ('cond_else -> ELSE D_POINT repCuerpo END','cond_else',4,'p_cond_else','sintactico.py',124),
  ('impresion -> PUTS factor','impresion',2,'p_puts','sintactico.py',128),
  ('input -> VARIABLE ASIGN GETS','input',3,'p_gets','sintactico.py',131),
  ('parametros -> VARIABLE','parametros',1,'p_par_function','sintactico.py',135),
  ('parametros -> VARIABLE COMMA parametros','parametros',3,'p_par_function','sintactico.py',136),
  ('encabezado -> DEF VARIABLE LPAR RPAR','encabezado',4,'p_header_function','sintactico.py',140),
  ('encabezado -> DEF VARIABLE LPAR parametros RPAR','encabezado',5,'p_header_function','sintactico.py',141),
  ('funciones -> encabezado repCuerpo END','funciones',3,'p_function','sintactico.py',145),
  ('funciones -> encabezado RETURN expression END','funciones',4,'p_function','sintactico.py',146),
  ('funciones -> encabezado repCuerpo RETURN expression END','funciones',5,'p_function','sintactico.py',147),
  ('callFuncion -> VARIABLE LPAR RPAR','callFuncion',3,'p_call_function','sintactico.py',151),
  ('callFuncion -> VARIABLE LPAR parametros RPAR','callFuncion',4,'p_call_function','sintactico.py',152),
  ('boleano -> TRUE','boleano',1,'p_boolean','sintactico.py',156),
  ('boleano -> FALSE','boleano',1,'p_boolean','sintactico.py',157),
  ('diccionario -> LKEY cuerpoHash RKEY','diccionario',3,'p_hash','sintactico.py',162),
  ('cuerpoHash -> expression ASIGN GREATER expression','cuerpoHash',4,'p_body_hash','sintactico.py',165),
  ('cuerpoHash -> expression ASIGN GREATER expression COMMA cuerpoHash','cuerpoHash',6,'p_body_hash','sintactico.py',166),
  ('getValueHash -> VARIABLE LCOR expression RCOR','getValueHash',4,'p_get_hash','sintactico.py',170),
  ('addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression','addValueHash',6,'p_add_hash','sintactico.py',173),
  ('modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression','modValueHash',6,'p_mod_hash','sintactico.py',176),
  ('deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR','deleteValueHash',6,'p_del_hash','sintactico.py',179),
  ('metodoBoleano -> VARIABLE POINT VARIABLE QUESTION LPAR expression RPAR','metodoBoleano',7,'p_boolean_method','sintactico.py',183),
  ('metodoBoleano -> VARIABLE POINT VARIABLE QUESTION LPAR RPAR','metodoBoleano',6,'p_boolean_method','sintactico.py',184),
  ('while -> WHILE LPAR comparacion RPAR repCuerpo END','while',6,'p_while','sintactico.py',192),
  ('while -> WHILE LPAR comparacion RPAR repCuerpo END while','while',7,'p_while','sintactico.py',193),
  ('repCuerpo -> cuerpo','repCuerpo',1,'p_repCuerpo','sintactico.py',196),
  ('repCuerpo -> cuerpo repCuerpo','repCuerpo',2,'p_repCuerpo','sintactico.py',197),
  ('parametrosA -> factor','parametrosA',1,'p_parA_function','sintactico.py',202),
  ('parametrosA -> factor COMMA parametrosA','parametrosA',3,'p_parA_function','sintactico.py',203),
  ('array -> LCOR parametrosA RCOR','array',3,'p_array','sintactico.py',206),
  ('array -> LCOR RCOR','array',2,'p_array','sintactico.py',207),
  ('argumentosA -> NUMBER COMMA factor','argumentosA',3,'p_argumentos_array','sintactico.py',211),
  ('insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR','insertArray',6,'p_insert_array','sintactico.py',214),
  ('deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR','deleteArray',6,'p_delete_array','sintactico.py',218),
  ('for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END','for',10,'p_for','sintactico.py',226),
  ('for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for','for',11,'p_for','sintactico.py',227),
  ('vacio -> ','vacio',1,'p_vacio','sintactico.py',231),
  ('stack -> LCOR parametrosA RCOR','stack',3,'p_stack','sintactico.py',233),
  ('stack -> LCOR vacio RCOR','stack',3,'p_stack','sintactico.py',234),
  ('searchStack -> VARIABLE POINT SEARCH LPAR factor RPAR','searchStack',6,'p_search_stack','sintactico.py',237),
  ('pushStack -> VARIABLE POINT PUSH LPAR factor RPAR','pushStack',6,'p_push_stack','sintactico.py',240),
]
