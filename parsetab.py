
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASIGN COMMA DEF DELETE DELETE_AT DIVIDE DO D_POINT ELSE END EXPONENTIATION FALSE FLOAT FOR GETS GREATER GREATER_OR_EQUAL IF IN INSERT LCOR LKEY LPAR MINOR MINOR_OR_EQUAL MINUS NOT NUMBER OR PLUS POINT PUSH PUTS QUESTION RCOR RETURN RKEY RPAR SEARCH STRING TIMES TRUE VARIABLE WHILEinstrucciones : asignacion\n                    | expression\n                    | funciones\n                    | comparacion\n                    | condicional\n                    | while\n                    | for\n                    | impresion\n                    | input\n                    | callFuncion\n                    | addValueHash\n                    | modValueHash\n                    | deleteValueHash\n                    | insertArray\n                    | deleteArray\n                    | searchStack\n                    | pushStack    \n                    | metodoBoleano    \n                    | opMatematicas \n     cuerpo : asignacion\n                | expression\n                | comparacion\n                | condicional\n                | impresion\n                | for\n                | while\n                | input\n                | callFuncion\n                | addValueHash\n                | modValueHash\n                | deleteValueHash\n                | insertArray\n                | deleteArray\n                | pushStack\n                | searchStack\n                | opMatematicas\n    asignacion : VARIABLE ASIGN expression\n                | VARIABLE ASIGN comparacion\n                | VARIABLE ASIGN callFuncion\n                | VARIABLE ASIGN diccionario\n                | VARIABLE ASIGN getValueHash\n                | VARIABLE ASIGN array\n                | VARIABLE ASIGN stack\n                | VARIABLE tipo_asignacion factor\n                | VARIABLE ASIGN opMatematicas\n    tipo_asignacion : PLUS ASIGN\n                        | MINUS ASIGN \n                        | TIMES ASIGN \n                        | DIVIDE ASIGN \n                        | EXPONENTIATION ASIGN \n    expression : term \n                    | boleano\n    term : factorfactor : NUMBER\n                | STRING\n                | FLOAT\n                | VARIABLE\n    factor : LPAR expression RPARcomparacion : expression comparador expression\n                    | expression comparador expression AND comparacion\n                    | expression comparador expression OR comparacion\n                    | expression AND expression\n                    | expression OR expression\n    \n    comparador : GREATER \n                | GREATER_OR_EQUAL\n                | MINOR\n                | MINOR_OR_EQUAL\n                | ASIGN ASIGN\n                | NOT ASIGN\n    impresion : PUTS factorinput : VARIABLE ASIGN GETSboleano : TRUE \n                | FALSE\n    diccionario : LKEY cuerpoHash RKEYcuerpoHash : expression ASIGN GREATER expression\n                    | expression ASIGN GREATER expression COMMA cuerpoHash\n    getValueHash : VARIABLE LCOR expression RCORaddValueHash : VARIABLE LCOR expression RCOR ASIGN expressionmodValueHash : VARIABLE LCOR expression RCOR ASIGN expressiondeleteValueHash : VARIABLE POINT DELETE LPAR expression RPARmetodoBoleano : VARIABLE POINT VARIABLE QUESTION LPAR expression RPAR\n                    | VARIABLE POINT VARIABLE QUESTION LPAR RPAR\n    while : WHILE LPAR comparacion RPAR repCuerpo END\n            | WHILE LPAR comparacion RPAR repCuerpo END while\n    repCuerpo : cuerpo \n                | cuerpo repCuerpo\n     parametrosA : factor\n                    | factor COMMA parametrosA\n    array : LCOR parametrosA RCOR\n             | LCOR RCOR\n    argumentosA : NUMBER COMMA factor\n    insertArray : VARIABLE POINT INSERT LPAR argumentosA RPAR\n    deleteArray : VARIABLE POINT DELETE_AT LPAR NUMBER RPAR\n    for : FOR VARIABLE IN NUMBER POINT POINT NUMBER  DO repCuerpo END\n            | FOR VARIABLE IN NUMBER POINT POINT NUMBER  DO repCuerpo END for\n    vacio : ""stack : LCOR parametrosA RCOR\n            | LCOR vacio RCOR\n    searchStack : VARIABLE POINT SEARCH LPAR factor RPAR\n    pushStack : VARIABLE POINT PUSH LPAR factor RPAR\n     opMatematicas : suma\n                    | resta\n                    | multiplicacion\n                    | division\n                    | exponenciacion\n    suma : VARIABLE PLUS NUMBER\n            | operadores PLUS operadores\n            | operadores PLUS opMatematicas\n            | operadores PLUS LPAR operadores RPAR\n            | operadores PLUS LPAR opMatematicas RPAR\n    resta : VARIABLE MINUS NUMBER \n            | operadores MINUS operadores\n            | operadores MINUS opMatematicas\n            | operadores MINUS LPAR operadores RPAR\n            | operadores MINUS LPAR opMatematicas RPAR\n     multiplicacion : operadores TIMES operadores\n                    | operadores TIMES LPAR operadores RPAR\n                    | operadores TIMES LPAR opMatematicas RPAR\n     division : operadores DIVIDE operadores\n                | operadores DIVIDE LPAR operadores RPAR\n                | operadores DIVIDE LPAR opMatematicas RPAR\n     exponenciacion : operadores EXPONENTIATION operadores\n                    | LPAR operadores RPAR EXPONENTIATION operadores\n                    | LPAR opMatematicas RPAR EXPONENTIATION operadores\n     operadores : enteros\n                | FLOAT  \n     enteros : NUMBER\n                | MINUS NUMBER\n     parametros : VARIABLE\n                    | VARIABLE COMMA parametros\n    encabezado : DEF VARIABLE LPAR RPAR\n                    | DEF VARIABLE LPAR parametros RPAR\n    funciones : encabezado repCuerpo END\n                | encabezado RETURN expression END\n                | encabezado repCuerpo RETURN expression END\n    callFuncion : VARIABLE LPAR RPAR\n                | VARIABLE LPAR parametros RPAR\n    condicional : IF comparacion D_POINT repCuerpo END\n                    | IF comparacion D_POINT repCuerpo END cond_else\n    cond_else : ELSE D_POINT repCuerpo END'
    
_lr_action_items = {'VARIABLE':([0,22,23,24,25,26,28,29,30,31,32,33,34,35,36,37,38,39,42,43,44,45,46,47,48,49,50,51,54,55,56,57,58,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,90,91,99,101,102,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,135,136,137,138,139,140,141,143,147,151,155,156,157,158,159,160,162,163,164,165,166,167,168,169,170,171,172,176,180,181,184,187,188,192,196,199,207,208,210,212,213,214,216,217,225,227,228,230,231,232,233,234,235,236,237,238,239,240,242,245,246,247,248,249,250,251,253,258,259,261,263,265,267,268,],[21,-53,-51,-52,84,89,97,98,-54,89,-101,-102,-103,-104,-105,-72,-73,100,-55,-56,-125,89,89,89,-64,-65,-66,-67,112,89,125,89,129,89,-21,84,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-57,-54,-56,-57,89,89,-70,161,161,-128,-59,-62,-63,-68,-69,-57,-37,-38,-39,-40,-41,-42,-43,-45,-71,89,89,-44,-136,-106,-46,-111,-47,-48,-49,-50,89,84,-58,125,-107,-108,161,-126,-127,-112,-113,161,-116,161,-119,161,-122,89,89,89,-90,125,-137,89,89,89,84,-131,161,-60,-61,-74,-89,-98,89,89,89,-138,-123,-124,-132,-109,-110,-114,-115,-117,-118,-120,-121,-77,89,-78,-80,-92,89,-93,-99,-100,-139,-83,84,-84,89,84,-140,-94,-95,]),'IF':([0,22,23,24,25,30,32,33,34,35,36,37,38,42,43,44,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,99,106,107,108,109,112,113,114,115,116,117,118,119,120,121,124,126,135,137,147,151,156,157,159,160,162,163,165,167,169,176,181,192,196,207,208,210,212,213,225,227,228,230,231,232,233,234,235,236,237,238,239,242,245,246,248,249,250,251,253,258,259,263,265,267,268,],[26,-53,-51,-52,26,-54,-101,-102,-103,-104,-105,-72,-73,-55,-56,-125,-21,26,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-57,-54,-56,-57,-70,-128,-59,-62,-63,-57,-37,-38,-39,-40,-41,-42,-43,-45,-71,-44,-136,-106,-111,26,-58,-107,-108,-126,-127,-112,-113,-116,-119,-122,-90,-137,26,-131,-60,-61,-74,-89,-98,-138,-123,-124,-132,-109,-110,-114,-115,-117,-118,-120,-121,-77,-78,-80,-92,-93,-99,-100,-139,-83,26,-84,26,-140,-94,-95,]),'WHILE':([0,22,23,24,25,30,32,33,34,35,36,37,38,42,43,44,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,99,106,107,108,109,112,113,114,115,116,117,118,119,120,121,124,126,135,137,147,151,156,157,159,160,162,163,165,167,169,176,181,192,196,207,208,210,212,213,225,227,228,230,231,232,233,234,235,236,237,238,239,242,245,246,248,249,250,251,253,258,259,263,265,267,268,],[27,-53,-51,-52,27,-54,-101,-102,-103,-104,-105,-72,-73,-55,-56,-125,-21,27,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-57,-54,-56,-57,-70,-128,-59,-62,-63,-57,-37,-38,-39,-40,-41,-42,-43,-45,-71,-44,-136,-106,-111,27,-58,-107,-108,-126,-127,-112,-113,-116,-119,-122,-90,-137,27,-131,-60,-61,-74,-89,-98,-138,-123,-124,-132,-109,-110,-114,-115,-117,-118,-120,-121,-77,-78,-80,-92,-93,-99,-100,-139,27,27,-84,27,-140,-94,-95,]),'FOR':([0,22,23,24,25,30,32,33,34,35,36,37,38,42,43,44,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,99,106,107,108,109,112,113,114,115,116,117,118,119,120,121,124,126,135,137,147,151,156,157,159,160,162,163,165,167,169,176,181,192,196,207,208,210,212,213,225,227,228,230,231,232,233,234,235,236,237,238,239,242,245,246,248,249,250,251,253,258,259,263,265,267,268,],[29,-53,-51,-52,29,-54,-101,-102,-103,-104,-105,-72,-73,-55,-56,-125,-21,29,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-57,-54,-56,-57,-70,-128,-59,-62,-63,-57,-37,-38,-39,-40,-41,-42,-43,-45,-71,-44,-136,-106,-111,29,-58,-107,-108,-126,-127,-112,-113,-116,-119,-122,-90,-137,29,-131,-60,-61,-74,-89,-98,-138,-123,-124,-132,-109,-110,-114,-115,-117,-118,-120,-121,-77,-78,-80,-92,-93,-99,-100,-139,-83,29,-84,29,-140,29,-95,]),'PUTS':([0,22,23,24,25,30,32,33,34,35,36,37,38,42,43,44,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,99,106,107,108,109,112,113,114,115,116,117,118,119,120,121,124,126,135,137,147,151,156,157,159,160,162,163,165,167,169,176,181,192,196,207,208,210,212,213,225,227,228,230,231,232,233,234,235,236,237,238,239,242,245,246,248,249,250,251,253,258,259,263,265,267,268,],[31,-53,-51,-52,31,-54,-101,-102,-103,-104,-105,-72,-73,-55,-56,-125,-21,31,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-57,-54,-56,-57,-70,-128,-59,-62,-63,-57,-37,-38,-39,-40,-41,-42,-43,-45,-71,-44,-136,-106,-111,31,-58,-107,-108,-126,-127,-112,-113,-116,-119,-122,-90,-137,31,-131,-60,-61,-74,-89,-98,-138,-123,-124,-132,-109,-110,-114,-115,-117,-118,-120,-121,-77,-78,-80,-92,-93,-99,-100,-139,-83,31,-84,31,-140,-94,-95,]),'TRUE':([0,22,23,24,25,26,28,30,32,33,34,35,36,37,38,42,43,44,45,46,47,48,49,50,51,54,57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,90,91,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,126,135,137,143,147,151,156,157,159,160,162,163,165,167,169,170,171,172,176,181,184,192,196,207,208,210,212,213,216,217,225,227,228,230,231,232,233,234,235,236,237,238,239,240,242,245,246,248,249,250,251,253,258,259,261,263,265,267,268,],[37,-53,-51,-52,37,37,37,-54,-101,-102,-103,-104,-105,-72,-73,-55,-56,-125,37,37,37,-64,-65,-66,-67,37,37,37,-21,37,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-57,-54,-56,-57,37,37,-70,-128,-59,-62,-63,-68,-69,-57,-37,-38,-39,-40,-41,-42,-43,-45,-71,37,-44,-136,-106,-111,37,37,-58,-107,-108,-126,-127,-112,-113,-116,-119,-122,37,37,37,-90,-137,37,37,-131,-60,-61,-74,-89,-98,37,37,-138,-123,-124,-132,-109,-110,-114,-115,-117,-118,-120,-121,-77,37,-78,-80,-92,-93,-99,-100,-139,-83,37,-84,37,37,-140,-94,-95,]),'FALSE':([0,22,23,24,25,26,28,30,32,33,34,35,36,37,38,42,43,44,45,46,47,48,49,50,51,54,57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,90,91,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,124,126,135,137,143,147,151,156,157,159,160,162,163,165,167,169,170,171,172,176,181,184,192,196,207,208,210,212,213,216,217,225,227,228,230,231,232,233,234,235,236,237,238,239,240,242,245,246,248,249,250,251,253,258,259,261,263,265,267,268,],[38,-53,-51,-52,38,38,38,-54,-101,-102,-103,-104,-105,-72,-73,-55,-56,-125,38,38,38,-64,-65,-66,-67,38,38,38,-21,38,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-57,-54,-56,-57,38,38,-70,-128,-59,-62,-63,-68,-69,-57,-37,-38,-39,-40,-41,-42,-43,-45,-71,38,-44,-136,-106,-111,38,38,-58,-107,-108,-126,-127,-112,-113,-116,-119,-122,38,38,38,-90,-137,38,38,-131,-60,-61,-74,-89,-98,38,38,-138,-123,-124,-132,-109,-110,-114,-115,-117,-118,-120,-121,-77,38,-78,-80,-92,-93,-99,-100,-139,-83,38,-84,38,38,-140,-94,-95,]),'DEF':([0,],[39,]),'LPAR':([0,21,22,23,24,25,26,27,28,30,31,32,33,34,35,36,37,38,42,43,44,45,46,47,48,49,50,51,54,55,57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,90,91,99,100,101,102,103,104,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,130,131,132,133,134,135,136,137,138,139,140,141,143,147,151,156,157,158,159,160,162,163,164,165,166,167,168,169,170,171,172,176,181,183,184,187,188,192,196,199,207,208,210,212,213,214,216,217,225,227,228,230,231,232,233,234,235,236,237,238,239,240,242,245,246,247,248,249,250,251,253,258,259,261,263,265,267,268,],[28,56,-53,-51,-52,28,90,91,28,-54,90,-101,-102,-103,-104,-105,-72,-73,-55,-56,-125,90,90,90,-64,-65,-66,-67,28,90,90,90,-21,28,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,56,-54,-56,-57,90,90,-70,155,158,164,166,168,-128,-59,-62,-63,-68,-69,56,-37,-38,-39,-40,-41,-42,-43,-45,-71,90,90,-44,-136,184,185,186,187,188,-106,-46,-111,-47,-48,-49,-50,90,28,-58,-107,-108,199,-126,-127,-112,-113,199,-116,199,-119,199,-122,90,90,90,-90,-137,217,90,90,90,28,-131,199,-60,-61,-74,-89,-98,90,90,90,-138,-123,-124,-132,-109,-110,-114,-115,-117,-118,-120,-121,-77,90,-78,-80,-92,90,-93,-99,-100,-139,-83,28,-84,90,28,-140,-94,-95,]),'NUMBER':([0,22,23,24,25,26,28,30,31,32,33,34,35,36,37,38,41,42,43,44,45,46,47,48,49,50,51,54,55,57,59,60,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,90,91,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,135,136,137,138,139,140,141,143,147,151,152,153,154,156,157,158,159,160,162,163,164,165,166,167,168,169,170,171,172,176,181,184,185,186,187,188,192,193,194,196,199,207,208,210,212,213,214,216,217,225,227,228,230,231,232,233,234,235,236,237,238,239,240,242,245,246,247,248,249,250,251,253,254,258,259,261,263,265,267,268,],[30,-53,-51,-52,30,87,96,-54,87,-101,-102,-103,-104,-105,-72,-73,106,-55,-56,-125,87,87,87,-64,-65,-66,-67,30,87,87,135,137,87,-21,30,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-57,-54,-56,-57,87,87,-70,160,160,160,160,160,-128,-59,-62,-63,-68,-69,-57,-37,-38,-39,-40,-41,-42,-43,-45,-71,87,87,-44,-136,-106,-46,-111,-47,-48,-49,-50,87,30,-58,135,137,195,-107,-108,160,-126,-127,-112,-113,160,-116,160,-119,160,-122,87,87,87,-90,-137,87,220,221,87,87,30,160,160,-131,160,-60,-61,-74,-89,-98,87,87,87,-138,-123,-124,-132,-109,-110,-114,-115,-117,-118,-120,-121,-77,87,-78,-80,-92,87,-93,-99,-100,-139,-83,260,30,-84,87,30,-140,-94,-95,]),'STRING':([0,22,23,24,25,26,28,30,31,32,33,34,35,36,37,38,42,43,44,45,46,47,48,49,50,51,54,55,57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,90,91,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,135,136,137,138,139,140,141,143,147,151,156,157,159,160,162,163,165,167,169,170,171,172,176,181,184,187,188,192,196,207,208,210,212,213,214,216,217,225,227,228,230,231,232,233,234,235,236,237,238,239,240,242,245,246,247,248,249,250,251,253,258,259,261,263,265,267,268,],[42,-53,-51,-52,42,42,42,-54,42,-101,-102,-103,-104,-105,-72,-73,-55,-56,-125,42,42,42,-64,-65,-66,-67,42,42,42,42,-21,42,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-57,-54,-56,-57,42,42,-70,-128,-59,-62,-63,-68,-69,-57,-37,-38,-39,-40,-41,-42,-43,-45,-71,42,42,-44,-136,-106,-46,-111,-47,-48,-49,-50,42,42,-58,-107,-108,-126,-127,-112,-113,-116,-119,-122,42,42,42,-90,-137,42,42,42,42,-131,-60,-61,-74,-89,-98,42,42,42,-138,-123,-124,-132,-109,-110,-114,-115,-117,-118,-120,-121,-77,42,-78,-80,-92,42,-93,-99,-100,-139,-83,42,-84,42,42,-140,-94,-95,]),'FLOAT':([0,22,23,24,25,26,28,30,31,32,33,34,35,36,37,38,42,43,44,45,46,47,48,49,50,51,54,55,57,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,90,91,99,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,135,136,137,138,139,140,141,143,147,151,156,157,158,159,160,162,163,164,165,166,167,168,169,170,171,172,176,181,184,187,188,192,193,194,196,199,207,208,210,212,213,214,216,217,225,227,228,230,231,232,233,234,235,236,237,238,239,240,242,245,246,247,248,249,250,251,253,258,259,261,263,265,267,268,],[43,-53,-51,-52,43,88,95,-54,88,-101,-102,-103,-104,-105,-72,-73,-55,-56,-125,88,88,88,-64,-65,-66,-67,43,88,88,88,-21,43,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-57,-54,-56,-57,88,88,-70,159,159,159,159,159,-128,-59,-62,-63,-68,-69,-57,-37,-38,-39,-40,-41,-42,-43,-45,-71,88,88,-44,-136,-106,-46,-111,-47,-48,-49,-50,88,43,-58,-107,-108,159,-126,-127,-112,-113,159,-116,159,-119,159,-122,88,88,88,-90,-137,88,88,88,43,159,159,-131,159,-60,-61,-74,-89,-98,88,88,88,-138,-123,-124,-132,-109,-110,-114,-115,-117,-118,-120,-121,-77,88,-78,-80,-92,88,-93,-99,-100,-139,-83,43,-84,88,43,-140,-94,-95,]),'MINUS':([0,21,22,23,24,25,28,30,32,33,34,35,36,37,38,40,42,43,44,54,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,92,95,96,97,99,101,102,103,104,105,106,107,108,109,112,113,114,115,116,117,118,119,120,121,124,126,135,137,147,151,156,157,158,159,160,161,162,163,164,165,166,167,168,169,176,181,192,193,194,196,198,199,201,203,205,207,208,210,212,213,225,227,228,230,231,232,233,234,235,236,237,238,239,242,245,246,248,249,250,251,253,258,259,263,265,267,268,],[41,60,-53,-51,-52,41,41,-54,-101,-102,-103,-104,-105,-72,-73,102,-55,-56,-125,41,-21,41,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,60,-54,-56,-57,102,-126,-127,153,-70,41,41,41,41,41,-128,-59,-62,-63,153,-37,-38,-39,-40,-41,-42,-43,-45,-71,-44,-136,-106,-111,41,-58,102,-108,41,-126,-127,153,102,-113,41,-116,41,-119,41,-122,-90,-137,41,41,41,-131,102,41,102,102,102,-60,-61,-74,-89,-98,-138,-123,-124,-132,-109,-110,-114,-115,-117,-118,-120,-121,-77,-78,-80,-92,-93,-99,-100,-139,-83,41,-84,41,-140,-94,-95,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,30,32,33,34,35,36,37,38,42,43,44,87,88,89,99,106,107,108,109,112,113,114,115,116,117,118,119,120,121,124,126,135,137,142,151,156,157,159,160,162,163,165,167,169,176,181,190,207,208,210,212,213,224,225,227,228,231,232,233,234,235,236,237,238,239,242,244,245,246,248,249,250,251,253,256,259,265,267,268,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-57,-53,-51,-52,-54,-101,-102,-103,-104,-105,-72,-73,-55,-56,-125,-54,-56,-57,-70,-128,-59,-62,-63,-57,-37,-38,-39,-40,-41,-42,-43,-45,-71,-44,-136,-106,-111,-133,-58,-107,-108,-126,-127,-112,-113,-116,-119,-122,-90,-137,-134,-60,-61,-74,-89,-98,-135,-138,-123,-124,-109,-110,-114,-115,-117,-118,-120,-121,-77,-78,-82,-80,-92,-93,-99,-100,-139,-83,-81,-84,-140,-94,-95,]),'AND':([3,21,22,23,24,30,37,38,42,43,66,84,86,87,88,89,107,112,113,151,],[46,-57,-53,-51,-52,-54,-72,-73,-55,-56,46,-57,46,-54,-56,-57,170,-57,46,-58,]),'OR':([3,21,22,23,24,30,37,38,42,43,66,84,86,87,88,89,107,112,113,151,],[47,-57,-53,-51,-52,-54,-72,-73,-55,-56,47,-57,47,-54,-56,-57,171,-57,47,-58,]),'GREATER':([3,21,22,23,24,30,37,38,42,43,66,84,86,87,88,89,112,113,151,211,],[48,-57,-53,-51,-52,-54,-72,-73,-55,-56,48,-57,48,-54,-56,-57,-57,48,-58,240,]),'GREATER_OR_EQUAL':([3,21,22,23,24,30,37,38,42,43,66,84,86,87,88,89,112,113,151,],[49,-57,-53,-51,-52,-54,-72,-73,-55,-56,49,-57,49,-54,-56,-57,-57,49,-58,]),'MINOR':([3,21,22,23,24,30,37,38,42,43,66,84,86,87,88,89,112,113,151,],[50,-57,-53,-51,-52,-54,-72,-73,-55,-56,50,-57,50,-54,-56,-57,-57,50,-58,]),'MINOR_OR_EQUAL':([3,21,22,23,24,30,37,38,42,43,66,84,86,87,88,89,112,113,151,],[51,-57,-53,-51,-52,-54,-72,-73,-55,-56,51,-57,51,-54,-56,-57,-57,51,-58,]),'ASIGN':([3,21,22,23,24,30,37,38,42,43,52,53,59,60,61,62,63,66,84,86,87,88,89,112,113,151,174,182,],[52,54,-53,-51,-52,-54,-72,-73,-55,-56,110,111,136,138,139,140,141,52,54,52,-54,-56,-57,-57,52,-58,211,216,]),'NOT':([3,21,22,23,24,30,37,38,42,43,66,84,86,87,88,89,112,113,151,],[53,-57,-53,-51,-52,-54,-72,-73,-55,-56,53,-57,53,-54,-56,-57,-57,53,-58,]),'LCOR':([21,54,84,112,],[57,123,57,172,]),'POINT':([21,84,195,229,],[58,146,229,254,]),'PLUS':([21,30,40,43,44,84,92,95,96,97,106,112,156,159,160,161,162,198,201,203,205,],[59,-127,101,-126,-125,59,101,-126,-127,152,-128,152,101,-126,-127,152,101,101,101,101,101,]),'TIMES':([21,30,40,43,44,84,92,95,96,106,156,159,160,162,198,201,203,205,],[61,-127,103,-126,-125,61,103,-126,-127,-128,103,-126,-127,103,103,103,103,103,]),'DIVIDE':([21,30,40,43,44,84,92,95,96,106,156,159,160,162,198,201,203,205,],[62,-127,104,-126,-125,62,104,-126,-127,-128,104,-126,-127,104,104,104,104,104,]),'EXPONENTIATION':([21,30,40,43,44,84,92,95,96,106,149,150,156,159,160,162,198,201,203,205,231,232,233,234,],[63,-127,105,-126,-125,63,105,-126,-127,-128,193,194,105,-126,-127,105,105,105,105,105,193,194,193,194,]),'END':([22,23,24,30,32,33,34,35,36,37,38,42,43,44,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,99,106,107,108,109,112,113,114,115,116,117,118,119,120,121,124,126,135,137,144,145,151,156,157,159,160,162,163,165,167,169,176,181,189,191,207,208,210,212,213,225,226,227,228,231,232,233,234,235,236,237,238,239,242,245,246,248,249,250,251,253,259,262,265,266,267,268,],[-53,-51,-52,-54,-101,-102,-103,-104,-105,-72,-73,-55,-56,-125,142,-21,-85,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-57,-54,-56,-57,-70,-128,-59,-62,-63,-57,-37,-38,-39,-40,-41,-42,-43,-45,-71,-44,-136,-106,-111,190,-86,-58,-107,-108,-126,-127,-112,-113,-116,-119,-122,-90,-137,224,225,-60,-61,-74,-89,-98,-138,253,-123,-124,-109,-110,-114,-115,-117,-118,-120,-121,-77,-78,-80,-92,-93,-99,-100,-139,-83,-84,265,-140,267,-94,-95,]),'RETURN':([22,23,24,25,30,32,33,34,35,36,37,38,42,43,44,64,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,87,88,89,99,106,107,108,109,112,113,114,115,116,117,118,119,120,121,124,126,135,137,145,151,156,157,159,160,162,163,165,167,169,176,181,196,207,208,210,212,213,225,227,228,230,231,232,233,234,235,236,237,238,239,242,245,246,248,249,250,251,253,259,265,267,268,],[-53,-51,-52,65,-54,-101,-102,-103,-104,-105,-72,-73,-55,-56,-125,143,-21,-85,-20,-22,-23,-24,-25,-26,-27,-28,-29,-30,-31,-32,-33,-34,-35,-36,-57,-54,-56,-57,-70,-128,-59,-62,-63,-57,-37,-38,-39,-40,-41,-42,-43,-45,-71,-44,-136,-106,-111,-86,-58,-107,-108,-126,-127,-112,-113,-116,-119,-122,-90,-137,-131,-60,-61,-74,-89,-98,-138,-123,-124,-132,-109,-110,-114,-115,-117,-118,-120,-121,-77,-78,-80,-92,-93,-99,-100,-139,-83,-84,-140,-94,-95,]),'RPAR':([22,23,24,32,33,34,35,36,37,38,42,44,56,87,88,89,92,93,94,95,96,97,106,107,108,109,125,127,135,137,148,151,155,156,157,159,160,162,163,165,167,169,197,198,200,201,202,203,204,205,206,207,208,215,217,218,219,221,222,223,227,228,231,232,233,234,235,236,237,238,243,257,],[-53,-51,-52,-101,-102,-103,-104,-105,-72,-73,-55,-125,126,-54,-56,-57,149,150,151,-56,-54,-57,-128,-59,-62,-63,-129,181,-106,-111,192,-58,196,-107,-108,-126,-127,-112,-113,-116,-119,-122,230,231,232,233,234,235,236,237,238,-60,-61,-130,244,245,246,248,249,250,-123,-124,-109,-110,-114,-115,-117,-118,-120,-121,256,-91,]),'D_POINT':([22,23,24,37,38,42,85,87,88,89,107,108,109,151,207,208,252,],[-53,-51,-52,-72,-73,-55,147,-54,-56,-57,-59,-62,-63,-58,-60,-61,258,]),'RCOR':([22,23,24,37,38,42,87,88,89,123,128,151,175,177,178,179,209,241,],[-53,-51,-52,-72,-73,-55,-54,-56,-57,176,182,-58,212,213,-87,-96,239,-88,]),'COMMA':([22,23,24,37,38,42,87,88,89,125,151,178,220,255,],[-53,-51,-52,-72,-73,-55,-54,-56,-57,180,-58,214,247,261,]),'RKEY':([22,23,24,37,38,42,87,88,89,151,173,255,264,],[-53,-51,-52,-72,-73,-55,-54,-56,-57,-58,210,-75,-76,]),'GETS':([54,],[121,]),'LKEY':([54,],[122,]),'DELETE':([58,146,],[130,130,]),'INSERT':([58,146,],[131,131,]),'DELETE_AT':([58,146,],[132,132,]),'SEARCH':([58,146,],[133,133,]),'PUSH':([58,146,],[134,134,]),'IN':([98,],[154,]),'':([123,],[179,]),'QUESTION':([129,],[183,]),'ELSE':([225,],[252,]),'DO':([260,],[263,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instrucciones':([0,],[1,]),'asignacion':([0,25,67,147,192,258,263,],[2,68,68,68,68,68,68,]),'expression':([0,25,26,28,45,46,47,54,57,65,67,90,91,122,143,147,170,171,172,184,192,216,217,240,258,261,263,],[3,66,86,94,107,108,109,113,128,144,66,94,86,174,189,66,86,86,209,218,66,242,243,255,66,174,66,]),'funciones':([0,],[4,]),'comparacion':([0,25,26,54,67,91,147,170,171,192,258,263,],[5,69,85,114,69,148,69,207,208,69,69,69,]),'condicional':([0,25,67,147,192,258,263,],[6,70,70,70,70,70,70,]),'while':([0,25,67,147,192,253,258,263,],[7,73,73,73,73,259,73,73,]),'for':([0,25,67,147,192,258,263,267,],[8,72,72,72,72,72,72,268,]),'impresion':([0,25,67,147,192,258,263,],[9,71,71,71,71,71,71,]),'input':([0,25,67,147,192,258,263,],[10,74,74,74,74,74,74,]),'callFuncion':([0,25,54,67,147,192,258,263,],[11,75,115,75,75,75,75,75,]),'addValueHash':([0,25,67,147,192,258,263,],[12,76,76,76,76,76,76,]),'modValueHash':([0,25,67,147,192,258,263,],[13,77,77,77,77,77,77,]),'deleteValueHash':([0,25,67,147,192,258,263,],[14,78,78,78,78,78,78,]),'insertArray':([0,25,67,147,192,258,263,],[15,79,79,79,79,79,79,]),'deleteArray':([0,25,67,147,192,258,263,],[16,80,80,80,80,80,80,]),'searchStack':([0,25,67,147,192,258,263,],[17,82,82,82,82,82,82,]),'pushStack':([0,25,67,147,192,258,263,],[18,81,81,81,81,81,81,]),'metodoBoleano':([0,],[19,]),'opMatematicas':([0,25,28,54,67,101,102,147,158,164,166,168,192,199,258,263,],[20,83,93,120,83,157,163,83,200,202,204,206,83,93,83,83,]),'factor':([0,25,26,28,31,45,46,47,54,55,57,65,67,90,91,122,123,143,147,170,171,172,184,187,188,192,214,216,217,240,247,258,261,263,],[22,22,22,22,99,22,22,22,22,124,22,22,22,22,22,22,178,22,22,22,22,22,22,222,223,22,178,22,22,22,257,22,22,22,]),'term':([0,25,26,28,45,46,47,54,57,65,67,90,91,122,143,147,170,171,172,184,192,216,217,240,258,261,263,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'boleano':([0,25,26,28,45,46,47,54,57,65,67,90,91,122,143,147,170,171,172,184,192,216,217,240,258,261,263,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'encabezado':([0,],[25,]),'suma':([0,25,28,54,67,101,102,147,158,164,166,168,192,199,258,263,],[32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'resta':([0,25,28,54,67,101,102,147,158,164,166,168,192,199,258,263,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'multiplicacion':([0,25,28,54,67,101,102,147,158,164,166,168,192,199,258,263,],[34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'division':([0,25,28,54,67,101,102,147,158,164,166,168,192,199,258,263,],[35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'exponenciacion':([0,25,28,54,67,101,102,147,158,164,166,168,192,199,258,263,],[36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'operadores':([0,25,28,54,67,101,102,103,104,105,147,158,164,166,168,192,193,194,199,258,263,],[40,40,92,40,40,156,162,165,167,169,40,198,201,203,205,40,227,228,92,40,40,]),'enteros':([0,25,28,54,67,101,102,103,104,105,147,158,164,166,168,192,193,194,199,258,263,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'comparador':([3,66,86,113,],[45,45,45,45,]),'tipo_asignacion':([21,84,],[55,55,]),'repCuerpo':([25,67,147,192,258,263,],[64,145,191,226,262,266,]),'cuerpo':([25,67,147,192,258,263,],[67,67,67,67,67,67,]),'diccionario':([54,],[116,]),'getValueHash':([54,],[117,]),'array':([54,],[118,]),'stack':([54,],[119,]),'parametros':([56,155,180,],[127,197,215,]),'cuerpoHash':([122,261,],[173,264,]),'parametrosA':([123,214,],[175,241,]),'vacio':([123,],[177,]),'argumentosA':([185,],[219,]),'cond_else':([225,],[251,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> instrucciones","S'",1,None,None,None),
  ('instrucciones -> asignacion','instrucciones',1,'p_instrucciones','sintactico.py',6),
  ('instrucciones -> expression','instrucciones',1,'p_instrucciones','sintactico.py',7),
  ('instrucciones -> funciones','instrucciones',1,'p_instrucciones','sintactico.py',8),
  ('instrucciones -> comparacion','instrucciones',1,'p_instrucciones','sintactico.py',9),
  ('instrucciones -> condicional','instrucciones',1,'p_instrucciones','sintactico.py',10),
  ('instrucciones -> while','instrucciones',1,'p_instrucciones','sintactico.py',11),
  ('instrucciones -> for','instrucciones',1,'p_instrucciones','sintactico.py',12),
  ('instrucciones -> impresion','instrucciones',1,'p_instrucciones','sintactico.py',13),
  ('instrucciones -> input','instrucciones',1,'p_instrucciones','sintactico.py',14),
  ('instrucciones -> callFuncion','instrucciones',1,'p_instrucciones','sintactico.py',15),
  ('instrucciones -> addValueHash','instrucciones',1,'p_instrucciones','sintactico.py',16),
  ('instrucciones -> modValueHash','instrucciones',1,'p_instrucciones','sintactico.py',17),
  ('instrucciones -> deleteValueHash','instrucciones',1,'p_instrucciones','sintactico.py',18),
  ('instrucciones -> insertArray','instrucciones',1,'p_instrucciones','sintactico.py',19),
  ('instrucciones -> deleteArray','instrucciones',1,'p_instrucciones','sintactico.py',20),
  ('instrucciones -> searchStack','instrucciones',1,'p_instrucciones','sintactico.py',21),
  ('instrucciones -> pushStack','instrucciones',1,'p_instrucciones','sintactico.py',22),
  ('instrucciones -> metodoBoleano','instrucciones',1,'p_instrucciones','sintactico.py',23),
  ('instrucciones -> opMatematicas','instrucciones',1,'p_instrucciones','sintactico.py',24),
  ('cuerpo -> asignacion','cuerpo',1,'p_body','sintactico.py',28),
  ('cuerpo -> expression','cuerpo',1,'p_body','sintactico.py',29),
  ('cuerpo -> comparacion','cuerpo',1,'p_body','sintactico.py',30),
  ('cuerpo -> condicional','cuerpo',1,'p_body','sintactico.py',31),
  ('cuerpo -> impresion','cuerpo',1,'p_body','sintactico.py',32),
  ('cuerpo -> for','cuerpo',1,'p_body','sintactico.py',33),
  ('cuerpo -> while','cuerpo',1,'p_body','sintactico.py',34),
  ('cuerpo -> input','cuerpo',1,'p_body','sintactico.py',35),
  ('cuerpo -> callFuncion','cuerpo',1,'p_body','sintactico.py',36),
  ('cuerpo -> addValueHash','cuerpo',1,'p_body','sintactico.py',37),
  ('cuerpo -> modValueHash','cuerpo',1,'p_body','sintactico.py',38),
  ('cuerpo -> deleteValueHash','cuerpo',1,'p_body','sintactico.py',39),
  ('cuerpo -> insertArray','cuerpo',1,'p_body','sintactico.py',40),
  ('cuerpo -> deleteArray','cuerpo',1,'p_body','sintactico.py',41),
  ('cuerpo -> pushStack','cuerpo',1,'p_body','sintactico.py',42),
  ('cuerpo -> searchStack','cuerpo',1,'p_body','sintactico.py',43),
  ('cuerpo -> opMatematicas','cuerpo',1,'p_body','sintactico.py',44),
  ('asignacion -> VARIABLE ASIGN expression','asignacion',3,'p_asignacion','sintactico.py',48),
  ('asignacion -> VARIABLE ASIGN comparacion','asignacion',3,'p_asignacion','sintactico.py',49),
  ('asignacion -> VARIABLE ASIGN callFuncion','asignacion',3,'p_asignacion','sintactico.py',50),
  ('asignacion -> VARIABLE ASIGN diccionario','asignacion',3,'p_asignacion','sintactico.py',51),
  ('asignacion -> VARIABLE ASIGN getValueHash','asignacion',3,'p_asignacion','sintactico.py',52),
  ('asignacion -> VARIABLE ASIGN array','asignacion',3,'p_asignacion','sintactico.py',53),
  ('asignacion -> VARIABLE ASIGN stack','asignacion',3,'p_asignacion','sintactico.py',54),
  ('asignacion -> VARIABLE tipo_asignacion factor','asignacion',3,'p_asignacion','sintactico.py',55),
  ('asignacion -> VARIABLE ASIGN opMatematicas','asignacion',3,'p_asignacion','sintactico.py',56),
  ('tipo_asignacion -> PLUS ASIGN','tipo_asignacion',2,'p_tipo_asignacion','sintactico.py',59),
  ('tipo_asignacion -> MINUS ASIGN','tipo_asignacion',2,'p_tipo_asignacion','sintactico.py',60),
  ('tipo_asignacion -> TIMES ASIGN','tipo_asignacion',2,'p_tipo_asignacion','sintactico.py',61),
  ('tipo_asignacion -> DIVIDE ASIGN','tipo_asignacion',2,'p_tipo_asignacion','sintactico.py',62),
  ('tipo_asignacion -> EXPONENTIATION ASIGN','tipo_asignacion',2,'p_tipo_asignacion','sintactico.py',63),
  ('expression -> term','expression',1,'p_expression_term','sintactico.py',68),
  ('expression -> boleano','expression',1,'p_expression_term','sintactico.py',69),
  ('term -> factor','term',1,'p_term_factor','sintactico.py',73),
  ('factor -> NUMBER','factor',1,'p_factor_num','sintactico.py',76),
  ('factor -> STRING','factor',1,'p_factor_num','sintactico.py',77),
  ('factor -> FLOAT','factor',1,'p_factor_num','sintactico.py',78),
  ('factor -> VARIABLE','factor',1,'p_factor_num','sintactico.py',79),
  ('factor -> LPAR expression RPAR','factor',3,'p_factor_expr','sintactico.py',83),
  ('comparacion -> expression comparador expression','comparacion',3,'p_comparacion','sintactico.py',87),
  ('comparacion -> expression comparador expression AND comparacion','comparacion',5,'p_comparacion','sintactico.py',88),
  ('comparacion -> expression comparador expression OR comparacion','comparacion',5,'p_comparacion','sintactico.py',89),
  ('comparacion -> expression AND expression','comparacion',3,'p_comparacion','sintactico.py',90),
  ('comparacion -> expression OR expression','comparacion',3,'p_comparacion','sintactico.py',91),
  ('comparador -> GREATER','comparador',1,'p_comparador','sintactico.py',96),
  ('comparador -> GREATER_OR_EQUAL','comparador',1,'p_comparador','sintactico.py',97),
  ('comparador -> MINOR','comparador',1,'p_comparador','sintactico.py',98),
  ('comparador -> MINOR_OR_EQUAL','comparador',1,'p_comparador','sintactico.py',99),
  ('comparador -> ASIGN ASIGN','comparador',2,'p_comparador','sintactico.py',100),
  ('comparador -> NOT ASIGN','comparador',2,'p_comparador','sintactico.py',101),
  ('impresion -> PUTS factor','impresion',2,'p_puts','sintactico.py',107),
  ('input -> VARIABLE ASIGN GETS','input',3,'p_gets','sintactico.py',110),
  ('boleano -> TRUE','boleano',1,'p_boolean','sintactico.py',114),
  ('boleano -> FALSE','boleano',1,'p_boolean','sintactico.py',115),
  ('diccionario -> LKEY cuerpoHash RKEY','diccionario',3,'p_hash','sintactico.py',120),
  ('cuerpoHash -> expression ASIGN GREATER expression','cuerpoHash',4,'p_body_hash','sintactico.py',123),
  ('cuerpoHash -> expression ASIGN GREATER expression COMMA cuerpoHash','cuerpoHash',6,'p_body_hash','sintactico.py',124),
  ('getValueHash -> VARIABLE LCOR expression RCOR','getValueHash',4,'p_get_hash','sintactico.py',128),
  ('addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression','addValueHash',6,'p_add_hash','sintactico.py',131),
  ('modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression','modValueHash',6,'p_mod_hash','sintactico.py',134),
  ('deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR','deleteValueHash',6,'p_del_hash','sintactico.py',137),
  ('metodoBoleano -> VARIABLE POINT VARIABLE QUESTION LPAR expression RPAR','metodoBoleano',7,'p_boolean_method','sintactico.py',141),
  ('metodoBoleano -> VARIABLE POINT VARIABLE QUESTION LPAR RPAR','metodoBoleano',6,'p_boolean_method','sintactico.py',142),
  ('while -> WHILE LPAR comparacion RPAR repCuerpo END','while',6,'p_while','sintactico.py',150),
  ('while -> WHILE LPAR comparacion RPAR repCuerpo END while','while',7,'p_while','sintactico.py',151),
  ('repCuerpo -> cuerpo','repCuerpo',1,'p_repCuerpo','sintactico.py',154),
  ('repCuerpo -> cuerpo repCuerpo','repCuerpo',2,'p_repCuerpo','sintactico.py',155),
  ('parametrosA -> factor','parametrosA',1,'p_parA_function','sintactico.py',160),
  ('parametrosA -> factor COMMA parametrosA','parametrosA',3,'p_parA_function','sintactico.py',161),
  ('array -> LCOR parametrosA RCOR','array',3,'p_array','sintactico.py',164),
  ('array -> LCOR RCOR','array',2,'p_array','sintactico.py',165),
  ('argumentosA -> NUMBER COMMA factor','argumentosA',3,'p_argumentos_array','sintactico.py',169),
  ('insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR','insertArray',6,'p_insert_array','sintactico.py',173),
  ('deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR','deleteArray',6,'p_delete_array','sintactico.py',177),
  ('for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END','for',10,'p_for','sintactico.py',185),
  ('for -> FOR VARIABLE IN NUMBER POINT POINT NUMBER DO repCuerpo END for','for',11,'p_for','sintactico.py',186),
  ('vacio -> ','vacio',1,'p_vacio','sintactico.py',190),
  ('stack -> LCOR parametrosA RCOR','stack',3,'p_stack','sintactico.py',192),
  ('stack -> LCOR vacio RCOR','stack',3,'p_stack','sintactico.py',193),
  ('searchStack -> VARIABLE POINT SEARCH LPAR factor RPAR','searchStack',6,'p_search_stack','sintactico.py',196),
  ('pushStack -> VARIABLE POINT PUSH LPAR factor RPAR','pushStack',6,'p_push_stack','sintactico.py',199),
  ('opMatematicas -> suma','opMatematicas',1,'p_opMatematicas','sintactico.py',214),
  ('opMatematicas -> resta','opMatematicas',1,'p_opMatematicas','sintactico.py',215),
  ('opMatematicas -> multiplicacion','opMatematicas',1,'p_opMatematicas','sintactico.py',216),
  ('opMatematicas -> division','opMatematicas',1,'p_opMatematicas','sintactico.py',217),
  ('opMatematicas -> exponenciacion','opMatematicas',1,'p_opMatematicas','sintactico.py',218),
  ('suma -> VARIABLE PLUS NUMBER','suma',3,'p_suma','sintactico.py',222),
  ('suma -> operadores PLUS operadores','suma',3,'p_suma','sintactico.py',223),
  ('suma -> operadores PLUS opMatematicas','suma',3,'p_suma','sintactico.py',224),
  ('suma -> operadores PLUS LPAR operadores RPAR','suma',5,'p_suma','sintactico.py',225),
  ('suma -> operadores PLUS LPAR opMatematicas RPAR','suma',5,'p_suma','sintactico.py',226),
  ('resta -> VARIABLE MINUS NUMBER','resta',3,'p_resta','sintactico.py',230),
  ('resta -> operadores MINUS operadores','resta',3,'p_resta','sintactico.py',231),
  ('resta -> operadores MINUS opMatematicas','resta',3,'p_resta','sintactico.py',232),
  ('resta -> operadores MINUS LPAR operadores RPAR','resta',5,'p_resta','sintactico.py',233),
  ('resta -> operadores MINUS LPAR opMatematicas RPAR','resta',5,'p_resta','sintactico.py',234),
  ('multiplicacion -> operadores TIMES operadores','multiplicacion',3,'p_multiplicacion','sintactico.py',238),
  ('multiplicacion -> operadores TIMES LPAR operadores RPAR','multiplicacion',5,'p_multiplicacion','sintactico.py',239),
  ('multiplicacion -> operadores TIMES LPAR opMatematicas RPAR','multiplicacion',5,'p_multiplicacion','sintactico.py',240),
  ('division -> operadores DIVIDE operadores','division',3,'p_divicion','sintactico.py',244),
  ('division -> operadores DIVIDE LPAR operadores RPAR','division',5,'p_divicion','sintactico.py',245),
  ('division -> operadores DIVIDE LPAR opMatematicas RPAR','division',5,'p_divicion','sintactico.py',246),
  ('exponenciacion -> operadores EXPONENTIATION operadores','exponenciacion',3,'p_exponenciacion','sintactico.py',250),
  ('exponenciacion -> LPAR operadores RPAR EXPONENTIATION operadores','exponenciacion',5,'p_exponenciacion','sintactico.py',251),
  ('exponenciacion -> LPAR opMatematicas RPAR EXPONENTIATION operadores','exponenciacion',5,'p_exponenciacion','sintactico.py',252),
  ('operadores -> enteros','operadores',1,'p_operadores','sintactico.py',256),
  ('operadores -> FLOAT','operadores',1,'p_operadores','sintactico.py',257),
  ('enteros -> NUMBER','enteros',1,'p_enteros','sintactico.py',261),
  ('enteros -> MINUS NUMBER','enteros',2,'p_enteros','sintactico.py',262),
  ('parametros -> VARIABLE','parametros',1,'p_par_function','sintactico.py',270),
  ('parametros -> VARIABLE COMMA parametros','parametros',3,'p_par_function','sintactico.py',271),
  ('encabezado -> DEF VARIABLE LPAR RPAR','encabezado',4,'p_header_function','sintactico.py',275),
  ('encabezado -> DEF VARIABLE LPAR parametros RPAR','encabezado',5,'p_header_function','sintactico.py',276),
  ('funciones -> encabezado repCuerpo END','funciones',3,'p_function','sintactico.py',280),
  ('funciones -> encabezado RETURN expression END','funciones',4,'p_function','sintactico.py',281),
  ('funciones -> encabezado repCuerpo RETURN expression END','funciones',5,'p_function','sintactico.py',282),
  ('callFuncion -> VARIABLE LPAR RPAR','callFuncion',3,'p_call_function','sintactico.py',286),
  ('callFuncion -> VARIABLE LPAR parametros RPAR','callFuncion',4,'p_call_function','sintactico.py',287),
  ('condicional -> IF comparacion D_POINT repCuerpo END','condicional',5,'p_cond_if','sintactico.py',294),
  ('condicional -> IF comparacion D_POINT repCuerpo END cond_else','condicional',6,'p_cond_if','sintactico.py',295),
  ('cond_else -> ELSE D_POINT repCuerpo END','cond_else',4,'p_cond_else','sintactico.py',299),
]
