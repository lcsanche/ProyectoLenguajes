
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALIAS AND ASIGN COMMA DEF DELETE DELETE_AT DIVIDE DO D_POINT EACH ELSE END ENSURE EXPONENTIATION FALSE FLOAT GETS GREATER GREATER_OR_EQUAL IF IN INCLUDE INSERT LCOR LKEY LPAR MINOR MINOR_OR_EQUAL MINUS NOT NUMBER OR PLUS POINT PUSH PUTS QUESTION RCOR RETURN RKEY RPAR SEARCH SELF STRING TIMES TRUE VARIABLE WHILEinstrucciones : asignacion\n                    | expression\n                    | funciones\n                    | comparacion\n                    | condicional\n                    | while\n                    | impresion\n                    | input\n                    | callFuncion\n                    | addValueHash\n                    | modValueHash\n                    | deleteValueHash\n                    | insertArray\n                    | deleteArray\n                    \n    \n     cuerpo : asignacion\n                | expression\n                | comparacion\n                | condicional\n                | impresion\n                | input\n                | callFuncion\n                | addValueHash\n                | modValueHash\n                | deleteValueHash\n                | insertArray\n                | deleteArray\n    asignacion : VARIABLE ASIGN expression\n                | VARIABLE ASIGN comparacion\n                | VARIABLE ASIGN callFuncion\n                | VARIABLE ASIGN diccionario\n                | VARIABLE ASIGN getValueHash\n                | VARIABLE ASIGN array\n    expression : term \n                    | boleano\n    term : factorfactor : NUMBER\n                | STRING\n                | FLOAT\n                | VARIABLE\n    factor : LPAR expression RPARexpression : expression PLUS termexpression : expression MINUS termterm : term TIMES factorterm : term DIVIDE factorterm : term EXPONENTIATION factorcomparacion : expression comparador expression\n                    | expression comparador expression AND comparacion\n                    | expression comparador expression OR comparacion\n    comparador : GREATER \n                | GREATER_OR_EQUAL\n                | MINOR\n                | MINOR_OR_EQUAL\n                | ASIGN ASIGN\n                | NOT ASIGN\n    condicional : IF comparacion D_POINT cuerpo END\n                    | IF comparacion D_POINT cuerpo END cond_else\n    cond_else : ELSE D_POINT cuerpo ENDimpresion : PUTS STRINGinput : VARIABLE ASIGN GETS parametros : VARIABLE\n                    | VARIABLE COMMA parametros\n    encabezado : DEF VARIABLE LPAR RPAR\n                    | DEF VARIABLE LPAR parametros RPAR\n    funciones : encabezado cuerpo END\n                | encabezado RETURN expression END\n                | encabezado cuerpo RETURN expression END\n    callFuncion : VARIABLE LPAR RPAR\n                | VARIABLE LPAR parametros RPAR\n    boleano : TRUE \n                | FALSE\n    diccionario : LKEY cuerpoHash RKEYcuerpoHash : expression ASIGN GREATER expression\n                    | expression ASIGN GREATER expression COMMA cuerpoHash\n    getValueHash : VARIABLE LCOR expression RCORaddValueHash : VARIABLE LCOR expression RCOR ASIGN expressionmodValueHash : VARIABLE LCOR expression RCOR ASIGN expressiondeleteValueHash : VARIABLE POINT DELETE LPAR expression RPARwhile : WHILE LPAR comparacion RPAR cuerpo END\n            | WHILE LPAR comparacion RPAR cuerpo END while\n     parametrosA : factor\n                    | factor COMMA parametrosA\n    array : LCOR parametrosA RCOR\n             | LCOR RCOR\n    argumentosA : NUMBER\n                    | NUMBER COMMA factor\n    insertArray : VARIABLE POINT INSERT LPAR argumentosA RPAR\n    deleteArray : VARIABLE POINT DELETE_AT LPAR NUMBER RPAR\n    '
    
_lr_action_items = {'VARIABLE':([0,19,20,22,29,31,32,33,34,35,36,37,40,41,42,44,45,46,48,64,71,72,81,82,94,96,99,100,101,102,108,111,117,118,126,128,136,138,143,150,152,],[16,16,63,63,67,63,63,63,-49,-50,-51,-52,73,83,63,63,63,63,63,63,-53,-54,63,63,63,16,83,63,63,63,83,63,16,-62,63,63,-63,63,63,16,63,]),'IF':([0,19,96,117,118,136,150,],[20,20,20,20,-62,-63,20,]),'WHILE':([0,147,],[21,21,]),'PUTS':([0,19,96,117,118,136,150,],[23,23,23,23,-62,-63,23,]),'TRUE':([0,19,20,22,33,34,35,36,37,40,42,48,64,71,72,81,94,96,100,101,102,111,117,118,128,136,138,150,152,],[27,27,27,27,27,-49,-50,-51,-52,27,27,27,27,-53,-54,27,27,27,27,27,27,27,27,-62,27,-63,27,27,27,]),'FALSE':([0,19,20,22,33,34,35,36,37,40,42,48,64,71,72,81,94,96,100,101,102,111,117,118,128,136,138,150,152,],[28,28,28,28,28,-49,-50,-51,-52,28,28,28,28,-53,-54,28,28,28,28,28,28,28,28,-62,28,-63,28,28,28,]),'DEF':([0,],[29,]),'NUMBER':([0,19,20,22,31,32,33,34,35,36,37,40,42,44,45,46,48,64,71,72,81,82,94,96,100,101,102,111,112,113,117,118,126,128,136,138,143,150,152,],[25,25,25,25,25,25,25,-49,-50,-51,-52,25,25,25,25,25,25,25,-53,-54,25,25,25,25,25,25,25,25,131,132,25,-62,25,25,-63,25,25,25,25,]),'STRING':([0,19,20,22,23,31,32,33,34,35,36,37,40,42,44,45,46,48,64,71,72,81,82,94,96,100,101,102,111,117,118,126,128,136,138,143,150,152,],[24,24,24,24,66,24,24,24,-49,-50,-51,-52,24,24,24,24,24,24,24,-53,-54,24,24,24,24,24,24,24,24,24,-62,24,24,-63,24,24,24,24,]),'FLOAT':([0,19,20,22,31,32,33,34,35,36,37,40,42,44,45,46,48,64,71,72,81,82,94,96,100,101,102,111,117,118,126,128,136,138,143,150,152,],[30,30,30,30,30,30,30,-49,-50,-51,-52,30,30,30,30,30,30,30,-53,-54,30,30,30,30,30,30,30,30,30,-62,30,30,-63,30,30,30,30,]),'LPAR':([0,16,19,20,21,22,31,32,33,34,35,36,37,40,42,44,45,46,48,64,67,71,72,73,81,82,87,88,89,94,96,100,101,102,111,117,118,126,128,136,138,143,150,152,],[22,41,22,22,64,22,22,22,22,-49,-50,-51,-52,22,22,22,22,22,22,22,99,-53,-54,41,22,22,111,112,113,22,22,22,22,22,22,22,-62,22,22,-63,22,22,22,22,]),'$end':([1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,24,25,26,27,28,30,63,66,68,69,70,73,74,75,76,77,78,79,80,84,90,91,92,93,98,106,109,115,120,121,123,125,133,134,137,140,141,142,144,145,147,151,155,],[0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-39,-33,-34,-37,-36,-35,-69,-70,-38,-39,-58,-41,-42,-46,-39,-27,-28,-29,-30,-31,-32,-59,-67,-43,-44,-45,-64,-40,-83,-68,-65,-47,-48,-71,-82,-66,-55,-74,-75,-77,-86,-87,-56,-78,-79,-57,]),'PLUS':([3,16,17,18,24,25,26,27,28,30,49,62,63,65,68,69,70,73,74,86,90,91,92,95,98,104,114,122,129,140,148,],[31,-39,-33,-34,-37,-36,-35,-69,-70,-38,31,31,-39,31,-41,-42,31,-39,31,31,-43,-44,-45,31,-40,31,31,31,31,31,31,]),'MINUS':([3,16,17,18,24,25,26,27,28,30,49,62,63,65,68,69,70,73,74,86,90,91,92,95,98,104,114,122,129,140,148,],[32,-39,-33,-34,-37,-36,-35,-69,-70,-38,32,32,-39,32,-41,-42,32,-39,32,32,-43,-44,-45,32,-40,32,32,32,32,32,32,]),'GREATER':([3,16,17,18,24,25,26,27,28,30,49,62,63,68,69,73,74,90,91,92,98,124,],[34,-39,-33,-34,-37,-36,-35,-69,-70,-38,34,34,-39,-41,-42,-39,34,-43,-44,-45,-40,138,]),'GREATER_OR_EQUAL':([3,16,17,18,24,25,26,27,28,30,49,62,63,68,69,73,74,90,91,92,98,],[35,-39,-33,-34,-37,-36,-35,-69,-70,-38,35,35,-39,-41,-42,-39,35,-43,-44,-45,-40,]),'MINOR':([3,16,17,18,24,25,26,27,28,30,49,62,63,68,69,73,74,90,91,92,98,],[36,-39,-33,-34,-37,-36,-35,-69,-70,-38,36,36,-39,-41,-42,-39,36,-43,-44,-45,-40,]),'MINOR_OR_EQUAL':([3,16,17,18,24,25,26,27,28,30,49,62,63,68,69,73,74,90,91,92,98,],[37,-39,-33,-34,-37,-36,-35,-69,-70,-38,37,37,-39,-41,-42,-39,37,-43,-44,-45,-40,]),'ASIGN':([3,16,17,18,24,25,26,27,28,30,38,39,49,62,63,68,69,73,74,90,91,92,98,104,110,],[38,40,-33,-34,-37,-36,-35,-69,-70,-38,71,72,38,38,-39,-41,-42,-39,38,-43,-44,-45,-40,124,128,]),'NOT':([3,16,17,18,24,25,26,27,28,30,49,62,63,68,69,73,74,90,91,92,98,],[39,-39,-33,-34,-37,-36,-35,-69,-70,-38,39,39,-39,-41,-42,-39,39,-43,-44,-45,-40,]),'LCOR':([16,40,73,],[42,82,102,]),'POINT':([16,],[43,]),'TIMES':([16,17,24,25,26,30,63,68,69,73,90,91,92,98,],[-39,44,-37,-36,-35,-38,-39,44,44,-39,-43,-44,-45,-40,]),'DIVIDE':([16,17,24,25,26,30,63,68,69,73,90,91,92,98,],[-39,45,-37,-36,-35,-38,-39,45,45,-39,-43,-44,-45,-40,]),'EXPONENTIATION':([16,17,24,25,26,30,63,68,69,73,90,91,92,98,],[-39,46,-37,-36,-35,-38,-39,46,46,-39,-43,-44,-45,-40,]),'END':([16,17,18,24,25,26,27,28,30,47,49,50,51,52,53,54,55,56,57,58,59,60,63,66,68,69,70,73,74,75,76,77,78,79,80,84,90,91,92,95,98,106,109,114,116,120,121,123,125,134,135,137,140,141,142,144,145,153,155,],[-39,-33,-34,-37,-36,-35,-69,-70,-38,93,-16,-15,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-39,-58,-41,-42,-46,-39,-27,-28,-29,-30,-31,-32,-59,-67,-43,-44,-45,115,-40,-83,-68,133,134,-47,-48,-71,-82,-55,147,-74,-75,-77,-86,-87,-56,155,-57,]),'RETURN':([16,17,18,19,24,25,26,27,28,30,47,49,50,51,52,53,54,55,56,57,58,59,60,63,66,68,69,70,73,74,75,76,77,78,79,80,84,90,91,92,98,106,109,118,120,121,123,125,134,136,137,140,141,142,144,145,155,],[-39,-33,-34,48,-37,-36,-35,-69,-70,-38,94,-16,-15,-17,-18,-19,-20,-21,-22,-23,-24,-25,-26,-39,-58,-41,-42,-46,-39,-27,-28,-29,-30,-31,-32,-59,-67,-43,-44,-45,-40,-83,-68,-62,-47,-48,-71,-82,-55,-63,-74,-75,-77,-86,-87,-56,-57,]),'RPAR':([17,18,24,25,26,27,28,30,41,63,65,68,69,70,83,85,90,91,92,97,98,99,119,120,121,127,129,130,131,132,149,],[-33,-34,-37,-36,-35,-69,-70,-38,84,-39,98,-41,-42,-46,-60,109,-43,-44,-45,117,-40,118,136,-47,-48,-61,141,142,-84,144,-85,]),'AND':([17,18,24,25,26,27,28,30,63,68,69,70,90,91,92,98,],[-33,-34,-37,-36,-35,-69,-70,-38,-39,-41,-42,100,-43,-44,-45,-40,]),'OR':([17,18,24,25,26,27,28,30,63,68,69,70,90,91,92,98,],[-33,-34,-37,-36,-35,-69,-70,-38,-39,-41,-42,101,-43,-44,-45,-40,]),'D_POINT':([17,18,24,25,26,27,28,30,61,63,68,69,70,90,91,92,98,120,121,146,],[-33,-34,-37,-36,-35,-69,-70,-38,96,-39,-41,-42,-46,-43,-44,-45,-40,-47,-48,150,]),'RCOR':([17,18,24,25,26,27,28,30,63,68,69,82,86,90,91,92,98,105,107,122,139,],[-33,-34,-37,-36,-35,-69,-70,-38,-39,-41,-42,106,110,-43,-44,-45,-40,125,-80,137,-81,]),'COMMA':([17,18,24,25,26,27,28,30,63,68,69,83,90,91,92,98,107,131,148,],[-33,-34,-37,-36,-35,-69,-70,-38,-39,-41,-42,108,-43,-44,-45,-40,126,143,152,]),'RKEY':([17,18,24,25,26,27,28,30,63,68,69,90,91,92,98,103,148,154,],[-33,-34,-37,-36,-35,-69,-70,-38,-39,-41,-42,-43,-44,-45,-40,123,-72,-73,]),'GETS':([40,],[80,]),'LKEY':([40,],[81,]),'DELETE':([43,],[87,]),'INSERT':([43,],[88,]),'DELETE_AT':([43,],[89,]),'ELSE':([134,],[146,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'instrucciones':([0,],[1,]),'asignacion':([0,19,96,117,150,],[2,50,50,50,50,]),'expression':([0,19,20,22,33,40,42,48,64,81,94,96,100,101,102,111,117,128,138,150,152,],[3,49,62,65,70,74,86,95,62,104,114,49,62,62,122,129,49,140,148,49,104,]),'funciones':([0,],[4,]),'comparacion':([0,19,20,40,64,96,100,101,117,150,],[5,51,61,75,97,51,120,121,51,51,]),'condicional':([0,19,96,117,150,],[6,52,52,52,52,]),'while':([0,147,],[7,151,]),'impresion':([0,19,96,117,150,],[8,53,53,53,53,]),'input':([0,19,96,117,150,],[9,54,54,54,54,]),'callFuncion':([0,19,40,96,117,150,],[10,55,76,55,55,55,]),'addValueHash':([0,19,96,117,150,],[11,56,56,56,56,]),'modValueHash':([0,19,96,117,150,],[12,57,57,57,57,]),'deleteValueHash':([0,19,96,117,150,],[13,58,58,58,58,]),'insertArray':([0,19,96,117,150,],[14,59,59,59,59,]),'deleteArray':([0,19,96,117,150,],[15,60,60,60,60,]),'term':([0,19,20,22,31,32,33,40,42,48,64,81,94,96,100,101,102,111,117,128,138,150,152,],[17,17,17,17,68,69,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'boleano':([0,19,20,22,33,40,42,48,64,81,94,96,100,101,102,111,117,128,138,150,152,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'encabezado':([0,],[19,]),'factor':([0,19,20,22,31,32,33,40,42,44,45,46,48,64,81,82,94,96,100,101,102,111,117,126,128,138,143,150,152,],[26,26,26,26,26,26,26,26,26,90,91,92,26,26,26,107,26,26,26,26,26,26,26,107,26,26,149,26,26,]),'comparador':([3,49,62,74,],[33,33,33,33,]),'cuerpo':([19,96,117,150,],[47,116,135,153,]),'diccionario':([40,],[77,]),'getValueHash':([40,],[78,]),'array':([40,],[79,]),'parametros':([41,99,108,],[85,119,127,]),'cuerpoHash':([81,152,],[103,154,]),'parametrosA':([82,126,],[105,139,]),'argumentosA':([112,],[130,]),'cond_else':([134,],[145,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> instrucciones","S'",1,None,None,None),
  ('instrucciones -> asignacion','instrucciones',1,'p_instrucciones','sintactico.py',6),
  ('instrucciones -> expression','instrucciones',1,'p_instrucciones','sintactico.py',7),
  ('instrucciones -> funciones','instrucciones',1,'p_instrucciones','sintactico.py',8),
  ('instrucciones -> comparacion','instrucciones',1,'p_instrucciones','sintactico.py',9),
  ('instrucciones -> condicional','instrucciones',1,'p_instrucciones','sintactico.py',10),
  ('instrucciones -> while','instrucciones',1,'p_instrucciones','sintactico.py',11),
  ('instrucciones -> impresion','instrucciones',1,'p_instrucciones','sintactico.py',12),
  ('instrucciones -> input','instrucciones',1,'p_instrucciones','sintactico.py',13),
  ('instrucciones -> callFuncion','instrucciones',1,'p_instrucciones','sintactico.py',14),
  ('instrucciones -> addValueHash','instrucciones',1,'p_instrucciones','sintactico.py',15),
  ('instrucciones -> modValueHash','instrucciones',1,'p_instrucciones','sintactico.py',16),
  ('instrucciones -> deleteValueHash','instrucciones',1,'p_instrucciones','sintactico.py',17),
  ('instrucciones -> insertArray','instrucciones',1,'p_instrucciones','sintactico.py',18),
  ('instrucciones -> deleteArray','instrucciones',1,'p_instrucciones','sintactico.py',19),
  ('cuerpo -> asignacion','cuerpo',1,'p_body','sintactico.py',25),
  ('cuerpo -> expression','cuerpo',1,'p_body','sintactico.py',26),
  ('cuerpo -> comparacion','cuerpo',1,'p_body','sintactico.py',27),
  ('cuerpo -> condicional','cuerpo',1,'p_body','sintactico.py',28),
  ('cuerpo -> impresion','cuerpo',1,'p_body','sintactico.py',29),
  ('cuerpo -> input','cuerpo',1,'p_body','sintactico.py',30),
  ('cuerpo -> callFuncion','cuerpo',1,'p_body','sintactico.py',31),
  ('cuerpo -> addValueHash','cuerpo',1,'p_body','sintactico.py',32),
  ('cuerpo -> modValueHash','cuerpo',1,'p_body','sintactico.py',33),
  ('cuerpo -> deleteValueHash','cuerpo',1,'p_body','sintactico.py',34),
  ('cuerpo -> insertArray','cuerpo',1,'p_body','sintactico.py',35),
  ('cuerpo -> deleteArray','cuerpo',1,'p_body','sintactico.py',36),
  ('asignacion -> VARIABLE ASIGN expression','asignacion',3,'p_asignacion','sintactico.py',40),
  ('asignacion -> VARIABLE ASIGN comparacion','asignacion',3,'p_asignacion','sintactico.py',41),
  ('asignacion -> VARIABLE ASIGN callFuncion','asignacion',3,'p_asignacion','sintactico.py',42),
  ('asignacion -> VARIABLE ASIGN diccionario','asignacion',3,'p_asignacion','sintactico.py',43),
  ('asignacion -> VARIABLE ASIGN getValueHash','asignacion',3,'p_asignacion','sintactico.py',44),
  ('asignacion -> VARIABLE ASIGN array','asignacion',3,'p_asignacion','sintactico.py',45),
  ('expression -> term','expression',1,'p_expression_term','sintactico.py',50),
  ('expression -> boleano','expression',1,'p_expression_term','sintactico.py',51),
  ('term -> factor','term',1,'p_term_factor','sintactico.py',55),
  ('factor -> NUMBER','factor',1,'p_factor_num','sintactico.py',58),
  ('factor -> STRING','factor',1,'p_factor_num','sintactico.py',59),
  ('factor -> FLOAT','factor',1,'p_factor_num','sintactico.py',60),
  ('factor -> VARIABLE','factor',1,'p_factor_num','sintactico.py',61),
  ('factor -> LPAR expression RPAR','factor',3,'p_factor_expr','sintactico.py',65),
  ('expression -> expression PLUS term','expression',3,'p_expression_plus','sintactico.py',69),
  ('expression -> expression MINUS term','expression',3,'p_expression_minus','sintactico.py',72),
  ('term -> term TIMES factor','term',3,'p_term_times','sintactico.py',75),
  ('term -> term DIVIDE factor','term',3,'p_term_div','sintactico.py',78),
  ('term -> term EXPONENTIATION factor','term',3,'p_term_exp','sintactico.py',81),
  ('comparacion -> expression comparador expression','comparacion',3,'p_comparacion','sintactico.py',85),
  ('comparacion -> expression comparador expression AND comparacion','comparacion',5,'p_comparacion','sintactico.py',86),
  ('comparacion -> expression comparador expression OR comparacion','comparacion',5,'p_comparacion','sintactico.py',87),
  ('comparador -> GREATER','comparador',1,'p_comparador','sintactico.py',91),
  ('comparador -> GREATER_OR_EQUAL','comparador',1,'p_comparador','sintactico.py',92),
  ('comparador -> MINOR','comparador',1,'p_comparador','sintactico.py',93),
  ('comparador -> MINOR_OR_EQUAL','comparador',1,'p_comparador','sintactico.py',94),
  ('comparador -> ASIGN ASIGN','comparador',2,'p_comparador','sintactico.py',95),
  ('comparador -> NOT ASIGN','comparador',2,'p_comparador','sintactico.py',96),
  ('condicional -> IF comparacion D_POINT cuerpo END','condicional',5,'p_cond_if','sintactico.py',101),
  ('condicional -> IF comparacion D_POINT cuerpo END cond_else','condicional',6,'p_cond_if','sintactico.py',102),
  ('cond_else -> ELSE D_POINT cuerpo END','cond_else',4,'p_cond_else','sintactico.py',106),
  ('impresion -> PUTS STRING','impresion',2,'p_puts','sintactico.py',110),
  ('input -> VARIABLE ASIGN GETS','input',3,'p_gets','sintactico.py',113),
  ('parametros -> VARIABLE','parametros',1,'p_par_function','sintactico.py',117),
  ('parametros -> VARIABLE COMMA parametros','parametros',3,'p_par_function','sintactico.py',118),
  ('encabezado -> DEF VARIABLE LPAR RPAR','encabezado',4,'p_header_function','sintactico.py',122),
  ('encabezado -> DEF VARIABLE LPAR parametros RPAR','encabezado',5,'p_header_function','sintactico.py',123),
  ('funciones -> encabezado cuerpo END','funciones',3,'p_function','sintactico.py',127),
  ('funciones -> encabezado RETURN expression END','funciones',4,'p_function','sintactico.py',128),
  ('funciones -> encabezado cuerpo RETURN expression END','funciones',5,'p_function','sintactico.py',129),
  ('callFuncion -> VARIABLE LPAR RPAR','callFuncion',3,'p_call_function','sintactico.py',133),
  ('callFuncion -> VARIABLE LPAR parametros RPAR','callFuncion',4,'p_call_function','sintactico.py',134),
  ('boleano -> TRUE','boleano',1,'p_boolean','sintactico.py',138),
  ('boleano -> FALSE','boleano',1,'p_boolean','sintactico.py',139),
  ('diccionario -> LKEY cuerpoHash RKEY','diccionario',3,'p_hash','sintactico.py',144),
  ('cuerpoHash -> expression ASIGN GREATER expression','cuerpoHash',4,'p_body_hash','sintactico.py',147),
  ('cuerpoHash -> expression ASIGN GREATER expression COMMA cuerpoHash','cuerpoHash',6,'p_body_hash','sintactico.py',148),
  ('getValueHash -> VARIABLE LCOR expression RCOR','getValueHash',4,'p_get_hash','sintactico.py',152),
  ('addValueHash -> VARIABLE LCOR expression RCOR ASIGN expression','addValueHash',6,'p_add_hash','sintactico.py',155),
  ('modValueHash -> VARIABLE LCOR expression RCOR ASIGN expression','modValueHash',6,'p_mod_hash','sintactico.py',158),
  ('deleteValueHash -> VARIABLE POINT DELETE LPAR expression RPAR','deleteValueHash',6,'p_del_hash','sintactico.py',161),
  ('while -> WHILE LPAR comparacion RPAR cuerpo END','while',6,'p_while','sintactico.py',168),
  ('while -> WHILE LPAR comparacion RPAR cuerpo END while','while',7,'p_while','sintactico.py',169),
  ('parametrosA -> factor','parametrosA',1,'p_parA_function','sintactico.py',174),
  ('parametrosA -> factor COMMA parametrosA','parametrosA',3,'p_parA_function','sintactico.py',175),
  ('array -> LCOR parametrosA RCOR','array',3,'p_array','sintactico.py',178),
  ('array -> LCOR RCOR','array',2,'p_array','sintactico.py',179),
  ('argumentosA -> NUMBER','argumentosA',1,'p_argumentos_array','sintactico.py',183),
  ('argumentosA -> NUMBER COMMA factor','argumentosA',3,'p_argumentos_array','sintactico.py',184),
  ('insertArray -> VARIABLE POINT INSERT LPAR argumentosA RPAR','insertArray',6,'p_insert_array','sintactico.py',187),
  ('deleteArray -> VARIABLE POINT DELETE_AT LPAR NUMBER RPAR','deleteArray',6,'p_delete_array','sintactico.py',191),
]
